// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/ClientTrading/SpdrAwayExecution.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/ClientTrading/SpdrAwayExecution.proto</summary>
  public static partial class SpdrAwayExecutionReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/ClientTrading/SpdrAwayExecution.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrAwayExecutionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5Qcm90b2J1Zi9DbGllbnRUcmFkaW5nL1NwZHJBd2F5RXhlY3V0aW9uLnBy",
            "b3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5w",
            "cm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byK/CgoRU3Bk",
            "ckF3YXlFeGVjdXRpb24SMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2NrLnBy",
            "b3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI5CgRwa2V5GAIgASgLMisuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5TcGRyQXdheUV4ZWN1dGlvbi5QS2V5EhMKC2ZpbGxf",
            "bnVtYmVyGGQgASgDEhQKC2VuZ2luZV9uYW1lGMgBIAEoCRI0CgtzcGRyX3Nv",
            "dXJjZRhtIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuU3BkclNvdXJjZRI0",
            "CgtleGVjX3N0YXR1cxhwIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuRXhl",
            "Y1N0YXR1cxIXCg9jbGllbnRfb3JkZXJfaWQYcyABKAkSGAoQc3JjX3JvdXRp",
            "bmdfY29kZRh2IAEoCRIVCg1yaXNrX2dyb3VwX2lkGHkgASgDEi8KB3NlY19r",
            "ZXkYfCABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLk9wdGlvbktleRIyCghz",
            "ZWNfdHlwZRh/IAEoDjIgLnNwaWRlcnJvY2sucHJvdG9idWYuU3BkcktleVR5",
            "cGUSMQoJZXhlY19yb2xlGIIBIAEoDjIdLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "RXhlY1JvbGUSGAoPZXh0X2V4ZWNfYnJva2VyGIUBIAEoCRIwCglmaWxsX3Np",
            "ZGUYiAEgASgOMhwuc3BpZGVycm9jay5wcm90b2J1Zi5CdXlTZWxsEhMKCmZp",
            "bGxfcHJpY2UYiwEgASgBEjgKD2ZpbGxfcHJpY2VfdHlwZRiOASABKA4yHi5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLlByaWNlVHlwZRIWCg1maWxsX3F1YW50aXR5",
            "GJEBIAEoBRITCgpjaGlsZF9zaXplGJQBIAEoBRISCglmaWxsX2V4Y2gYlwEg",
            "ASgJEi4KCWZpbGxfZHR0bRiaASABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEhYKDWZpbGxfcmVmX3VQcmMYnQEgASgBEhUKDG9yaWdfZXhlY19p",
            "RBigASABKAkSFQoMbGFzdF9leGVjX2lEGKMBIAEoCRI3ChJmaWxsX3RyYW5z",
            "YWN0X2R0dG0YpgEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIb",
            "ChJmaWxsX3JlcG9ydF9kZXRhaWwYqQEgASgJEjcKCnNzYWxlX2ZsYWcYrAEg",
            "ASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5TaG9ydFNhbGVGbGFnEjkKDXBv",
            "c2l0aW9uX3R5cGUYrwEgASgOMiEuc3BpZGVycm9jay5wcm90b2J1Zi5Qb3Np",
            "dGlvblR5cGUSEQoIdGhlb192b2wYsgEgASgCEhAKB2NvbW1lbnQYtQEgASgJ",
            "EhMKCnVzZXJfZGF0YTEYuAEgASgJEhMKCnVzZXJfZGF0YTIYuwEgASgJEhEK",
            "CHN0cmF0ZWd5GL4BIAEoCRIUCgttb2RpZmllZF9ieRjBASABKAkSOQoLbW9k",
            "aWZpZWRfaW4YxAEgASgOMiMuc3BpZGVycm9jay5wcm90b2J1Zi5TeXNFbnZp",
            "cm9ubWVudBIuCgl0aW1lc3RhbXAYxwEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBpCCgRQS2V5Eg0KBWFjY250GAogASgJEhYKDmNsaWVudF9m",
            "aWxsX2lkGAsgASgDEhMKC2NsaWVudF9maXJtGAwgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAwayExecution), global::Spiderrock.Protobuf.SpdrAwayExecution.Parser, new[]{ "Meta", "Pkey", "FillNumber", "EngineName", "SpdrSource", "ExecStatus", "ClientOrderId", "SrcRoutingCode", "RiskGroupId", "SecKey", "SecType", "ExecRole", "ExtExecBroker", "FillSide", "FillPrice", "FillPriceType", "FillQuantity", "ChildSize", "FillExch", "FillDttm", "FillRefUPrc", "OrigExecID", "LastExecID", "FillTransactDttm", "FillReportDetail", "SsaleFlag", "PositionType", "TheoVol", "Comment", "UserData1", "UserData2", "Strategy", "ModifiedBy", "ModifiedIn", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey), global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey.Parser, new[]{ "Accnt", "ClientFillId", "ClientFirm" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///SpdrAwayExecution records are published by ToolServers, SRSE, and FIX drop recv gateways.  They are consumed by AwayExecutionMarkupServer which, in turn, publishes corresponding SpdrParentExecution records, including M1 and M10 updates.
  /// </summary>
  public sealed partial class SpdrAwayExecution : pb::IMessage<SpdrAwayExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrAwayExecution> _parser = new pb::MessageParser<SpdrAwayExecution>(() => new SpdrAwayExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrAwayExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrAwayExecutionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAwayExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAwayExecution(SpdrAwayExecution other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      fillNumber_ = other.fillNumber_;
      engineName_ = other.engineName_;
      spdrSource_ = other.spdrSource_;
      execStatus_ = other.execStatus_;
      clientOrderId_ = other.clientOrderId_;
      srcRoutingCode_ = other.srcRoutingCode_;
      riskGroupId_ = other.riskGroupId_;
      secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
      secType_ = other.secType_;
      execRole_ = other.execRole_;
      extExecBroker_ = other.extExecBroker_;
      fillSide_ = other.fillSide_;
      fillPrice_ = other.fillPrice_;
      fillPriceType_ = other.fillPriceType_;
      fillQuantity_ = other.fillQuantity_;
      childSize_ = other.childSize_;
      fillExch_ = other.fillExch_;
      fillDttm_ = other.fillDttm_ != null ? other.fillDttm_.Clone() : null;
      fillRefUPrc_ = other.fillRefUPrc_;
      origExecID_ = other.origExecID_;
      lastExecID_ = other.lastExecID_;
      fillTransactDttm_ = other.fillTransactDttm_ != null ? other.fillTransactDttm_.Clone() : null;
      fillReportDetail_ = other.fillReportDetail_;
      ssaleFlag_ = other.ssaleFlag_;
      positionType_ = other.positionType_;
      theoVol_ = other.theoVol_;
      comment_ = other.comment_;
      userData1_ = other.userData1_;
      userData2_ = other.userData2_;
      strategy_ = other.strategy_;
      modifiedBy_ = other.modifiedBy_;
      modifiedIn_ = other.modifiedIn_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAwayExecution Clone() {
      return new SpdrAwayExecution(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "fill_number" field.</summary>
    public const int FillNumberFieldNumber = 100;
    private long fillNumber_;
    /// <summary>
    /// SpiderRock execution number (globally unique over trailing 10 days) [copied in SpdrParentExecution.pkey.fillNumber]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FillNumber {
      get { return fillNumber_; }
      set {
        fillNumber_ = value;
      }
    }

    /// <summary>Field number for the "engine_name" field.</summary>
    public const int EngineNameFieldNumber = 200;
    private string engineName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EngineName {
      get { return engineName_; }
      set {
        engineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spdr_source" field.</summary>
    public const int SpdrSourceFieldNumber = 109;
    private global::Spiderrock.Protobuf.SpdrSource spdrSource_ = global::Spiderrock.Protobuf.SpdrSource.Unspecified;
    /// <summary>
    /// SR source code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrSource SpdrSource {
      get { return spdrSource_; }
      set {
        spdrSource_ = value;
      }
    }

    /// <summary>Field number for the "exec_status" field.</summary>
    public const int ExecStatusFieldNumber = 112;
    private global::Spiderrock.Protobuf.ExecStatus execStatus_ = global::Spiderrock.Protobuf.ExecStatus.Unspecified;
    /// <summary>
    /// SR execution status (Fill,Bust,Correct,Reject)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExecStatus ExecStatus {
      get { return execStatus_; }
      set {
        execStatus_ = value;
      }
    }

    /// <summary>Field number for the "client_order_id" field.</summary>
    public const int ClientOrderIdFieldNumber = 115;
    private string clientOrderId_ = "";
    /// <summary>
    /// client order ID (should be unique for each clientFirm) (if any) [copied into SpdrParentExecution.altOrderId]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientOrderId {
      get { return clientOrderId_; }
      set {
        clientOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "src_routing_code" field.</summary>
    public const int SrcRoutingCodeFieldNumber = 118;
    private string srcRoutingCode_ = "";
    /// <summary>
    /// inbound FIX routing code (drop server) (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcRoutingCode {
      get { return srcRoutingCode_; }
      set {
        srcRoutingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "risk_group_id" field.</summary>
    public const int RiskGroupIdFieldNumber = 121;
    private long riskGroupId_;
    /// <summary>
    /// riskGroupId (parent order group ID) for this away execution report (will be incorporated into a corresponding EE risk group counter if != 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RiskGroupId {
      get { return riskGroupId_; }
      set {
        riskGroupId_ = value;
      }
    }

    /// <summary>Field number for the "sec_key" field.</summary>
    public const int SecKeyFieldNumber = 124;
    private global::Spiderrock.Protobuf.OptionKey secKey_;
    /// <summary>
    /// SR security key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionKey SecKey {
      get { return secKey_; }
      set {
        secKey_ = value;
      }
    }

    /// <summary>Field number for the "sec_type" field.</summary>
    public const int SecTypeFieldNumber = 127;
    private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
    /// <summary>
    /// SR security type [Stock, Future, Option]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrKeyType SecType {
      get { return secType_; }
      set {
        secType_ = value;
      }
    }

    /// <summary>Field number for the "exec_role" field.</summary>
    public const int ExecRoleFieldNumber = 130;
    private global::Spiderrock.Protobuf.ExecRole execRole_ = global::Spiderrock.Protobuf.ExecRole.Unspecified;
    /// <summary>
    /// SpiderRock relationship to this execution record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExecRole ExecRole {
      get { return execRole_; }
      set {
        execRole_ = value;
      }
    }

    /// <summary>Field number for the "ext_exec_broker" field.</summary>
    public const int ExtExecBrokerFieldNumber = 133;
    private string extExecBroker_ = "";
    /// <summary>
    /// Client execBroker code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtExecBroker {
      get { return extExecBroker_; }
      set {
        extExecBroker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_side" field.</summary>
    public const int FillSideFieldNumber = 136;
    private global::Spiderrock.Protobuf.BuySell fillSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    /// <summary>
    /// fill side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell FillSide {
      get { return fillSide_; }
      set {
        fillSide_ = value;
      }
    }

    /// <summary>Field number for the "fill_price" field.</summary>
    public const int FillPriceFieldNumber = 139;
    private double fillPrice_;
    /// <summary>
    /// fill price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FillPrice {
      get { return fillPrice_; }
      set {
        fillPrice_ = value;
      }
    }

    /// <summary>Field number for the "fill_price_type" field.</summary>
    public const int FillPriceTypeFieldNumber = 142;
    private global::Spiderrock.Protobuf.PriceType fillPriceType_ = global::Spiderrock.Protobuf.PriceType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PriceType FillPriceType {
      get { return fillPriceType_; }
      set {
        fillPriceType_ = value;
      }
    }

    /// <summary>Field number for the "fill_quantity" field.</summary>
    public const int FillQuantityFieldNumber = 145;
    private int fillQuantity_;
    /// <summary>
    /// fill quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FillQuantity {
      get { return fillQuantity_; }
      set {
        fillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "child_size" field.</summary>
    public const int ChildSizeFieldNumber = 148;
    private int childSize_;
    /// <summary>
    /// child order size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChildSize {
      get { return childSize_; }
      set {
        childSize_ = value;
      }
    }

    /// <summary>Field number for the "fill_exch" field.</summary>
    public const int FillExchFieldNumber = 151;
    private string fillExch_ = "";
    /// <summary>
    /// fill exchange (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillExch {
      get { return fillExch_; }
      set {
        fillExch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_dttm" field.</summary>
    public const int FillDttmFieldNumber = 154;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fillDttm_;
    /// <summary>
    /// fill date/time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FillDttm {
      get { return fillDttm_; }
      set {
        fillDttm_ = value;
      }
    }

    /// <summary>Field number for the "fill_ref_uPrc" field.</summary>
    public const int FillRefUPrcFieldNumber = 157;
    private double fillRefUPrc_;
    /// <summary>
    /// reference underlier price @ fill arrival time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FillRefUPrc {
      get { return fillRefUPrc_; }
      set {
        fillRefUPrc_ = value;
      }
    }

    /// <summary>Field number for the "orig_exec_iD" field.</summary>
    public const int OrigExecIDFieldNumber = 160;
    private string origExecID_ = "";
    /// <summary>
    /// original execution ID string (child order)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrigExecID {
      get { return origExecID_; }
      set {
        origExecID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_exec_iD" field.</summary>
    public const int LastExecIDFieldNumber = 163;
    private string lastExecID_ = "";
    /// <summary>
    /// most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastExecID {
      get { return lastExecID_; }
      set {
        lastExecID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_transact_dttm" field.</summary>
    public const int FillTransactDttmFieldNumber = 166;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fillTransactDttm_;
    /// <summary>
    /// transaction date/time as reported by exchange or down stream broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FillTransactDttm {
      get { return fillTransactDttm_; }
      set {
        fillTransactDttm_ = value;
      }
    }

    /// <summary>Field number for the "fill_report_detail" field.</summary>
    public const int FillReportDetailFieldNumber = 169;
    private string fillReportDetail_ = "";
    /// <summary>
    /// extra detail (if any) from child execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FillReportDetail {
      get { return fillReportDetail_; }
      set {
        fillReportDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ssale_flag" field.</summary>
    public const int SsaleFlagFieldNumber = 172;
    private global::Spiderrock.Protobuf.ShortSaleFlag ssaleFlag_ = global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ShortSaleFlag SsaleFlag {
      get { return ssaleFlag_; }
      set {
        ssaleFlag_ = value;
      }
    }

    /// <summary>Field number for the "position_type" field.</summary>
    public const int PositionTypeFieldNumber = 175;
    private global::Spiderrock.Protobuf.PositionType positionType_ = global::Spiderrock.Protobuf.PositionType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PositionType PositionType {
      get { return positionType_; }
      set {
        positionType_ = value;
      }
    }

    /// <summary>Field number for the "theo_vol" field.</summary>
    public const int TheoVolFieldNumber = 178;
    private float theoVol_;
    /// <summary>
    /// client supplied theoretical volatility (used for markup only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TheoVol {
      get { return theoVol_; }
      set {
        theoVol_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 181;
    private string comment_ = "";
    /// <summary>
    /// text comment (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data1" field.</summary>
    public const int UserData1FieldNumber = 184;
    private string userData1_ = "";
    /// <summary>
    /// client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData1 {
      get { return userData1_; }
      set {
        userData1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_data2" field.</summary>
    public const int UserData2FieldNumber = 187;
    private string userData2_ = "";
    /// <summary>
    /// client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserData2 {
      get { return userData2_; }
      set {
        userData2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strategy" field.</summary>
    public const int StrategyFieldNumber = 190;
    private string strategy_ = "";
    /// <summary>
    /// client-supplied strategy string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Strategy {
      get { return strategy_; }
      set {
        strategy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_by" field.</summary>
    public const int ModifiedByFieldNumber = 193;
    private string modifiedBy_ = "";
    /// <summary>
    /// user who last modified this record
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modified_in" field.</summary>
    public const int ModifiedInFieldNumber = 196;
    private global::Spiderrock.Protobuf.SysEnvironment modifiedIn_ = global::Spiderrock.Protobuf.SysEnvironment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SysEnvironment ModifiedIn {
      get { return modifiedIn_; }
      set {
        modifiedIn_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 199;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp of last modification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrAwayExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrAwayExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (FillNumber != other.FillNumber) return false;
      if (EngineName != other.EngineName) return false;
      if (SpdrSource != other.SpdrSource) return false;
      if (ExecStatus != other.ExecStatus) return false;
      if (ClientOrderId != other.ClientOrderId) return false;
      if (SrcRoutingCode != other.SrcRoutingCode) return false;
      if (RiskGroupId != other.RiskGroupId) return false;
      if (!object.Equals(SecKey, other.SecKey)) return false;
      if (SecType != other.SecType) return false;
      if (ExecRole != other.ExecRole) return false;
      if (ExtExecBroker != other.ExtExecBroker) return false;
      if (FillSide != other.FillSide) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FillPrice, other.FillPrice)) return false;
      if (FillPriceType != other.FillPriceType) return false;
      if (FillQuantity != other.FillQuantity) return false;
      if (ChildSize != other.ChildSize) return false;
      if (FillExch != other.FillExch) return false;
      if (!object.Equals(FillDttm, other.FillDttm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FillRefUPrc, other.FillRefUPrc)) return false;
      if (OrigExecID != other.OrigExecID) return false;
      if (LastExecID != other.LastExecID) return false;
      if (!object.Equals(FillTransactDttm, other.FillTransactDttm)) return false;
      if (FillReportDetail != other.FillReportDetail) return false;
      if (SsaleFlag != other.SsaleFlag) return false;
      if (PositionType != other.PositionType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TheoVol, other.TheoVol)) return false;
      if (Comment != other.Comment) return false;
      if (UserData1 != other.UserData1) return false;
      if (UserData2 != other.UserData2) return false;
      if (Strategy != other.Strategy) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ModifiedIn != other.ModifiedIn) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (FillNumber != 0L) hash ^= FillNumber.GetHashCode();
      if (EngineName.Length != 0) hash ^= EngineName.GetHashCode();
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) hash ^= SpdrSource.GetHashCode();
      if (ExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) hash ^= ExecStatus.GetHashCode();
      if (ClientOrderId.Length != 0) hash ^= ClientOrderId.GetHashCode();
      if (SrcRoutingCode.Length != 0) hash ^= SrcRoutingCode.GetHashCode();
      if (RiskGroupId != 0L) hash ^= RiskGroupId.GetHashCode();
      if (secKey_ != null) hash ^= SecKey.GetHashCode();
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
      if (ExecRole != global::Spiderrock.Protobuf.ExecRole.Unspecified) hash ^= ExecRole.GetHashCode();
      if (ExtExecBroker.Length != 0) hash ^= ExtExecBroker.GetHashCode();
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= FillSide.GetHashCode();
      if (FillPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FillPrice);
      if (FillPriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) hash ^= FillPriceType.GetHashCode();
      if (FillQuantity != 0) hash ^= FillQuantity.GetHashCode();
      if (ChildSize != 0) hash ^= ChildSize.GetHashCode();
      if (FillExch.Length != 0) hash ^= FillExch.GetHashCode();
      if (fillDttm_ != null) hash ^= FillDttm.GetHashCode();
      if (FillRefUPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FillRefUPrc);
      if (OrigExecID.Length != 0) hash ^= OrigExecID.GetHashCode();
      if (LastExecID.Length != 0) hash ^= LastExecID.GetHashCode();
      if (fillTransactDttm_ != null) hash ^= FillTransactDttm.GetHashCode();
      if (FillReportDetail.Length != 0) hash ^= FillReportDetail.GetHashCode();
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) hash ^= SsaleFlag.GetHashCode();
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) hash ^= PositionType.GetHashCode();
      if (TheoVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TheoVol);
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (UserData1.Length != 0) hash ^= UserData1.GetHashCode();
      if (UserData2.Length != 0) hash ^= UserData2.GetHashCode();
      if (Strategy.Length != 0) hash ^= Strategy.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) hash ^= ModifiedIn.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (FillNumber != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(FillNumber);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) SpdrSource);
      }
      if (ExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) ExecStatus);
      }
      if (ClientOrderId.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(ClientOrderId);
      }
      if (SrcRoutingCode.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(SrcRoutingCode);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(200, 7);
        output.WriteInt64(RiskGroupId);
      }
      if (secKey_ != null) {
        output.WriteRawTag(226, 7);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) SecType);
      }
      if (ExecRole != global::Spiderrock.Protobuf.ExecRole.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) ExecRole);
      }
      if (ExtExecBroker.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(ExtExecBroker);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) FillSide);
      }
      if (FillPrice != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(FillPrice);
      }
      if (FillPriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) FillPriceType);
      }
      if (FillQuantity != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(FillQuantity);
      }
      if (ChildSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(ChildSize);
      }
      if (FillExch.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(FillExch);
      }
      if (fillDttm_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(FillDttm);
      }
      if (FillRefUPrc != 0D) {
        output.WriteRawTag(233, 9);
        output.WriteDouble(FillRefUPrc);
      }
      if (OrigExecID.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(OrigExecID);
      }
      if (LastExecID.Length != 0) {
        output.WriteRawTag(154, 10);
        output.WriteString(LastExecID);
      }
      if (fillTransactDttm_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(FillTransactDttm);
      }
      if (FillReportDetail.Length != 0) {
        output.WriteRawTag(202, 10);
        output.WriteString(FillReportDetail);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(248, 10);
        output.WriteEnum((int) PositionType);
      }
      if (TheoVol != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(TheoVol);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(170, 11);
        output.WriteString(Comment);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(194, 11);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(218, 11);
        output.WriteString(UserData2);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(242, 11);
        output.WriteString(Strategy);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(138, 12);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(160, 12);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 12);
        output.WriteMessage(Timestamp);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(194, 12);
        output.WriteString(EngineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (FillNumber != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(FillNumber);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) SpdrSource);
      }
      if (ExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) ExecStatus);
      }
      if (ClientOrderId.Length != 0) {
        output.WriteRawTag(154, 7);
        output.WriteString(ClientOrderId);
      }
      if (SrcRoutingCode.Length != 0) {
        output.WriteRawTag(178, 7);
        output.WriteString(SrcRoutingCode);
      }
      if (RiskGroupId != 0L) {
        output.WriteRawTag(200, 7);
        output.WriteInt64(RiskGroupId);
      }
      if (secKey_ != null) {
        output.WriteRawTag(226, 7);
        output.WriteMessage(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        output.WriteRawTag(248, 7);
        output.WriteEnum((int) SecType);
      }
      if (ExecRole != global::Spiderrock.Protobuf.ExecRole.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) ExecRole);
      }
      if (ExtExecBroker.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(ExtExecBroker);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) FillSide);
      }
      if (FillPrice != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(FillPrice);
      }
      if (FillPriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        output.WriteRawTag(240, 8);
        output.WriteEnum((int) FillPriceType);
      }
      if (FillQuantity != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(FillQuantity);
      }
      if (ChildSize != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(ChildSize);
      }
      if (FillExch.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(FillExch);
      }
      if (fillDttm_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(FillDttm);
      }
      if (FillRefUPrc != 0D) {
        output.WriteRawTag(233, 9);
        output.WriteDouble(FillRefUPrc);
      }
      if (OrigExecID.Length != 0) {
        output.WriteRawTag(130, 10);
        output.WriteString(OrigExecID);
      }
      if (LastExecID.Length != 0) {
        output.WriteRawTag(154, 10);
        output.WriteString(LastExecID);
      }
      if (fillTransactDttm_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(FillTransactDttm);
      }
      if (FillReportDetail.Length != 0) {
        output.WriteRawTag(202, 10);
        output.WriteString(FillReportDetail);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        output.WriteRawTag(224, 10);
        output.WriteEnum((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        output.WriteRawTag(248, 10);
        output.WriteEnum((int) PositionType);
      }
      if (TheoVol != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(TheoVol);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(170, 11);
        output.WriteString(Comment);
      }
      if (UserData1.Length != 0) {
        output.WriteRawTag(194, 11);
        output.WriteString(UserData1);
      }
      if (UserData2.Length != 0) {
        output.WriteRawTag(218, 11);
        output.WriteString(UserData2);
      }
      if (Strategy.Length != 0) {
        output.WriteRawTag(242, 11);
        output.WriteString(Strategy);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(138, 12);
        output.WriteString(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        output.WriteRawTag(160, 12);
        output.WriteEnum((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(186, 12);
        output.WriteMessage(Timestamp);
      }
      if (EngineName.Length != 0) {
        output.WriteRawTag(194, 12);
        output.WriteString(EngineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (FillNumber != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(FillNumber);
      }
      if (EngineName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EngineName);
      }
      if (SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpdrSource);
      }
      if (ExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ExecStatus);
      }
      if (ClientOrderId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientOrderId);
      }
      if (SrcRoutingCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SrcRoutingCode);
      }
      if (RiskGroupId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RiskGroupId);
      }
      if (secKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
      }
      if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
      }
      if (ExecRole != global::Spiderrock.Protobuf.ExecRole.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ExecRole);
      }
      if (ExtExecBroker.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExtExecBroker);
      }
      if (FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FillSide);
      }
      if (FillPrice != 0D) {
        size += 2 + 8;
      }
      if (FillPriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FillPriceType);
      }
      if (FillQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FillQuantity);
      }
      if (ChildSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChildSize);
      }
      if (FillExch.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillExch);
      }
      if (fillDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FillDttm);
      }
      if (FillRefUPrc != 0D) {
        size += 2 + 8;
      }
      if (OrigExecID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OrigExecID);
      }
      if (LastExecID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastExecID);
      }
      if (fillTransactDttm_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FillTransactDttm);
      }
      if (FillReportDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FillReportDetail);
      }
      if (SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SsaleFlag);
      }
      if (PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
      }
      if (TheoVol != 0F) {
        size += 2 + 4;
      }
      if (Comment.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (UserData1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData1);
      }
      if (UserData2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserData2);
      }
      if (Strategy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Strategy);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ModifiedIn);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrAwayExecution other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.FillNumber != 0L) {
        FillNumber = other.FillNumber;
      }
      if (other.EngineName.Length != 0) {
        EngineName = other.EngineName;
      }
      if (other.SpdrSource != global::Spiderrock.Protobuf.SpdrSource.Unspecified) {
        SpdrSource = other.SpdrSource;
      }
      if (other.ExecStatus != global::Spiderrock.Protobuf.ExecStatus.Unspecified) {
        ExecStatus = other.ExecStatus;
      }
      if (other.ClientOrderId.Length != 0) {
        ClientOrderId = other.ClientOrderId;
      }
      if (other.SrcRoutingCode.Length != 0) {
        SrcRoutingCode = other.SrcRoutingCode;
      }
      if (other.RiskGroupId != 0L) {
        RiskGroupId = other.RiskGroupId;
      }
      if (other.secKey_ != null) {
        if (secKey_ == null) {
          SecKey = new global::Spiderrock.Protobuf.OptionKey();
        }
        SecKey.MergeFrom(other.SecKey);
      }
      if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
        SecType = other.SecType;
      }
      if (other.ExecRole != global::Spiderrock.Protobuf.ExecRole.Unspecified) {
        ExecRole = other.ExecRole;
      }
      if (other.ExtExecBroker.Length != 0) {
        ExtExecBroker = other.ExtExecBroker;
      }
      if (other.FillSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        FillSide = other.FillSide;
      }
      if (other.FillPrice != 0D) {
        FillPrice = other.FillPrice;
      }
      if (other.FillPriceType != global::Spiderrock.Protobuf.PriceType.Unspecified) {
        FillPriceType = other.FillPriceType;
      }
      if (other.FillQuantity != 0) {
        FillQuantity = other.FillQuantity;
      }
      if (other.ChildSize != 0) {
        ChildSize = other.ChildSize;
      }
      if (other.FillExch.Length != 0) {
        FillExch = other.FillExch;
      }
      if (other.fillDttm_ != null) {
        if (fillDttm_ == null) {
          FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FillDttm.MergeFrom(other.FillDttm);
      }
      if (other.FillRefUPrc != 0D) {
        FillRefUPrc = other.FillRefUPrc;
      }
      if (other.OrigExecID.Length != 0) {
        OrigExecID = other.OrigExecID;
      }
      if (other.LastExecID.Length != 0) {
        LastExecID = other.LastExecID;
      }
      if (other.fillTransactDttm_ != null) {
        if (fillTransactDttm_ == null) {
          FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FillTransactDttm.MergeFrom(other.FillTransactDttm);
      }
      if (other.FillReportDetail.Length != 0) {
        FillReportDetail = other.FillReportDetail;
      }
      if (other.SsaleFlag != global::Spiderrock.Protobuf.ShortSaleFlag.Unspecified) {
        SsaleFlag = other.SsaleFlag;
      }
      if (other.PositionType != global::Spiderrock.Protobuf.PositionType.Unspecified) {
        PositionType = other.PositionType;
      }
      if (other.TheoVol != 0F) {
        TheoVol = other.TheoVol;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.UserData1.Length != 0) {
        UserData1 = other.UserData1;
      }
      if (other.UserData2.Length != 0) {
        UserData2 = other.UserData2;
      }
      if (other.Strategy.Length != 0) {
        Strategy = other.Strategy;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ModifiedIn != global::Spiderrock.Protobuf.SysEnvironment.Unspecified) {
        ModifiedIn = other.ModifiedIn;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            FillNumber = input.ReadInt64();
            break;
          }
          case 872: {
            SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 896: {
            ExecStatus = (global::Spiderrock.Protobuf.ExecStatus) input.ReadEnum();
            break;
          }
          case 922: {
            ClientOrderId = input.ReadString();
            break;
          }
          case 946: {
            SrcRoutingCode = input.ReadString();
            break;
          }
          case 968: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 994: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 1016: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 1040: {
            ExecRole = (global::Spiderrock.Protobuf.ExecRole) input.ReadEnum();
            break;
          }
          case 1066: {
            ExtExecBroker = input.ReadString();
            break;
          }
          case 1088: {
            FillSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1113: {
            FillPrice = input.ReadDouble();
            break;
          }
          case 1136: {
            FillPriceType = (global::Spiderrock.Protobuf.PriceType) input.ReadEnum();
            break;
          }
          case 1160: {
            FillQuantity = input.ReadInt32();
            break;
          }
          case 1184: {
            ChildSize = input.ReadInt32();
            break;
          }
          case 1210: {
            FillExch = input.ReadString();
            break;
          }
          case 1234: {
            if (fillDttm_ == null) {
              FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillDttm);
            break;
          }
          case 1257: {
            FillRefUPrc = input.ReadDouble();
            break;
          }
          case 1282: {
            OrigExecID = input.ReadString();
            break;
          }
          case 1306: {
            LastExecID = input.ReadString();
            break;
          }
          case 1330: {
            if (fillTransactDttm_ == null) {
              FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillTransactDttm);
            break;
          }
          case 1354: {
            FillReportDetail = input.ReadString();
            break;
          }
          case 1376: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 1400: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 1429: {
            TheoVol = input.ReadFloat();
            break;
          }
          case 1450: {
            Comment = input.ReadString();
            break;
          }
          case 1474: {
            UserData1 = input.ReadString();
            break;
          }
          case 1498: {
            UserData2 = input.ReadString();
            break;
          }
          case 1522: {
            Strategy = input.ReadString();
            break;
          }
          case 1546: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1568: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1594: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1602: {
            EngineName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAwayExecution.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            FillNumber = input.ReadInt64();
            break;
          }
          case 872: {
            SpdrSource = (global::Spiderrock.Protobuf.SpdrSource) input.ReadEnum();
            break;
          }
          case 896: {
            ExecStatus = (global::Spiderrock.Protobuf.ExecStatus) input.ReadEnum();
            break;
          }
          case 922: {
            ClientOrderId = input.ReadString();
            break;
          }
          case 946: {
            SrcRoutingCode = input.ReadString();
            break;
          }
          case 968: {
            RiskGroupId = input.ReadInt64();
            break;
          }
          case 994: {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            input.ReadMessage(SecKey);
            break;
          }
          case 1016: {
            SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
            break;
          }
          case 1040: {
            ExecRole = (global::Spiderrock.Protobuf.ExecRole) input.ReadEnum();
            break;
          }
          case 1066: {
            ExtExecBroker = input.ReadString();
            break;
          }
          case 1088: {
            FillSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 1113: {
            FillPrice = input.ReadDouble();
            break;
          }
          case 1136: {
            FillPriceType = (global::Spiderrock.Protobuf.PriceType) input.ReadEnum();
            break;
          }
          case 1160: {
            FillQuantity = input.ReadInt32();
            break;
          }
          case 1184: {
            ChildSize = input.ReadInt32();
            break;
          }
          case 1210: {
            FillExch = input.ReadString();
            break;
          }
          case 1234: {
            if (fillDttm_ == null) {
              FillDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillDttm);
            break;
          }
          case 1257: {
            FillRefUPrc = input.ReadDouble();
            break;
          }
          case 1282: {
            OrigExecID = input.ReadString();
            break;
          }
          case 1306: {
            LastExecID = input.ReadString();
            break;
          }
          case 1330: {
            if (fillTransactDttm_ == null) {
              FillTransactDttm = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FillTransactDttm);
            break;
          }
          case 1354: {
            FillReportDetail = input.ReadString();
            break;
          }
          case 1376: {
            SsaleFlag = (global::Spiderrock.Protobuf.ShortSaleFlag) input.ReadEnum();
            break;
          }
          case 1400: {
            PositionType = (global::Spiderrock.Protobuf.PositionType) input.ReadEnum();
            break;
          }
          case 1429: {
            TheoVol = input.ReadFloat();
            break;
          }
          case 1450: {
            Comment = input.ReadString();
            break;
          }
          case 1474: {
            UserData1 = input.ReadString();
            break;
          }
          case 1498: {
            UserData2 = input.ReadString();
            break;
          }
          case 1522: {
            Strategy = input.ReadString();
            break;
          }
          case 1546: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 1568: {
            ModifiedIn = (global::Spiderrock.Protobuf.SysEnvironment) input.ReadEnum();
            break;
          }
          case 1594: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 1602: {
            EngineName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrAwayExecution message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAwayExecution.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          accnt_ = other.accnt_;
          clientFillId_ = other.clientFillId_;
          clientFirm_ = other.clientFirm_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "accnt" field.</summary>
        public const int AccntFieldNumber = 10;
        private string accnt_ = "";
        /// <summary>
        /// SR accnt
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Accnt {
          get { return accnt_; }
          set {
            accnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_fill_id" field.</summary>
        public const int ClientFillIdFieldNumber = 11;
        private long clientFillId_;
        /// <summary>
        /// client fill ID (should be unique for each accnt)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long ClientFillId {
          get { return clientFillId_; }
          set {
            clientFillId_ = value;
          }
        }

        /// <summary>Field number for the "client_firm" field.</summary>
        public const int ClientFirmFieldNumber = 12;
        private string clientFirm_ = "";
        /// <summary>
        /// SR client firm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientFirm {
          get { return clientFirm_; }
          set {
            clientFirm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accnt != other.Accnt) return false;
          if (ClientFillId != other.ClientFillId) return false;
          if (ClientFirm != other.ClientFirm) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Accnt.Length != 0) hash ^= Accnt.GetHashCode();
          if (ClientFillId != 0L) hash ^= ClientFillId.GetHashCode();
          if (ClientFirm.Length != 0) hash ^= ClientFirm.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (ClientFillId != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(ClientFillId);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Accnt.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Accnt);
          }
          if (ClientFillId != 0L) {
            output.WriteRawTag(88);
            output.WriteInt64(ClientFillId);
          }
          if (ClientFirm.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(ClientFirm);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Accnt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Accnt);
          }
          if (ClientFillId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientFillId);
          }
          if (ClientFirm.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientFirm);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.Accnt.Length != 0) {
            Accnt = other.Accnt;
          }
          if (other.ClientFillId != 0L) {
            ClientFillId = other.ClientFillId;
          }
          if (other.ClientFirm.Length != 0) {
            ClientFirm = other.ClientFirm;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 88: {
                ClientFillId = input.ReadInt64();
                break;
              }
              case 98: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                Accnt = input.ReadString();
                break;
              }
              case 88: {
                ClientFillId = input.ReadInt64();
                break;
              }
              case 98: {
                ClientFirm = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
