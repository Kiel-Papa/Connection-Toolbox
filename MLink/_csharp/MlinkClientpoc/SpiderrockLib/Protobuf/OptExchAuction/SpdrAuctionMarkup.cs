// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptExchAuction/SpdrAuctionMarkup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptExchAuction/SpdrAuctionMarkup.proto</summary>
  public static partial class SpdrAuctionMarkupReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptExchAuction/SpdrAuctionMarkup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpdrAuctionMarkupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9Qcm90b2J1Zi9PcHRFeGNoQXVjdGlvbi9TcGRyQXVjdGlvbk1hcmt1cC5w",
            "cm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24u",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ijxEKEVNw",
            "ZHJBdWN0aW9uTWFya3VwEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5NZXNzYWdlTWV0YWRhdGESOQoEcGtleRgCIAEoCzIrLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuU3BkckF1Y3Rpb25NYXJrdXAuUEtleRIVCg1zcl9h",
            "dWN0aW9uX2lEGGQgASgDEi4KBnRpY2tlchhnIAEoCzIeLnNwaWRlcnJvY2su",
            "cHJvdG9idWYuVGlja2VyS2V5EhQKDG9wdGlvbl9yb290cxhqIAEoCRIXCg9l",
            "eGNoX2F1Y3Rpb25faWQYbSABKAkSGQoRZXhjaF9hdWN0aW9uX3R5cGUYcCAB",
            "KAkSNgoMYXVjdGlvbl90eXBlGHMgASgOMiAuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5BdWN0aW9uVHlwZRIyCgxhdWN0aW9uX3NpZGUYdiABKA4yHC5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLkJ1eVNlbGwSFAoMYXVjdGlvbl9zaXplGHkgASgFEhAK",
            "CG51bV9sZWdzGHwgASgFEhQKDG51bV9vcHRfbGVncxh/IAEoBRIvCgppbmNs",
            "X3N0b2NrGIIBIAEoDjIaLnNwaWRlcnJvY2sucHJvdG9idWYuWWVzTm8SNAoP",
            "aW5jbF9tdWx0aWhlZGdlGIUBIAEoDjIaLnNwaWRlcnJvY2sucHJvdG9idWYu",
            "WWVzTm8SEgoJbWluX3llYXJzGIgBIAEoAhISCgltYXhfeWVhcnMYiwEgASgC",
            "Ei8KCm1pbl9leHBpcnkYjgEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIvCgptYXhfZXhwaXJ5GJEBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASGAoPbWF4X3llYXJzX3JhbmdlGJQBIAEoAhITCgptaW5fYWJz",
            "X2RlGJcBIAEoAhITCgptYXhfYWJzX2RlGJoBIAEoAhISCgltaW5feEF4aXMY",
            "nQEgASgCEhIKCW1heF94QXhpcxigASABKAISEwoKbWluX3N0cmlrZRijASAB",
            "KAISEwoKbWF4X3N0cmlrZRimASABKAISGQoQbWF4X3N0cmlrZV9yYW5nZRip",
            "ASABKAISFAoLZGVsdGFfcmFuZ2UYrAEgASgCEhYKDWF1Y3Rpb25fcHJpY2UY",
            "rwEgASgBEjsKFmlzX2F1Y3Rpb25fcHJpY2VfdmFsaWQYsgEgASgOMhouc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5ZZXNObxITCgpzdXJmX3ByaWNlGLUBIAEoAhIT",
            "Cgpwcm9iX3ByaWNlGLgBIAEoAhISCgliaWRfcHJpY2UYuwEgASgCEhIKCWFz",
            "a19wcmljZRi+ASABKAISNwoMc3ByZWFkX3NoYXBlGMEBIAEoDjIgLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuU3ByZWFkU2hhcGUSFwoObnVtX3ZhbGlkX2xlZ3MY",
            "xAEgASgFEg4KBXVfcHJjGMcBIAEoAhITCgpwa2dfYWJzX2NuGMoBIAEoBRIT",
            "Cgpwa2dfbmV0X2NuGM0BIAEoBRIUCgtwa2dfYWJzX2REZRjQASABKAISFAoL",
            "cGtnX25ldF9kRGUY0wEgASgCEhMKCnBrZ19hYnNfcHIY1gEgASgCEhMKCnBr",
            "Z19uZXRfcHIY2QEgASgCEhMKCnBrZ19hYnNfdmUY3AEgASgCEhMKCnBrZ19u",
            "ZXRfdmUY3wEgASgCEhQKC3BrZ19hYnNfdFZlGOIBIAEoAhIUCgtwa2dfbmV0",
            "X3RWZRjlASABKAISFAoLcGtnX2Fic193VmUY6AEgASgCEhQKC3BrZ19uZXRf",
            "d1ZlGOsBIAEoAhIVCgxwa2dfYWJzX3dUVmUY7gEgASgCEhUKDHBrZ19uZXRf",
            "d1RWZRjxASABKAISEwoKcGtnX2Fic190aBj0ASABKAISEwoKcGtnX25ldF90",
            "aBj3ASABKAISFAoLcGtnX2Fic19kVGgY+gEgASgCEhMKCnBrZ19hYnNfZ2EY",
            "/QEgASgCEhMKCnBrZ19uZXRfZ2EYgAIgASgCEhQKC3BrZ19hYnNfZEdhGIMC",
            "IAEoAhIUCgtwa2dfbmV0X2RHYRiGAiABKAISGAoPcGtnX25ldF91VXBfdlVw",
            "GJwCIAEoAhIYCg9wa2dfbmV0X3VVcF92RG4YnQIgASgCEhgKD3BrZ19uZXRf",
            "dURuX3ZVcBieAiABKAISGAoPcGtnX25ldF91RG5fdkRuGJ8CIAEoAhIaChFw",
            "a2dfbmV0X3VwMTVfcG5fbBiJAiABKAISGgoRcGtnX25ldF9kbjE1X3BuX2wY",
            "jAIgASgCEhoKEXBrZ19uZXRfdXA1MF9wbl9sGI8CIAEoAhIaChFwa2dfbmV0",
            "X2RuNTBfcG5fbBiSAiABKAISOQoNbWFya3VwX3Jlc3VsdBiVAiABKA4yIS5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLk1hcmt1cFJlc3VsdBIWCg1tYXJrdXBfZGV0",
            "YWlsGJgCIAEoCRIuCgl0aW1lc3RhbXAYmwIgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBrsAQoEUEtleRIvCgdzZWNfa2V5GAogASgLMh4uc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5PcHRpb25LZXkSMgoIc2VjX3R5cGUYCyABKA4y",
            "IC5zcGlkZXJyb2NrLnByb3RvYnVmLlNwZHJLZXlUeXBlEjIKDGF1Y3Rpb25f",
            "ZXhjaBgMIAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0RXhjaBIXCg9h",
            "dWN0aW9uX2V4X2Rlc3QYDSABKAkSMgoKcnVuX3N0YXR1cxgOIAEoDjIeLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuUnVuU3RhdHVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAuctionMarkup), global::Spiderrock.Protobuf.SpdrAuctionMarkup.Parser, new[]{ "Meta", "Pkey", "SrAuctionID", "Ticker", "OptionRoots", "ExchAuctionId", "ExchAuctionType", "AuctionType", "AuctionSide", "AuctionSize", "NumLegs", "NumOptLegs", "InclStock", "InclMultihedge", "MinYears", "MaxYears", "MinExpiry", "MaxExpiry", "MaxYearsRange", "MinAbsDe", "MaxAbsDe", "MinXAxis", "MaxXAxis", "MinStrike", "MaxStrike", "MaxStrikeRange", "DeltaRange", "AuctionPrice", "IsAuctionPriceValid", "SurfPrice", "ProbPrice", "BidPrice", "AskPrice", "SpreadShape", "NumValidLegs", "UPrc", "PkgAbsCn", "PkgNetCn", "PkgAbsDDe", "PkgNetDDe", "PkgAbsPr", "PkgNetPr", "PkgAbsVe", "PkgNetVe", "PkgAbsTVe", "PkgNetTVe", "PkgAbsWVe", "PkgNetWVe", "PkgAbsWTVe", "PkgNetWTVe", "PkgAbsTh", "PkgNetTh", "PkgAbsDTh", "PkgAbsGa", "PkgNetGa", "PkgAbsDGa", "PkgNetDGa", "PkgNetUUpVUp", "PkgNetUUpVDn", "PkgNetUDnVUp", "PkgNetUDnVDn", "PkgNetUp15PnL", "PkgNetDn15PnL", "PkgNetUp50PnL", "PkgNetDn50PnL", "MarkupResult", "MarkupDetail", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey), global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey.Parser, new[]{ "SecKey", "SecType", "AuctionExch", "AuctionExDest", "RunStatus" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpdrAuctionMarkup : pb::IMessage<SpdrAuctionMarkup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpdrAuctionMarkup> _parser = new pb::MessageParser<SpdrAuctionMarkup>(() => new SpdrAuctionMarkup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpdrAuctionMarkup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.SpdrAuctionMarkupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAuctionMarkup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAuctionMarkup(SpdrAuctionMarkup other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      srAuctionID_ = other.srAuctionID_;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      optionRoots_ = other.optionRoots_;
      exchAuctionId_ = other.exchAuctionId_;
      exchAuctionType_ = other.exchAuctionType_;
      auctionType_ = other.auctionType_;
      auctionSide_ = other.auctionSide_;
      auctionSize_ = other.auctionSize_;
      numLegs_ = other.numLegs_;
      numOptLegs_ = other.numOptLegs_;
      inclStock_ = other.inclStock_;
      inclMultihedge_ = other.inclMultihedge_;
      minYears_ = other.minYears_;
      maxYears_ = other.maxYears_;
      minExpiry_ = other.minExpiry_ != null ? other.minExpiry_.Clone() : null;
      maxExpiry_ = other.maxExpiry_ != null ? other.maxExpiry_.Clone() : null;
      maxYearsRange_ = other.maxYearsRange_;
      minAbsDe_ = other.minAbsDe_;
      maxAbsDe_ = other.maxAbsDe_;
      minXAxis_ = other.minXAxis_;
      maxXAxis_ = other.maxXAxis_;
      minStrike_ = other.minStrike_;
      maxStrike_ = other.maxStrike_;
      maxStrikeRange_ = other.maxStrikeRange_;
      deltaRange_ = other.deltaRange_;
      auctionPrice_ = other.auctionPrice_;
      isAuctionPriceValid_ = other.isAuctionPriceValid_;
      surfPrice_ = other.surfPrice_;
      probPrice_ = other.probPrice_;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      spreadShape_ = other.spreadShape_;
      numValidLegs_ = other.numValidLegs_;
      uPrc_ = other.uPrc_;
      pkgAbsCn_ = other.pkgAbsCn_;
      pkgNetCn_ = other.pkgNetCn_;
      pkgAbsDDe_ = other.pkgAbsDDe_;
      pkgNetDDe_ = other.pkgNetDDe_;
      pkgAbsPr_ = other.pkgAbsPr_;
      pkgNetPr_ = other.pkgNetPr_;
      pkgAbsVe_ = other.pkgAbsVe_;
      pkgNetVe_ = other.pkgNetVe_;
      pkgAbsTVe_ = other.pkgAbsTVe_;
      pkgNetTVe_ = other.pkgNetTVe_;
      pkgAbsWVe_ = other.pkgAbsWVe_;
      pkgNetWVe_ = other.pkgNetWVe_;
      pkgAbsWTVe_ = other.pkgAbsWTVe_;
      pkgNetWTVe_ = other.pkgNetWTVe_;
      pkgAbsTh_ = other.pkgAbsTh_;
      pkgNetTh_ = other.pkgNetTh_;
      pkgAbsDTh_ = other.pkgAbsDTh_;
      pkgAbsGa_ = other.pkgAbsGa_;
      pkgNetGa_ = other.pkgNetGa_;
      pkgAbsDGa_ = other.pkgAbsDGa_;
      pkgNetDGa_ = other.pkgNetDGa_;
      pkgNetUUpVUp_ = other.pkgNetUUpVUp_;
      pkgNetUUpVDn_ = other.pkgNetUUpVDn_;
      pkgNetUDnVUp_ = other.pkgNetUDnVUp_;
      pkgNetUDnVDn_ = other.pkgNetUDnVDn_;
      pkgNetUp15PnL_ = other.pkgNetUp15PnL_;
      pkgNetDn15PnL_ = other.pkgNetDn15PnL_;
      pkgNetUp50PnL_ = other.pkgNetUp50PnL_;
      pkgNetDn50PnL_ = other.pkgNetDn50PnL_;
      markupResult_ = other.markupResult_;
      markupDetail_ = other.markupDetail_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpdrAuctionMarkup Clone() {
      return new SpdrAuctionMarkup(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "sr_auction_iD" field.</summary>
    public const int SrAuctionIDFieldNumber = 100;
    private long srAuctionID_;
    /// <summary>
    /// unique SR AUCTION ID (required when responding to an auction notice)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrAuctionID {
      get { return srAuctionID_; }
      set {
        srAuctionID_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 103;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    /// <summary>
    /// must match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "option_roots" field.</summary>
    public const int OptionRootsFieldNumber = 106;
    private string optionRoots_ = "";
    /// <summary>
    /// (comma separated) if not empty all leg roots must be in list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionRoots {
      get { return optionRoots_; }
      set {
        optionRoots_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exch_auction_id" field.</summary>
    public const int ExchAuctionIdFieldNumber = 109;
    private string exchAuctionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchAuctionId {
      get { return exchAuctionId_; }
      set {
        exchAuctionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exch_auction_type" field.</summary>
    public const int ExchAuctionTypeFieldNumber = 112;
    private string exchAuctionType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchAuctionType {
      get { return exchAuctionType_; }
      set {
        exchAuctionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auction_type" field.</summary>
    public const int AuctionTypeFieldNumber = 115;
    private global::Spiderrock.Protobuf.AuctionType auctionType_ = global::Spiderrock.Protobuf.AuctionType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AuctionType AuctionType {
      get { return auctionType_; }
      set {
        auctionType_ = value;
      }
    }

    /// <summary>Field number for the "auction_side" field.</summary>
    public const int AuctionSideFieldNumber = 118;
    private global::Spiderrock.Protobuf.BuySell auctionSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    /// <summary>
    /// Market side (client/imbalance side of auction; if known) [responder should be opposite side]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell AuctionSide {
      get { return auctionSide_; }
      set {
        auctionSide_ = value;
      }
    }

    /// <summary>Field number for the "auction_size" field.</summary>
    public const int AuctionSizeFieldNumber = 121;
    private int auctionSize_;
    /// <summary>
    /// auction size (number of spreads)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuctionSize {
      get { return auctionSize_; }
      set {
        auctionSize_ = value;
      }
    }

    /// <summary>Field number for the "num_legs" field.</summary>
    public const int NumLegsFieldNumber = 124;
    private int numLegs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumLegs {
      get { return numLegs_; }
      set {
        numLegs_ = value;
      }
    }

    /// <summary>Field number for the "num_opt_legs" field.</summary>
    public const int NumOptLegsFieldNumber = 127;
    private int numOptLegs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumOptLegs {
      get { return numOptLegs_; }
      set {
        numOptLegs_ = value;
      }
    }

    /// <summary>Field number for the "incl_stock" field.</summary>
    public const int InclStockFieldNumber = 130;
    private global::Spiderrock.Protobuf.YesNo inclStock_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo InclStock {
      get { return inclStock_; }
      set {
        inclStock_ = value;
      }
    }

    /// <summary>Field number for the "incl_multihedge" field.</summary>
    public const int InclMultihedgeFieldNumber = 133;
    private global::Spiderrock.Protobuf.YesNo inclMultihedge_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo InclMultihedge {
      get { return inclMultihedge_; }
      set {
        inclMultihedge_ = value;
      }
    }

    /// <summary>Field number for the "min_years" field.</summary>
    public const int MinYearsFieldNumber = 136;
    private float minYears_;
    /// <summary>
    /// both markup.minYears and markup.maxYears
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinYears {
      get { return minYears_; }
      set {
        minYears_ = value;
      }
    }

    /// <summary>Field number for the "max_years" field.</summary>
    public const int MaxYearsFieldNumber = 139;
    private float maxYears_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxYears {
      get { return maxYears_; }
      set {
        maxYears_ = value;
      }
    }

    /// <summary>Field number for the "min_expiry" field.</summary>
    public const int MinExpiryFieldNumber = 142;
    private global::Google.Protobuf.WellKnownTypes.Timestamp minExpiry_;
    /// <summary>
    /// both markup.minExpiry and markup.maxExpiry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MinExpiry {
      get { return minExpiry_; }
      set {
        minExpiry_ = value;
      }
    }

    /// <summary>Field number for the "max_expiry" field.</summary>
    public const int MaxExpiryFieldNumber = 145;
    private global::Google.Protobuf.WellKnownTypes.Timestamp maxExpiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MaxExpiry {
      get { return maxExpiry_; }
      set {
        maxExpiry_ = value;
      }
    }

    /// <summary>Field number for the "max_years_range" field.</summary>
    public const int MaxYearsRangeFieldNumber = 148;
    private float maxYearsRange_;
    /// <summary>
    /// markup.maxExpiry - markup.minExpiry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxYearsRange {
      get { return maxYearsRange_; }
      set {
        maxYearsRange_ = value;
      }
    }

    /// <summary>Field number for the "min_abs_de" field.</summary>
    public const int MinAbsDeFieldNumber = 151;
    private float minAbsDe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinAbsDe {
      get { return minAbsDe_; }
      set {
        minAbsDe_ = value;
      }
    }

    /// <summary>Field number for the "max_abs_de" field.</summary>
    public const int MaxAbsDeFieldNumber = 154;
    private float maxAbsDe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxAbsDe {
      get { return maxAbsDe_; }
      set {
        maxAbsDe_ = value;
      }
    }

    /// <summary>Field number for the "min_xAxis" field.</summary>
    public const int MinXAxisFieldNumber = 157;
    private float minXAxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinXAxis {
      get { return minXAxis_; }
      set {
        minXAxis_ = value;
      }
    }

    /// <summary>Field number for the "max_xAxis" field.</summary>
    public const int MaxXAxisFieldNumber = 160;
    private float maxXAxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxXAxis {
      get { return maxXAxis_; }
      set {
        maxXAxis_ = value;
      }
    }

    /// <summary>Field number for the "min_strike" field.</summary>
    public const int MinStrikeFieldNumber = 163;
    private float minStrike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinStrike {
      get { return minStrike_; }
      set {
        minStrike_ = value;
      }
    }

    /// <summary>Field number for the "max_strike" field.</summary>
    public const int MaxStrikeFieldNumber = 166;
    private float maxStrike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxStrike {
      get { return maxStrike_; }
      set {
        maxStrike_ = value;
      }
    }

    /// <summary>Field number for the "max_strike_range" field.</summary>
    public const int MaxStrikeRangeFieldNumber = 169;
    private float maxStrikeRange_;
    /// <summary>
    /// markup.maxStrike - markup.minStrike
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxStrikeRange {
      get { return maxStrikeRange_; }
      set {
        maxStrikeRange_ = value;
      }
    }

    /// <summary>Field number for the "delta_range" field.</summary>
    public const int DeltaRangeFieldNumber = 172;
    private float deltaRange_;
    /// <summary>
    /// maxDelta - minDelta (option legs only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DeltaRange {
      get { return deltaRange_; }
      set {
        deltaRange_ = value;
      }
    }

    /// <summary>Field number for the "auction_price" field.</summary>
    public const int AuctionPriceFieldNumber = 175;
    private double auctionPrice_;
    /// <summary>
    /// auction price (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AuctionPrice {
      get { return auctionPrice_; }
      set {
        auctionPrice_ = value;
      }
    }

    /// <summary>Field number for the "is_auction_price_valid" field.</summary>
    public const int IsAuctionPriceValidFieldNumber = 178;
    private global::Spiderrock.Protobuf.YesNo isAuctionPriceValid_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsAuctionPriceValid {
      get { return isAuctionPriceValid_; }
      set {
        isAuctionPriceValid_ = value;
      }
    }

    /// <summary>Field number for the "surf_price" field.</summary>
    public const int SurfPriceFieldNumber = 181;
    private float surfPrice_;
    /// <summary>
    /// surface price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SurfPrice {
      get { return surfPrice_; }
      set {
        surfPrice_ = value;
      }
    }

    /// <summary>Field number for the "prob_price" field.</summary>
    public const int ProbPriceFieldNumber = 184;
    private float probPrice_;
    /// <summary>
    /// 0.50 probability price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ProbPrice {
      get { return probPrice_; }
      set {
        probPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 187;
    private float bidPrice_;
    /// <summary>
    /// nbbo bid price (leg market bid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 190;
    private float askPrice_;
    /// <summary>
    /// nbbo ask price (leg market ask)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "spread_shape" field.</summary>
    public const int SpreadShapeFieldNumber = 193;
    private global::Spiderrock.Protobuf.SpreadShape spreadShape_ = global::Spiderrock.Protobuf.SpreadShape.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.SpreadShape SpreadShape {
      get { return spreadShape_; }
      set {
        spreadShape_ = value;
      }
    }

    /// <summary>Field number for the "num_valid_legs" field.</summary>
    public const int NumValidLegsFieldNumber = 196;
    private int numValidLegs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumValidLegs {
      get { return numValidLegs_; }
      set {
        numValidLegs_ = value;
      }
    }

    /// <summary>Field number for the "u_prc" field.</summary>
    public const int UPrcFieldNumber = 199;
    private float uPrc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UPrc {
      get { return uPrc_; }
      set {
        uPrc_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_cn" field.</summary>
    public const int PkgAbsCnFieldNumber = 202;
    private int pkgAbsCn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PkgAbsCn {
      get { return pkgAbsCn_; }
      set {
        pkgAbsCn_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_cn" field.</summary>
    public const int PkgNetCnFieldNumber = 205;
    private int pkgNetCn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PkgNetCn {
      get { return pkgNetCn_; }
      set {
        pkgNetCn_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_dDe" field.</summary>
    public const int PkgAbsDDeFieldNumber = 208;
    private float pkgAbsDDe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsDDe {
      get { return pkgAbsDDe_; }
      set {
        pkgAbsDDe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_dDe" field.</summary>
    public const int PkgNetDDeFieldNumber = 211;
    private float pkgNetDDe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetDDe {
      get { return pkgNetDDe_; }
      set {
        pkgNetDDe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_pr" field.</summary>
    public const int PkgAbsPrFieldNumber = 214;
    private float pkgAbsPr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsPr {
      get { return pkgAbsPr_; }
      set {
        pkgAbsPr_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_pr" field.</summary>
    public const int PkgNetPrFieldNumber = 217;
    private float pkgNetPr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetPr {
      get { return pkgNetPr_; }
      set {
        pkgNetPr_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_ve" field.</summary>
    public const int PkgAbsVeFieldNumber = 220;
    private float pkgAbsVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsVe {
      get { return pkgAbsVe_; }
      set {
        pkgAbsVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_ve" field.</summary>
    public const int PkgNetVeFieldNumber = 223;
    private float pkgNetVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetVe {
      get { return pkgNetVe_; }
      set {
        pkgNetVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_tVe" field.</summary>
    public const int PkgAbsTVeFieldNumber = 226;
    private float pkgAbsTVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsTVe {
      get { return pkgAbsTVe_; }
      set {
        pkgAbsTVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_tVe" field.</summary>
    public const int PkgNetTVeFieldNumber = 229;
    private float pkgNetTVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetTVe {
      get { return pkgNetTVe_; }
      set {
        pkgNetTVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_wVe" field.</summary>
    public const int PkgAbsWVeFieldNumber = 232;
    private float pkgAbsWVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsWVe {
      get { return pkgAbsWVe_; }
      set {
        pkgAbsWVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_wVe" field.</summary>
    public const int PkgNetWVeFieldNumber = 235;
    private float pkgNetWVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetWVe {
      get { return pkgNetWVe_; }
      set {
        pkgNetWVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_wTVe" field.</summary>
    public const int PkgAbsWTVeFieldNumber = 238;
    private float pkgAbsWTVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsWTVe {
      get { return pkgAbsWTVe_; }
      set {
        pkgAbsWTVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_wTVe" field.</summary>
    public const int PkgNetWTVeFieldNumber = 241;
    private float pkgNetWTVe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetWTVe {
      get { return pkgNetWTVe_; }
      set {
        pkgNetWTVe_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_th" field.</summary>
    public const int PkgAbsThFieldNumber = 244;
    private float pkgAbsTh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsTh {
      get { return pkgAbsTh_; }
      set {
        pkgAbsTh_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_th" field.</summary>
    public const int PkgNetThFieldNumber = 247;
    private float pkgNetTh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetTh {
      get { return pkgNetTh_; }
      set {
        pkgNetTh_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_dTh" field.</summary>
    public const int PkgAbsDThFieldNumber = 250;
    private float pkgAbsDTh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsDTh {
      get { return pkgAbsDTh_; }
      set {
        pkgAbsDTh_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_ga" field.</summary>
    public const int PkgAbsGaFieldNumber = 253;
    private float pkgAbsGa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsGa {
      get { return pkgAbsGa_; }
      set {
        pkgAbsGa_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_ga" field.</summary>
    public const int PkgNetGaFieldNumber = 256;
    private float pkgNetGa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetGa {
      get { return pkgNetGa_; }
      set {
        pkgNetGa_ = value;
      }
    }

    /// <summary>Field number for the "pkg_abs_dGa" field.</summary>
    public const int PkgAbsDGaFieldNumber = 259;
    private float pkgAbsDGa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgAbsDGa {
      get { return pkgAbsDGa_; }
      set {
        pkgAbsDGa_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_dGa" field.</summary>
    public const int PkgNetDGaFieldNumber = 262;
    private float pkgNetDGa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetDGa {
      get { return pkgNetDGa_; }
      set {
        pkgNetDGa_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_uUp_vUp" field.</summary>
    public const int PkgNetUUpVUpFieldNumber = 284;
    private float pkgNetUUpVUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUUpVUp {
      get { return pkgNetUUpVUp_; }
      set {
        pkgNetUUpVUp_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_uUp_vDn" field.</summary>
    public const int PkgNetUUpVDnFieldNumber = 285;
    private float pkgNetUUpVDn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUUpVDn {
      get { return pkgNetUUpVDn_; }
      set {
        pkgNetUUpVDn_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_uDn_vUp" field.</summary>
    public const int PkgNetUDnVUpFieldNumber = 286;
    private float pkgNetUDnVUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUDnVUp {
      get { return pkgNetUDnVUp_; }
      set {
        pkgNetUDnVUp_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_uDn_vDn" field.</summary>
    public const int PkgNetUDnVDnFieldNumber = 287;
    private float pkgNetUDnVDn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUDnVDn {
      get { return pkgNetUDnVDn_; }
      set {
        pkgNetUDnVDn_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_up15_pn_l" field.</summary>
    public const int PkgNetUp15PnLFieldNumber = 265;
    private float pkgNetUp15PnL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUp15PnL {
      get { return pkgNetUp15PnL_; }
      set {
        pkgNetUp15PnL_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_dn15_pn_l" field.</summary>
    public const int PkgNetDn15PnLFieldNumber = 268;
    private float pkgNetDn15PnL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetDn15PnL {
      get { return pkgNetDn15PnL_; }
      set {
        pkgNetDn15PnL_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_up50_pn_l" field.</summary>
    public const int PkgNetUp50PnLFieldNumber = 271;
    private float pkgNetUp50PnL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetUp50PnL {
      get { return pkgNetUp50PnL_; }
      set {
        pkgNetUp50PnL_ = value;
      }
    }

    /// <summary>Field number for the "pkg_net_dn50_pn_l" field.</summary>
    public const int PkgNetDn50PnLFieldNumber = 274;
    private float pkgNetDn50PnL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PkgNetDn50PnL {
      get { return pkgNetDn50PnL_; }
      set {
        pkgNetDn50PnL_ = value;
      }
    }

    /// <summary>Field number for the "markup_result" field.</summary>
    public const int MarkupResultFieldNumber = 277;
    private global::Spiderrock.Protobuf.MarkupResult markupResult_ = global::Spiderrock.Protobuf.MarkupResult.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarkupResult MarkupResult {
      get { return markupResult_; }
      set {
        markupResult_ = value;
      }
    }

    /// <summary>Field number for the "markup_detail" field.</summary>
    public const int MarkupDetailFieldNumber = 280;
    private string markupDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkupDetail {
      get { return markupDetail_; }
      set {
        markupDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 283;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpdrAuctionMarkup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpdrAuctionMarkup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (SrAuctionID != other.SrAuctionID) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (OptionRoots != other.OptionRoots) return false;
      if (ExchAuctionId != other.ExchAuctionId) return false;
      if (ExchAuctionType != other.ExchAuctionType) return false;
      if (AuctionType != other.AuctionType) return false;
      if (AuctionSide != other.AuctionSide) return false;
      if (AuctionSize != other.AuctionSize) return false;
      if (NumLegs != other.NumLegs) return false;
      if (NumOptLegs != other.NumOptLegs) return false;
      if (InclStock != other.InclStock) return false;
      if (InclMultihedge != other.InclMultihedge) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinYears, other.MinYears)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxYears, other.MaxYears)) return false;
      if (!object.Equals(MinExpiry, other.MinExpiry)) return false;
      if (!object.Equals(MaxExpiry, other.MaxExpiry)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxYearsRange, other.MaxYearsRange)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinAbsDe, other.MinAbsDe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxAbsDe, other.MaxAbsDe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinXAxis, other.MinXAxis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxXAxis, other.MaxXAxis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinStrike, other.MinStrike)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxStrike, other.MaxStrike)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxStrikeRange, other.MaxStrikeRange)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DeltaRange, other.DeltaRange)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AuctionPrice, other.AuctionPrice)) return false;
      if (IsAuctionPriceValid != other.IsAuctionPriceValid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SurfPrice, other.SurfPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProbPrice, other.ProbPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (SpreadShape != other.SpreadShape) return false;
      if (NumValidLegs != other.NumValidLegs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UPrc, other.UPrc)) return false;
      if (PkgAbsCn != other.PkgAbsCn) return false;
      if (PkgNetCn != other.PkgNetCn) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsDDe, other.PkgAbsDDe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetDDe, other.PkgNetDDe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsPr, other.PkgAbsPr)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetPr, other.PkgNetPr)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsVe, other.PkgAbsVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetVe, other.PkgNetVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsTVe, other.PkgAbsTVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetTVe, other.PkgNetTVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsWVe, other.PkgAbsWVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetWVe, other.PkgNetWVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsWTVe, other.PkgAbsWTVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetWTVe, other.PkgNetWTVe)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsTh, other.PkgAbsTh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetTh, other.PkgNetTh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsDTh, other.PkgAbsDTh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsGa, other.PkgAbsGa)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetGa, other.PkgNetGa)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgAbsDGa, other.PkgAbsDGa)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetDGa, other.PkgNetDGa)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUUpVUp, other.PkgNetUUpVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUUpVDn, other.PkgNetUUpVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUDnVUp, other.PkgNetUDnVUp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUDnVDn, other.PkgNetUDnVDn)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUp15PnL, other.PkgNetUp15PnL)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetDn15PnL, other.PkgNetDn15PnL)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetUp50PnL, other.PkgNetUp50PnL)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PkgNetDn50PnL, other.PkgNetDn50PnL)) return false;
      if (MarkupResult != other.MarkupResult) return false;
      if (MarkupDetail != other.MarkupDetail) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (SrAuctionID != 0L) hash ^= SrAuctionID.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (OptionRoots.Length != 0) hash ^= OptionRoots.GetHashCode();
      if (ExchAuctionId.Length != 0) hash ^= ExchAuctionId.GetHashCode();
      if (ExchAuctionType.Length != 0) hash ^= ExchAuctionType.GetHashCode();
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) hash ^= AuctionType.GetHashCode();
      if (AuctionSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= AuctionSide.GetHashCode();
      if (AuctionSize != 0) hash ^= AuctionSize.GetHashCode();
      if (NumLegs != 0) hash ^= NumLegs.GetHashCode();
      if (NumOptLegs != 0) hash ^= NumOptLegs.GetHashCode();
      if (InclStock != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= InclStock.GetHashCode();
      if (InclMultihedge != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= InclMultihedge.GetHashCode();
      if (MinYears != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinYears);
      if (MaxYears != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxYears);
      if (minExpiry_ != null) hash ^= MinExpiry.GetHashCode();
      if (maxExpiry_ != null) hash ^= MaxExpiry.GetHashCode();
      if (MaxYearsRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxYearsRange);
      if (MinAbsDe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinAbsDe);
      if (MaxAbsDe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxAbsDe);
      if (MinXAxis != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinXAxis);
      if (MaxXAxis != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxXAxis);
      if (MinStrike != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinStrike);
      if (MaxStrike != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxStrike);
      if (MaxStrikeRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxStrikeRange);
      if (DeltaRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DeltaRange);
      if (AuctionPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AuctionPrice);
      if (IsAuctionPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsAuctionPriceValid.GetHashCode();
      if (SurfPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SurfPrice);
      if (ProbPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProbPrice);
      if (BidPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice);
      if (SpreadShape != global::Spiderrock.Protobuf.SpreadShape.Unspecified) hash ^= SpreadShape.GetHashCode();
      if (NumValidLegs != 0) hash ^= NumValidLegs.GetHashCode();
      if (UPrc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UPrc);
      if (PkgAbsCn != 0) hash ^= PkgAbsCn.GetHashCode();
      if (PkgNetCn != 0) hash ^= PkgNetCn.GetHashCode();
      if (PkgAbsDDe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsDDe);
      if (PkgNetDDe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetDDe);
      if (PkgAbsPr != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsPr);
      if (PkgNetPr != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetPr);
      if (PkgAbsVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsVe);
      if (PkgNetVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetVe);
      if (PkgAbsTVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsTVe);
      if (PkgNetTVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetTVe);
      if (PkgAbsWVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsWVe);
      if (PkgNetWVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetWVe);
      if (PkgAbsWTVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsWTVe);
      if (PkgNetWTVe != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetWTVe);
      if (PkgAbsTh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsTh);
      if (PkgNetTh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetTh);
      if (PkgAbsDTh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsDTh);
      if (PkgAbsGa != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsGa);
      if (PkgNetGa != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetGa);
      if (PkgAbsDGa != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgAbsDGa);
      if (PkgNetDGa != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetDGa);
      if (PkgNetUUpVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUUpVUp);
      if (PkgNetUUpVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUUpVDn);
      if (PkgNetUDnVUp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUDnVUp);
      if (PkgNetUDnVDn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUDnVDn);
      if (PkgNetUp15PnL != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUp15PnL);
      if (PkgNetDn15PnL != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetDn15PnL);
      if (PkgNetUp50PnL != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetUp50PnL);
      if (PkgNetDn50PnL != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PkgNetDn50PnL);
      if (MarkupResult != global::Spiderrock.Protobuf.MarkupResult.Unspecified) hash ^= MarkupResult.GetHashCode();
      if (MarkupDetail.Length != 0) hash ^= MarkupDetail.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SrAuctionID != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(SrAuctionID);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (OptionRoots.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(OptionRoots);
      }
      if (ExchAuctionId.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(ExchAuctionId);
      }
      if (ExchAuctionType.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(ExchAuctionType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) AuctionType);
      }
      if (AuctionSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) AuctionSide);
      }
      if (AuctionSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(AuctionSize);
      }
      if (NumLegs != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(NumLegs);
      }
      if (NumOptLegs != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(NumOptLegs);
      }
      if (InclStock != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) InclStock);
      }
      if (InclMultihedge != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) InclMultihedge);
      }
      if (MinYears != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(MinYears);
      }
      if (MaxYears != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaxYears);
      }
      if (minExpiry_ != null) {
        output.WriteRawTag(242, 8);
        output.WriteMessage(MinExpiry);
      }
      if (maxExpiry_ != null) {
        output.WriteRawTag(138, 9);
        output.WriteMessage(MaxExpiry);
      }
      if (MaxYearsRange != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(MaxYearsRange);
      }
      if (MinAbsDe != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(MinAbsDe);
      }
      if (MaxAbsDe != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(MaxAbsDe);
      }
      if (MinXAxis != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(MinXAxis);
      }
      if (MaxXAxis != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(MaxXAxis);
      }
      if (MinStrike != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(MinStrike);
      }
      if (MaxStrike != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(MaxStrike);
      }
      if (MaxStrikeRange != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(MaxStrikeRange);
      }
      if (DeltaRange != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(DeltaRange);
      }
      if (AuctionPrice != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(AuctionPrice);
      }
      if (IsAuctionPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) IsAuctionPriceValid);
      }
      if (SurfPrice != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(SurfPrice);
      }
      if (ProbPrice != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(ProbPrice);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(AskPrice);
      }
      if (SpreadShape != global::Spiderrock.Protobuf.SpreadShape.Unspecified) {
        output.WriteRawTag(136, 12);
        output.WriteEnum((int) SpreadShape);
      }
      if (NumValidLegs != 0) {
        output.WriteRawTag(160, 12);
        output.WriteInt32(NumValidLegs);
      }
      if (UPrc != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(UPrc);
      }
      if (PkgAbsCn != 0) {
        output.WriteRawTag(208, 12);
        output.WriteInt32(PkgAbsCn);
      }
      if (PkgNetCn != 0) {
        output.WriteRawTag(232, 12);
        output.WriteInt32(PkgNetCn);
      }
      if (PkgAbsDDe != 0F) {
        output.WriteRawTag(133, 13);
        output.WriteFloat(PkgAbsDDe);
      }
      if (PkgNetDDe != 0F) {
        output.WriteRawTag(157, 13);
        output.WriteFloat(PkgNetDDe);
      }
      if (PkgAbsPr != 0F) {
        output.WriteRawTag(181, 13);
        output.WriteFloat(PkgAbsPr);
      }
      if (PkgNetPr != 0F) {
        output.WriteRawTag(205, 13);
        output.WriteFloat(PkgNetPr);
      }
      if (PkgAbsVe != 0F) {
        output.WriteRawTag(229, 13);
        output.WriteFloat(PkgAbsVe);
      }
      if (PkgNetVe != 0F) {
        output.WriteRawTag(253, 13);
        output.WriteFloat(PkgNetVe);
      }
      if (PkgAbsTVe != 0F) {
        output.WriteRawTag(149, 14);
        output.WriteFloat(PkgAbsTVe);
      }
      if (PkgNetTVe != 0F) {
        output.WriteRawTag(173, 14);
        output.WriteFloat(PkgNetTVe);
      }
      if (PkgAbsWVe != 0F) {
        output.WriteRawTag(197, 14);
        output.WriteFloat(PkgAbsWVe);
      }
      if (PkgNetWVe != 0F) {
        output.WriteRawTag(221, 14);
        output.WriteFloat(PkgNetWVe);
      }
      if (PkgAbsWTVe != 0F) {
        output.WriteRawTag(245, 14);
        output.WriteFloat(PkgAbsWTVe);
      }
      if (PkgNetWTVe != 0F) {
        output.WriteRawTag(141, 15);
        output.WriteFloat(PkgNetWTVe);
      }
      if (PkgAbsTh != 0F) {
        output.WriteRawTag(165, 15);
        output.WriteFloat(PkgAbsTh);
      }
      if (PkgNetTh != 0F) {
        output.WriteRawTag(189, 15);
        output.WriteFloat(PkgNetTh);
      }
      if (PkgAbsDTh != 0F) {
        output.WriteRawTag(213, 15);
        output.WriteFloat(PkgAbsDTh);
      }
      if (PkgAbsGa != 0F) {
        output.WriteRawTag(237, 15);
        output.WriteFloat(PkgAbsGa);
      }
      if (PkgNetGa != 0F) {
        output.WriteRawTag(133, 16);
        output.WriteFloat(PkgNetGa);
      }
      if (PkgAbsDGa != 0F) {
        output.WriteRawTag(157, 16);
        output.WriteFloat(PkgAbsDGa);
      }
      if (PkgNetDGa != 0F) {
        output.WriteRawTag(181, 16);
        output.WriteFloat(PkgNetDGa);
      }
      if (PkgNetUp15PnL != 0F) {
        output.WriteRawTag(205, 16);
        output.WriteFloat(PkgNetUp15PnL);
      }
      if (PkgNetDn15PnL != 0F) {
        output.WriteRawTag(229, 16);
        output.WriteFloat(PkgNetDn15PnL);
      }
      if (PkgNetUp50PnL != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(PkgNetUp50PnL);
      }
      if (PkgNetDn50PnL != 0F) {
        output.WriteRawTag(149, 17);
        output.WriteFloat(PkgNetDn50PnL);
      }
      if (MarkupResult != global::Spiderrock.Protobuf.MarkupResult.Unspecified) {
        output.WriteRawTag(168, 17);
        output.WriteEnum((int) MarkupResult);
      }
      if (MarkupDetail.Length != 0) {
        output.WriteRawTag(194, 17);
        output.WriteString(MarkupDetail);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 17);
        output.WriteMessage(Timestamp);
      }
      if (PkgNetUUpVUp != 0F) {
        output.WriteRawTag(229, 17);
        output.WriteFloat(PkgNetUUpVUp);
      }
      if (PkgNetUUpVDn != 0F) {
        output.WriteRawTag(237, 17);
        output.WriteFloat(PkgNetUUpVDn);
      }
      if (PkgNetUDnVUp != 0F) {
        output.WriteRawTag(245, 17);
        output.WriteFloat(PkgNetUDnVUp);
      }
      if (PkgNetUDnVDn != 0F) {
        output.WriteRawTag(253, 17);
        output.WriteFloat(PkgNetUDnVDn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (SrAuctionID != 0L) {
        output.WriteRawTag(160, 6);
        output.WriteInt64(SrAuctionID);
      }
      if (ticker_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Ticker);
      }
      if (OptionRoots.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(OptionRoots);
      }
      if (ExchAuctionId.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(ExchAuctionId);
      }
      if (ExchAuctionType.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(ExchAuctionType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        output.WriteRawTag(152, 7);
        output.WriteEnum((int) AuctionType);
      }
      if (AuctionSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) AuctionSide);
      }
      if (AuctionSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(AuctionSize);
      }
      if (NumLegs != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(NumLegs);
      }
      if (NumOptLegs != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(NumOptLegs);
      }
      if (InclStock != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 8);
        output.WriteEnum((int) InclStock);
      }
      if (InclMultihedge != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) InclMultihedge);
      }
      if (MinYears != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(MinYears);
      }
      if (MaxYears != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaxYears);
      }
      if (minExpiry_ != null) {
        output.WriteRawTag(242, 8);
        output.WriteMessage(MinExpiry);
      }
      if (maxExpiry_ != null) {
        output.WriteRawTag(138, 9);
        output.WriteMessage(MaxExpiry);
      }
      if (MaxYearsRange != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(MaxYearsRange);
      }
      if (MinAbsDe != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(MinAbsDe);
      }
      if (MaxAbsDe != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(MaxAbsDe);
      }
      if (MinXAxis != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(MinXAxis);
      }
      if (MaxXAxis != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(MaxXAxis);
      }
      if (MinStrike != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(MinStrike);
      }
      if (MaxStrike != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(MaxStrike);
      }
      if (MaxStrikeRange != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(MaxStrikeRange);
      }
      if (DeltaRange != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(DeltaRange);
      }
      if (AuctionPrice != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(AuctionPrice);
      }
      if (IsAuctionPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) IsAuctionPriceValid);
      }
      if (SurfPrice != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(SurfPrice);
      }
      if (ProbPrice != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(ProbPrice);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(AskPrice);
      }
      if (SpreadShape != global::Spiderrock.Protobuf.SpreadShape.Unspecified) {
        output.WriteRawTag(136, 12);
        output.WriteEnum((int) SpreadShape);
      }
      if (NumValidLegs != 0) {
        output.WriteRawTag(160, 12);
        output.WriteInt32(NumValidLegs);
      }
      if (UPrc != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(UPrc);
      }
      if (PkgAbsCn != 0) {
        output.WriteRawTag(208, 12);
        output.WriteInt32(PkgAbsCn);
      }
      if (PkgNetCn != 0) {
        output.WriteRawTag(232, 12);
        output.WriteInt32(PkgNetCn);
      }
      if (PkgAbsDDe != 0F) {
        output.WriteRawTag(133, 13);
        output.WriteFloat(PkgAbsDDe);
      }
      if (PkgNetDDe != 0F) {
        output.WriteRawTag(157, 13);
        output.WriteFloat(PkgNetDDe);
      }
      if (PkgAbsPr != 0F) {
        output.WriteRawTag(181, 13);
        output.WriteFloat(PkgAbsPr);
      }
      if (PkgNetPr != 0F) {
        output.WriteRawTag(205, 13);
        output.WriteFloat(PkgNetPr);
      }
      if (PkgAbsVe != 0F) {
        output.WriteRawTag(229, 13);
        output.WriteFloat(PkgAbsVe);
      }
      if (PkgNetVe != 0F) {
        output.WriteRawTag(253, 13);
        output.WriteFloat(PkgNetVe);
      }
      if (PkgAbsTVe != 0F) {
        output.WriteRawTag(149, 14);
        output.WriteFloat(PkgAbsTVe);
      }
      if (PkgNetTVe != 0F) {
        output.WriteRawTag(173, 14);
        output.WriteFloat(PkgNetTVe);
      }
      if (PkgAbsWVe != 0F) {
        output.WriteRawTag(197, 14);
        output.WriteFloat(PkgAbsWVe);
      }
      if (PkgNetWVe != 0F) {
        output.WriteRawTag(221, 14);
        output.WriteFloat(PkgNetWVe);
      }
      if (PkgAbsWTVe != 0F) {
        output.WriteRawTag(245, 14);
        output.WriteFloat(PkgAbsWTVe);
      }
      if (PkgNetWTVe != 0F) {
        output.WriteRawTag(141, 15);
        output.WriteFloat(PkgNetWTVe);
      }
      if (PkgAbsTh != 0F) {
        output.WriteRawTag(165, 15);
        output.WriteFloat(PkgAbsTh);
      }
      if (PkgNetTh != 0F) {
        output.WriteRawTag(189, 15);
        output.WriteFloat(PkgNetTh);
      }
      if (PkgAbsDTh != 0F) {
        output.WriteRawTag(213, 15);
        output.WriteFloat(PkgAbsDTh);
      }
      if (PkgAbsGa != 0F) {
        output.WriteRawTag(237, 15);
        output.WriteFloat(PkgAbsGa);
      }
      if (PkgNetGa != 0F) {
        output.WriteRawTag(133, 16);
        output.WriteFloat(PkgNetGa);
      }
      if (PkgAbsDGa != 0F) {
        output.WriteRawTag(157, 16);
        output.WriteFloat(PkgAbsDGa);
      }
      if (PkgNetDGa != 0F) {
        output.WriteRawTag(181, 16);
        output.WriteFloat(PkgNetDGa);
      }
      if (PkgNetUp15PnL != 0F) {
        output.WriteRawTag(205, 16);
        output.WriteFloat(PkgNetUp15PnL);
      }
      if (PkgNetDn15PnL != 0F) {
        output.WriteRawTag(229, 16);
        output.WriteFloat(PkgNetDn15PnL);
      }
      if (PkgNetUp50PnL != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(PkgNetUp50PnL);
      }
      if (PkgNetDn50PnL != 0F) {
        output.WriteRawTag(149, 17);
        output.WriteFloat(PkgNetDn50PnL);
      }
      if (MarkupResult != global::Spiderrock.Protobuf.MarkupResult.Unspecified) {
        output.WriteRawTag(168, 17);
        output.WriteEnum((int) MarkupResult);
      }
      if (MarkupDetail.Length != 0) {
        output.WriteRawTag(194, 17);
        output.WriteString(MarkupDetail);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(218, 17);
        output.WriteMessage(Timestamp);
      }
      if (PkgNetUUpVUp != 0F) {
        output.WriteRawTag(229, 17);
        output.WriteFloat(PkgNetUUpVUp);
      }
      if (PkgNetUUpVDn != 0F) {
        output.WriteRawTag(237, 17);
        output.WriteFloat(PkgNetUUpVDn);
      }
      if (PkgNetUDnVUp != 0F) {
        output.WriteRawTag(245, 17);
        output.WriteFloat(PkgNetUDnVUp);
      }
      if (PkgNetUDnVDn != 0F) {
        output.WriteRawTag(253, 17);
        output.WriteFloat(PkgNetUDnVDn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (SrAuctionID != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrAuctionID);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (OptionRoots.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OptionRoots);
      }
      if (ExchAuctionId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExchAuctionId);
      }
      if (ExchAuctionType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExchAuctionType);
      }
      if (AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionType);
      }
      if (AuctionSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionSide);
      }
      if (AuctionSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AuctionSize);
      }
      if (NumLegs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumLegs);
      }
      if (NumOptLegs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumOptLegs);
      }
      if (InclStock != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) InclStock);
      }
      if (InclMultihedge != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) InclMultihedge);
      }
      if (MinYears != 0F) {
        size += 2 + 4;
      }
      if (MaxYears != 0F) {
        size += 2 + 4;
      }
      if (minExpiry_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MinExpiry);
      }
      if (maxExpiry_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaxExpiry);
      }
      if (MaxYearsRange != 0F) {
        size += 2 + 4;
      }
      if (MinAbsDe != 0F) {
        size += 2 + 4;
      }
      if (MaxAbsDe != 0F) {
        size += 2 + 4;
      }
      if (MinXAxis != 0F) {
        size += 2 + 4;
      }
      if (MaxXAxis != 0F) {
        size += 2 + 4;
      }
      if (MinStrike != 0F) {
        size += 2 + 4;
      }
      if (MaxStrike != 0F) {
        size += 2 + 4;
      }
      if (MaxStrikeRange != 0F) {
        size += 2 + 4;
      }
      if (DeltaRange != 0F) {
        size += 2 + 4;
      }
      if (AuctionPrice != 0D) {
        size += 2 + 8;
      }
      if (IsAuctionPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsAuctionPriceValid);
      }
      if (SurfPrice != 0F) {
        size += 2 + 4;
      }
      if (ProbPrice != 0F) {
        size += 2 + 4;
      }
      if (BidPrice != 0F) {
        size += 2 + 4;
      }
      if (AskPrice != 0F) {
        size += 2 + 4;
      }
      if (SpreadShape != global::Spiderrock.Protobuf.SpreadShape.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SpreadShape);
      }
      if (NumValidLegs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumValidLegs);
      }
      if (UPrc != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsCn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PkgAbsCn);
      }
      if (PkgNetCn != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PkgNetCn);
      }
      if (PkgAbsDDe != 0F) {
        size += 2 + 4;
      }
      if (PkgNetDDe != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsPr != 0F) {
        size += 2 + 4;
      }
      if (PkgNetPr != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsVe != 0F) {
        size += 2 + 4;
      }
      if (PkgNetVe != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsTVe != 0F) {
        size += 2 + 4;
      }
      if (PkgNetTVe != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsWVe != 0F) {
        size += 2 + 4;
      }
      if (PkgNetWVe != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsWTVe != 0F) {
        size += 2 + 4;
      }
      if (PkgNetWTVe != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsTh != 0F) {
        size += 2 + 4;
      }
      if (PkgNetTh != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsDTh != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsGa != 0F) {
        size += 2 + 4;
      }
      if (PkgNetGa != 0F) {
        size += 2 + 4;
      }
      if (PkgAbsDGa != 0F) {
        size += 2 + 4;
      }
      if (PkgNetDGa != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUUpVUp != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUUpVDn != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUDnVUp != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUDnVDn != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUp15PnL != 0F) {
        size += 2 + 4;
      }
      if (PkgNetDn15PnL != 0F) {
        size += 2 + 4;
      }
      if (PkgNetUp50PnL != 0F) {
        size += 2 + 4;
      }
      if (PkgNetDn50PnL != 0F) {
        size += 2 + 4;
      }
      if (MarkupResult != global::Spiderrock.Protobuf.MarkupResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarkupResult);
      }
      if (MarkupDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MarkupDetail);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpdrAuctionMarkup other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.SrAuctionID != 0L) {
        SrAuctionID = other.SrAuctionID;
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.OptionRoots.Length != 0) {
        OptionRoots = other.OptionRoots;
      }
      if (other.ExchAuctionId.Length != 0) {
        ExchAuctionId = other.ExchAuctionId;
      }
      if (other.ExchAuctionType.Length != 0) {
        ExchAuctionType = other.ExchAuctionType;
      }
      if (other.AuctionType != global::Spiderrock.Protobuf.AuctionType.Unspecified) {
        AuctionType = other.AuctionType;
      }
      if (other.AuctionSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        AuctionSide = other.AuctionSide;
      }
      if (other.AuctionSize != 0) {
        AuctionSize = other.AuctionSize;
      }
      if (other.NumLegs != 0) {
        NumLegs = other.NumLegs;
      }
      if (other.NumOptLegs != 0) {
        NumOptLegs = other.NumOptLegs;
      }
      if (other.InclStock != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        InclStock = other.InclStock;
      }
      if (other.InclMultihedge != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        InclMultihedge = other.InclMultihedge;
      }
      if (other.MinYears != 0F) {
        MinYears = other.MinYears;
      }
      if (other.MaxYears != 0F) {
        MaxYears = other.MaxYears;
      }
      if (other.minExpiry_ != null) {
        if (minExpiry_ == null) {
          MinExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MinExpiry.MergeFrom(other.MinExpiry);
      }
      if (other.maxExpiry_ != null) {
        if (maxExpiry_ == null) {
          MaxExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MaxExpiry.MergeFrom(other.MaxExpiry);
      }
      if (other.MaxYearsRange != 0F) {
        MaxYearsRange = other.MaxYearsRange;
      }
      if (other.MinAbsDe != 0F) {
        MinAbsDe = other.MinAbsDe;
      }
      if (other.MaxAbsDe != 0F) {
        MaxAbsDe = other.MaxAbsDe;
      }
      if (other.MinXAxis != 0F) {
        MinXAxis = other.MinXAxis;
      }
      if (other.MaxXAxis != 0F) {
        MaxXAxis = other.MaxXAxis;
      }
      if (other.MinStrike != 0F) {
        MinStrike = other.MinStrike;
      }
      if (other.MaxStrike != 0F) {
        MaxStrike = other.MaxStrike;
      }
      if (other.MaxStrikeRange != 0F) {
        MaxStrikeRange = other.MaxStrikeRange;
      }
      if (other.DeltaRange != 0F) {
        DeltaRange = other.DeltaRange;
      }
      if (other.AuctionPrice != 0D) {
        AuctionPrice = other.AuctionPrice;
      }
      if (other.IsAuctionPriceValid != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsAuctionPriceValid = other.IsAuctionPriceValid;
      }
      if (other.SurfPrice != 0F) {
        SurfPrice = other.SurfPrice;
      }
      if (other.ProbPrice != 0F) {
        ProbPrice = other.ProbPrice;
      }
      if (other.BidPrice != 0F) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0F) {
        AskPrice = other.AskPrice;
      }
      if (other.SpreadShape != global::Spiderrock.Protobuf.SpreadShape.Unspecified) {
        SpreadShape = other.SpreadShape;
      }
      if (other.NumValidLegs != 0) {
        NumValidLegs = other.NumValidLegs;
      }
      if (other.UPrc != 0F) {
        UPrc = other.UPrc;
      }
      if (other.PkgAbsCn != 0) {
        PkgAbsCn = other.PkgAbsCn;
      }
      if (other.PkgNetCn != 0) {
        PkgNetCn = other.PkgNetCn;
      }
      if (other.PkgAbsDDe != 0F) {
        PkgAbsDDe = other.PkgAbsDDe;
      }
      if (other.PkgNetDDe != 0F) {
        PkgNetDDe = other.PkgNetDDe;
      }
      if (other.PkgAbsPr != 0F) {
        PkgAbsPr = other.PkgAbsPr;
      }
      if (other.PkgNetPr != 0F) {
        PkgNetPr = other.PkgNetPr;
      }
      if (other.PkgAbsVe != 0F) {
        PkgAbsVe = other.PkgAbsVe;
      }
      if (other.PkgNetVe != 0F) {
        PkgNetVe = other.PkgNetVe;
      }
      if (other.PkgAbsTVe != 0F) {
        PkgAbsTVe = other.PkgAbsTVe;
      }
      if (other.PkgNetTVe != 0F) {
        PkgNetTVe = other.PkgNetTVe;
      }
      if (other.PkgAbsWVe != 0F) {
        PkgAbsWVe = other.PkgAbsWVe;
      }
      if (other.PkgNetWVe != 0F) {
        PkgNetWVe = other.PkgNetWVe;
      }
      if (other.PkgAbsWTVe != 0F) {
        PkgAbsWTVe = other.PkgAbsWTVe;
      }
      if (other.PkgNetWTVe != 0F) {
        PkgNetWTVe = other.PkgNetWTVe;
      }
      if (other.PkgAbsTh != 0F) {
        PkgAbsTh = other.PkgAbsTh;
      }
      if (other.PkgNetTh != 0F) {
        PkgNetTh = other.PkgNetTh;
      }
      if (other.PkgAbsDTh != 0F) {
        PkgAbsDTh = other.PkgAbsDTh;
      }
      if (other.PkgAbsGa != 0F) {
        PkgAbsGa = other.PkgAbsGa;
      }
      if (other.PkgNetGa != 0F) {
        PkgNetGa = other.PkgNetGa;
      }
      if (other.PkgAbsDGa != 0F) {
        PkgAbsDGa = other.PkgAbsDGa;
      }
      if (other.PkgNetDGa != 0F) {
        PkgNetDGa = other.PkgNetDGa;
      }
      if (other.PkgNetUUpVUp != 0F) {
        PkgNetUUpVUp = other.PkgNetUUpVUp;
      }
      if (other.PkgNetUUpVDn != 0F) {
        PkgNetUUpVDn = other.PkgNetUUpVDn;
      }
      if (other.PkgNetUDnVUp != 0F) {
        PkgNetUDnVUp = other.PkgNetUDnVUp;
      }
      if (other.PkgNetUDnVDn != 0F) {
        PkgNetUDnVDn = other.PkgNetUDnVDn;
      }
      if (other.PkgNetUp15PnL != 0F) {
        PkgNetUp15PnL = other.PkgNetUp15PnL;
      }
      if (other.PkgNetDn15PnL != 0F) {
        PkgNetDn15PnL = other.PkgNetDn15PnL;
      }
      if (other.PkgNetUp50PnL != 0F) {
        PkgNetUp50PnL = other.PkgNetUp50PnL;
      }
      if (other.PkgNetDn50PnL != 0F) {
        PkgNetDn50PnL = other.PkgNetDn50PnL;
      }
      if (other.MarkupResult != global::Spiderrock.Protobuf.MarkupResult.Unspecified) {
        MarkupResult = other.MarkupResult;
      }
      if (other.MarkupDetail.Length != 0) {
        MarkupDetail = other.MarkupDetail;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SrAuctionID = input.ReadInt64();
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 850: {
            OptionRoots = input.ReadString();
            break;
          }
          case 874: {
            ExchAuctionId = input.ReadString();
            break;
          }
          case 898: {
            ExchAuctionType = input.ReadString();
            break;
          }
          case 920: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 944: {
            AuctionSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            AuctionSize = input.ReadInt32();
            break;
          }
          case 992: {
            NumLegs = input.ReadInt32();
            break;
          }
          case 1016: {
            NumOptLegs = input.ReadInt32();
            break;
          }
          case 1040: {
            InclStock = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1064: {
            InclMultihedge = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1093: {
            MinYears = input.ReadFloat();
            break;
          }
          case 1117: {
            MaxYears = input.ReadFloat();
            break;
          }
          case 1138: {
            if (minExpiry_ == null) {
              MinExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinExpiry);
            break;
          }
          case 1162: {
            if (maxExpiry_ == null) {
              MaxExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxExpiry);
            break;
          }
          case 1189: {
            MaxYearsRange = input.ReadFloat();
            break;
          }
          case 1213: {
            MinAbsDe = input.ReadFloat();
            break;
          }
          case 1237: {
            MaxAbsDe = input.ReadFloat();
            break;
          }
          case 1261: {
            MinXAxis = input.ReadFloat();
            break;
          }
          case 1285: {
            MaxXAxis = input.ReadFloat();
            break;
          }
          case 1309: {
            MinStrike = input.ReadFloat();
            break;
          }
          case 1333: {
            MaxStrike = input.ReadFloat();
            break;
          }
          case 1357: {
            MaxStrikeRange = input.ReadFloat();
            break;
          }
          case 1381: {
            DeltaRange = input.ReadFloat();
            break;
          }
          case 1401: {
            AuctionPrice = input.ReadDouble();
            break;
          }
          case 1424: {
            IsAuctionPriceValid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1453: {
            SurfPrice = input.ReadFloat();
            break;
          }
          case 1477: {
            ProbPrice = input.ReadFloat();
            break;
          }
          case 1501: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1525: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1544: {
            SpreadShape = (global::Spiderrock.Protobuf.SpreadShape) input.ReadEnum();
            break;
          }
          case 1568: {
            NumValidLegs = input.ReadInt32();
            break;
          }
          case 1597: {
            UPrc = input.ReadFloat();
            break;
          }
          case 1616: {
            PkgAbsCn = input.ReadInt32();
            break;
          }
          case 1640: {
            PkgNetCn = input.ReadInt32();
            break;
          }
          case 1669: {
            PkgAbsDDe = input.ReadFloat();
            break;
          }
          case 1693: {
            PkgNetDDe = input.ReadFloat();
            break;
          }
          case 1717: {
            PkgAbsPr = input.ReadFloat();
            break;
          }
          case 1741: {
            PkgNetPr = input.ReadFloat();
            break;
          }
          case 1765: {
            PkgAbsVe = input.ReadFloat();
            break;
          }
          case 1789: {
            PkgNetVe = input.ReadFloat();
            break;
          }
          case 1813: {
            PkgAbsTVe = input.ReadFloat();
            break;
          }
          case 1837: {
            PkgNetTVe = input.ReadFloat();
            break;
          }
          case 1861: {
            PkgAbsWVe = input.ReadFloat();
            break;
          }
          case 1885: {
            PkgNetWVe = input.ReadFloat();
            break;
          }
          case 1909: {
            PkgAbsWTVe = input.ReadFloat();
            break;
          }
          case 1933: {
            PkgNetWTVe = input.ReadFloat();
            break;
          }
          case 1957: {
            PkgAbsTh = input.ReadFloat();
            break;
          }
          case 1981: {
            PkgNetTh = input.ReadFloat();
            break;
          }
          case 2005: {
            PkgAbsDTh = input.ReadFloat();
            break;
          }
          case 2029: {
            PkgAbsGa = input.ReadFloat();
            break;
          }
          case 2053: {
            PkgNetGa = input.ReadFloat();
            break;
          }
          case 2077: {
            PkgAbsDGa = input.ReadFloat();
            break;
          }
          case 2101: {
            PkgNetDGa = input.ReadFloat();
            break;
          }
          case 2125: {
            PkgNetUp15PnL = input.ReadFloat();
            break;
          }
          case 2149: {
            PkgNetDn15PnL = input.ReadFloat();
            break;
          }
          case 2173: {
            PkgNetUp50PnL = input.ReadFloat();
            break;
          }
          case 2197: {
            PkgNetDn50PnL = input.ReadFloat();
            break;
          }
          case 2216: {
            MarkupResult = (global::Spiderrock.Protobuf.MarkupResult) input.ReadEnum();
            break;
          }
          case 2242: {
            MarkupDetail = input.ReadString();
            break;
          }
          case 2266: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 2277: {
            PkgNetUUpVUp = input.ReadFloat();
            break;
          }
          case 2285: {
            PkgNetUUpVDn = input.ReadFloat();
            break;
          }
          case 2293: {
            PkgNetUDnVUp = input.ReadFloat();
            break;
          }
          case 2301: {
            PkgNetUDnVDn = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.SpdrAuctionMarkup.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            SrAuctionID = input.ReadInt64();
            break;
          }
          case 826: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 850: {
            OptionRoots = input.ReadString();
            break;
          }
          case 874: {
            ExchAuctionId = input.ReadString();
            break;
          }
          case 898: {
            ExchAuctionType = input.ReadString();
            break;
          }
          case 920: {
            AuctionType = (global::Spiderrock.Protobuf.AuctionType) input.ReadEnum();
            break;
          }
          case 944: {
            AuctionSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 968: {
            AuctionSize = input.ReadInt32();
            break;
          }
          case 992: {
            NumLegs = input.ReadInt32();
            break;
          }
          case 1016: {
            NumOptLegs = input.ReadInt32();
            break;
          }
          case 1040: {
            InclStock = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1064: {
            InclMultihedge = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1093: {
            MinYears = input.ReadFloat();
            break;
          }
          case 1117: {
            MaxYears = input.ReadFloat();
            break;
          }
          case 1138: {
            if (minExpiry_ == null) {
              MinExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinExpiry);
            break;
          }
          case 1162: {
            if (maxExpiry_ == null) {
              MaxExpiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxExpiry);
            break;
          }
          case 1189: {
            MaxYearsRange = input.ReadFloat();
            break;
          }
          case 1213: {
            MinAbsDe = input.ReadFloat();
            break;
          }
          case 1237: {
            MaxAbsDe = input.ReadFloat();
            break;
          }
          case 1261: {
            MinXAxis = input.ReadFloat();
            break;
          }
          case 1285: {
            MaxXAxis = input.ReadFloat();
            break;
          }
          case 1309: {
            MinStrike = input.ReadFloat();
            break;
          }
          case 1333: {
            MaxStrike = input.ReadFloat();
            break;
          }
          case 1357: {
            MaxStrikeRange = input.ReadFloat();
            break;
          }
          case 1381: {
            DeltaRange = input.ReadFloat();
            break;
          }
          case 1401: {
            AuctionPrice = input.ReadDouble();
            break;
          }
          case 1424: {
            IsAuctionPriceValid = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1453: {
            SurfPrice = input.ReadFloat();
            break;
          }
          case 1477: {
            ProbPrice = input.ReadFloat();
            break;
          }
          case 1501: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 1525: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 1544: {
            SpreadShape = (global::Spiderrock.Protobuf.SpreadShape) input.ReadEnum();
            break;
          }
          case 1568: {
            NumValidLegs = input.ReadInt32();
            break;
          }
          case 1597: {
            UPrc = input.ReadFloat();
            break;
          }
          case 1616: {
            PkgAbsCn = input.ReadInt32();
            break;
          }
          case 1640: {
            PkgNetCn = input.ReadInt32();
            break;
          }
          case 1669: {
            PkgAbsDDe = input.ReadFloat();
            break;
          }
          case 1693: {
            PkgNetDDe = input.ReadFloat();
            break;
          }
          case 1717: {
            PkgAbsPr = input.ReadFloat();
            break;
          }
          case 1741: {
            PkgNetPr = input.ReadFloat();
            break;
          }
          case 1765: {
            PkgAbsVe = input.ReadFloat();
            break;
          }
          case 1789: {
            PkgNetVe = input.ReadFloat();
            break;
          }
          case 1813: {
            PkgAbsTVe = input.ReadFloat();
            break;
          }
          case 1837: {
            PkgNetTVe = input.ReadFloat();
            break;
          }
          case 1861: {
            PkgAbsWVe = input.ReadFloat();
            break;
          }
          case 1885: {
            PkgNetWVe = input.ReadFloat();
            break;
          }
          case 1909: {
            PkgAbsWTVe = input.ReadFloat();
            break;
          }
          case 1933: {
            PkgNetWTVe = input.ReadFloat();
            break;
          }
          case 1957: {
            PkgAbsTh = input.ReadFloat();
            break;
          }
          case 1981: {
            PkgNetTh = input.ReadFloat();
            break;
          }
          case 2005: {
            PkgAbsDTh = input.ReadFloat();
            break;
          }
          case 2029: {
            PkgAbsGa = input.ReadFloat();
            break;
          }
          case 2053: {
            PkgNetGa = input.ReadFloat();
            break;
          }
          case 2077: {
            PkgAbsDGa = input.ReadFloat();
            break;
          }
          case 2101: {
            PkgNetDGa = input.ReadFloat();
            break;
          }
          case 2125: {
            PkgNetUp15PnL = input.ReadFloat();
            break;
          }
          case 2149: {
            PkgNetDn15PnL = input.ReadFloat();
            break;
          }
          case 2173: {
            PkgNetUp50PnL = input.ReadFloat();
            break;
          }
          case 2197: {
            PkgNetDn50PnL = input.ReadFloat();
            break;
          }
          case 2216: {
            MarkupResult = (global::Spiderrock.Protobuf.MarkupResult) input.ReadEnum();
            break;
          }
          case 2242: {
            MarkupDetail = input.ReadString();
            break;
          }
          case 2266: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 2277: {
            PkgNetUUpVUp = input.ReadFloat();
            break;
          }
          case 2285: {
            PkgNetUUpVDn = input.ReadFloat();
            break;
          }
          case 2293: {
            PkgNetUDnVUp = input.ReadFloat();
            break;
          }
          case 2301: {
            PkgNetUDnVDn = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpdrAuctionMarkup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.SpdrAuctionMarkup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          secKey_ = other.secKey_ != null ? other.secKey_.Clone() : null;
          secType_ = other.secType_;
          auctionExch_ = other.auctionExch_;
          auctionExDest_ = other.auctionExDest_;
          runStatus_ = other.runStatus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "sec_key" field.</summary>
        public const int SecKeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.OptionKey secKey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey SecKey {
          get { return secKey_; }
          set {
            secKey_ = value;
          }
        }

        /// <summary>Field number for the "sec_type" field.</summary>
        public const int SecTypeFieldNumber = 11;
        private global::Spiderrock.Protobuf.SpdrKeyType secType_ = global::Spiderrock.Protobuf.SpdrKeyType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SpdrKeyType SecType {
          get { return secType_; }
          set {
            secType_ = value;
          }
        }

        /// <summary>Field number for the "auction_exch" field.</summary>
        public const int AuctionExchFieldNumber = 12;
        private global::Spiderrock.Protobuf.OptExch auctionExch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
        /// <summary>
        /// exchange handling the auction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptExch AuctionExch {
          get { return auctionExch_; }
          set {
            auctionExch_ = value;
          }
        }

        /// <summary>Field number for the "auction_ex_dest" field.</summary>
        public const int AuctionExDestFieldNumber = 13;
        private string auctionExDest_ = "";
        /// <summary>
        /// external exDest of auction (usually means auction is off-exchange)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AuctionExDest {
          get { return auctionExDest_; }
          set {
            auctionExDest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "run_status" field.</summary>
        public const int RunStatusFieldNumber = 14;
        private global::Spiderrock.Protobuf.RunStatus runStatus_ = global::Spiderrock.Protobuf.RunStatus.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.RunStatus RunStatus {
          get { return runStatus_; }
          set {
            runStatus_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SecKey, other.SecKey)) return false;
          if (SecType != other.SecType) return false;
          if (AuctionExch != other.AuctionExch) return false;
          if (AuctionExDest != other.AuctionExDest) return false;
          if (RunStatus != other.RunStatus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (secKey_ != null) hash ^= SecKey.GetHashCode();
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) hash ^= SecType.GetHashCode();
          if (AuctionExch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= AuctionExch.GetHashCode();
          if (AuctionExDest.Length != 0) hash ^= AuctionExDest.GetHashCode();
          if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) hash ^= RunStatus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (secKey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SecType);
          }
          if (AuctionExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) AuctionExch);
          }
          if (AuctionExDest.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(AuctionExDest);
          }
          if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) RunStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (secKey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SecType);
          }
          if (AuctionExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            output.WriteRawTag(96);
            output.WriteEnum((int) AuctionExch);
          }
          if (AuctionExDest.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(AuctionExDest);
          }
          if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
            output.WriteRawTag(112);
            output.WriteEnum((int) RunStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (secKey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecKey);
          }
          if (SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SecType);
          }
          if (AuctionExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuctionExch);
          }
          if (AuctionExDest.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AuctionExDest);
          }
          if (RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RunStatus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.secKey_ != null) {
            if (secKey_ == null) {
              SecKey = new global::Spiderrock.Protobuf.OptionKey();
            }
            SecKey.MergeFrom(other.SecKey);
          }
          if (other.SecType != global::Spiderrock.Protobuf.SpdrKeyType.Unspecified) {
            SecType = other.SecType;
          }
          if (other.AuctionExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
            AuctionExch = other.AuctionExch;
          }
          if (other.AuctionExDest.Length != 0) {
            AuctionExDest = other.AuctionExDest;
          }
          if (other.RunStatus != global::Spiderrock.Protobuf.RunStatus.Unspecified) {
            RunStatus = other.RunStatus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 88: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 96: {
                AuctionExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 106: {
                AuctionExDest = input.ReadString();
                break;
              }
              case 112: {
                RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (secKey_ == null) {
                  SecKey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(SecKey);
                break;
              }
              case 88: {
                SecType = (global::Spiderrock.Protobuf.SpdrKeyType) input.ReadEnum();
                break;
              }
              case 96: {
                AuctionExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
                break;
              }
              case 106: {
                AuctionExDest = input.ReadString();
                break;
              }
              case 112: {
                RunStatus = (global::Spiderrock.Protobuf.RunStatus) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
