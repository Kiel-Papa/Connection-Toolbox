syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

    
message NoticeExecReport {
    message PKey {
        
        int64 notice_number = 10; // AuctionNotice.noticeNumber
        string accnt = 11; // SR Accnt
        string client_firm = 12; // SR ClientFirm
    }

    message OrderLegs {
        
        OptionKey sec_key = 117;
        SpdrKeyType sec_type = 118;
        BuySell side = 119;
        int32 ratio = 120;
        LegPositionType position_type = 121;
        int32 leg_cum_fill_qty = 122;
        double leg_avg_fill_price = 123;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    string response_id = 100; // from NoticeResponse.responseId (most recently processed response to noticeNumber for this accnt/clientFirm pair)
    SpdrStageType stage_type = 101;
    BuySell resp_side = 102;
    int32 resp_size = 103;
    int32 resp_active_size = 104; // active response order size (zero for ActiveHold)
    double resp_price = 105;
    double ref_uPrc = 106;
    float ref_de = 107;
    float ref_ga = 108;
    int64 risk_group_id = 109; // any auction response is associated with this riskGroupID (and SpdrRiskGroupControl)
    string strategy = 110; // user strategy field (visible on SR tools)
    string user_data1 = 111; // user data field (free text) (from NoticeResponse)
    SpdrOrderStatus resp_status = 112;
    string resp_detail = 113;
    int32 pkg_cum_fill_qty = 114;
    double pkg_avg_fill_price = 115;
    google.protobuf.Timestamp timestamp = 124;
    repeated OrderLegs order_legs = 116;
}


