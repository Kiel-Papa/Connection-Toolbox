// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptAnalytics/LiveImpliedQuoteAdj.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptAnalytics/LiveImpliedQuoteAdj.proto</summary>
  public static partial class LiveImpliedQuoteAdjReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptAnalytics/LiveImpliedQuoteAdj.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LiveImpliedQuoteAdjReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9Qcm90b2J1Zi9PcHRBbmFseXRpY3MvTGl2ZUltcGxpZWRRdW90ZUFkai5w",
            "cm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24u",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ioAcKE0xp",
            "dmVJbXBsaWVkUXVvdGVBZGoSMwoFX21ldGEYASABKAsyJC5zcGlkZXJyb2Nr",
            "LnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI7CgRwa2V5GAIgASgLMi0uc3Bp",
            "ZGVycm9jay5wcm90b2J1Zi5MaXZlSW1wbGllZFF1b3RlQWRqLlBLZXkSLgoG",
            "dGlja2VyGGQgASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXkS",
            "DAoEdXByYxhnIAEoAhINCgV5ZWFycxhqIAEoAhIMCgRyYXRlGG0gASgCEgwK",
            "BHNkaXYYcCABKAISDAoEZGRpdhhzIAEoAhIMCgRvYmlkGHYgASgCEgwKBG9h",
            "c2sYeSABKAISDAoEb2Jpdhh8IAEoAhIMCgRvYWl2GH8gASgCEg0KBHNhdG0Y",
            "ggEgASgCEg0KBHNtbnkYhQEgASgCEg0KBHN2b2wYiAEgASgCEg0KBHNwcmMY",
            "iwEgASgCEg0KBHNtcmsYjgEgASgCEhEKCHZlX3Nsb3BlGJEBIAEoAhILCgJk",
            "ZRiUASABKAISCwoCZ2EYlwEgASgCEgsKAnRoGJoBIAEoAhILCgJ2ZRidASAB",
            "KAISCwoCdmEYoAEgASgCEgsKAnZvGKMBIAEoAhILCgJybximASABKAISCwoC",
            "cGgYqQEgASgCEhEKCGRlX2RlY2F5GKwBIAEoAhINCgR1cDUwGK8BIAEoAhIN",
            "CgRkbjUwGLIBIAEoAhINCgR1cDE1GLUBIAEoAhINCgRkbjE1GLgBIAEoAhIN",
            "CgR1cDA2GLsBIAEoAhINCgRkbjA4GL4BIAEoAhIRCghzeW5fc3BvdBjBASAB",
            "KAESNwoKcHJpY2VfdHlwZRjEASABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LkNhbGNQcmljZVR5cGUSEQoIY2FsY19lcnIYxwEgASgJEjUKC2NhbGNfc291",
            "cmNlGMoBIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuQ2FsY1NvdXJjZRI5",
            "ChB1X3ByY19hZGpfcmVzdWx0GM0BIAEoDjIeLnNwaWRlcnJvY2sucHJvdG9i",
            "dWYuQWRqUmVzdWx0Ei4KCXRpbWVzdGFtcBjQASABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wGjQKBFBLZXkSLAoEb2tleRgKIAEoCzIeLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuT3B0aW9uS2V5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveImpliedQuoteAdj), global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Parser, new[]{ "Meta", "Pkey", "Ticker", "Uprc", "Years", "Rate", "Sdiv", "Ddiv", "Obid", "Oask", "Obiv", "Oaiv", "Satm", "Smny", "Svol", "Sprc", "Smrk", "VeSlope", "De", "Ga", "Th", "Ve", "Va", "Vo", "Ro", "Ph", "DeDecay", "Up50", "Dn50", "Up15", "Dn15", "Up06", "Dn08", "SynSpot", "PriceType", "CalcErr", "CalcSource", "UPrcAdjResult", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey), global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey.Parser, new[]{ "Okey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LiveImpliedQuoteAdj : pb::IMessage<LiveImpliedQuoteAdj>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LiveImpliedQuoteAdj> _parser = new pb::MessageParser<LiveImpliedQuoteAdj>(() => new LiveImpliedQuoteAdj());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LiveImpliedQuoteAdj> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.LiveImpliedQuoteAdjReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteAdj() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteAdj(LiveImpliedQuoteAdj other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      uprc_ = other.uprc_;
      years_ = other.years_;
      rate_ = other.rate_;
      sdiv_ = other.sdiv_;
      ddiv_ = other.ddiv_;
      obid_ = other.obid_;
      oask_ = other.oask_;
      obiv_ = other.obiv_;
      oaiv_ = other.oaiv_;
      satm_ = other.satm_;
      smny_ = other.smny_;
      svol_ = other.svol_;
      sprc_ = other.sprc_;
      smrk_ = other.smrk_;
      veSlope_ = other.veSlope_;
      de_ = other.de_;
      ga_ = other.ga_;
      th_ = other.th_;
      ve_ = other.ve_;
      va_ = other.va_;
      vo_ = other.vo_;
      ro_ = other.ro_;
      ph_ = other.ph_;
      deDecay_ = other.deDecay_;
      up50_ = other.up50_;
      dn50_ = other.dn50_;
      up15_ = other.up15_;
      dn15_ = other.dn15_;
      up06_ = other.up06_;
      dn08_ = other.dn08_;
      synSpot_ = other.synSpot_;
      priceType_ = other.priceType_;
      calcErr_ = other.calcErr_;
      calcSource_ = other.calcSource_;
      uPrcAdjResult_ = other.uPrcAdjResult_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveImpliedQuoteAdj Clone() {
      return new LiveImpliedQuoteAdj(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "uprc" field.</summary>
    public const int UprcFieldNumber = 103;
    private float uprc_;
    /// <summary>
    /// underlier price (usually mid-market)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Uprc {
      get { return uprc_; }
      set {
        uprc_ = value;
      }
    }

    /// <summary>Field number for the "years" field.</summary>
    public const int YearsFieldNumber = 106;
    private float years_;
    /// <summary>
    /// years to expiration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Years {
      get { return years_; }
      set {
        years_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 109;
    private float rate_;
    /// <summary>
    /// interest rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "sdiv" field.</summary>
    public const int SdivFieldNumber = 112;
    private float sdiv_;
    /// <summary>
    /// sdiv (stock dividend) rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Sdiv {
      get { return sdiv_; }
      set {
        sdiv_ = value;
      }
    }

    /// <summary>Field number for the "ddiv" field.</summary>
    public const int DdivFieldNumber = 115;
    private float ddiv_;
    /// <summary>
    /// cumulative discrete dividend values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ddiv {
      get { return ddiv_; }
      set {
        ddiv_ = value;
      }
    }

    /// <summary>Field number for the "obid" field.</summary>
    public const int ObidFieldNumber = 118;
    private float obid_;
    /// <summary>
    /// option bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Obid {
      get { return obid_; }
      set {
        obid_ = value;
      }
    }

    /// <summary>Field number for the "oask" field.</summary>
    public const int OaskFieldNumber = 121;
    private float oask_;
    /// <summary>
    /// option ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Oask {
      get { return oask_; }
      set {
        oask_ = value;
      }
    }

    /// <summary>Field number for the "obiv" field.</summary>
    public const int ObivFieldNumber = 124;
    private float obiv_;
    /// <summary>
    /// volatility implied by option bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Obiv {
      get { return obiv_; }
      set {
        obiv_ = value;
      }
    }

    /// <summary>Field number for the "oaiv" field.</summary>
    public const int OaivFieldNumber = 127;
    private float oaiv_;
    /// <summary>
    /// volatility implied by option ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Oaiv {
      get { return oaiv_; }
      set {
        oaiv_ = value;
      }
    }

    /// <summary>Field number for the "satm" field.</summary>
    public const int SatmFieldNumber = 130;
    private float satm_;
    /// <summary>
    /// option atm volatility (from SR surface)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Satm {
      get { return satm_; }
      set {
        satm_ = value;
      }
    }

    /// <summary>Field number for the "smny" field.</summary>
    public const int SmnyFieldNumber = 133;
    private float smny_;
    /// <summary>
    /// option moneyness
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Smny {
      get { return smny_; }
      set {
        smny_ = value;
      }
    }

    /// <summary>Field number for the "svol" field.</summary>
    public const int SvolFieldNumber = 136;
    private float svol_;
    /// <summary>
    /// option surface volatility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Svol {
      get { return svol_; }
      set {
        svol_ = value;
      }
    }

    /// <summary>Field number for the "sprc" field.</summary>
    public const int SprcFieldNumber = 139;
    private float sprc_;
    /// <summary>
    /// option surface price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Sprc {
      get { return sprc_; }
      set {
        sprc_ = value;
      }
    }

    /// <summary>Field number for the "smrk" field.</summary>
    public const int SmrkFieldNumber = 142;
    private float smrk_;
    /// <summary>
    /// option surface price (w/bounding rules)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Smrk {
      get { return smrk_; }
      set {
        smrk_ = value;
      }
    }

    /// <summary>Field number for the "ve_slope" field.</summary>
    public const int VeSlopeFieldNumber = 145;
    private float veSlope_;
    /// <summary>
    /// veSlope = dVol / dUprc (assuming vol @ xAxis = 0 remains constant);hedgeDelta = (de + ve * 100 * veSlope) if hedging with this assumption
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VeSlope {
      get { return veSlope_; }
      set {
        veSlope_ = value;
      }
    }

    /// <summary>Field number for the "de" field.</summary>
    public const int DeFieldNumber = 148;
    private float de_;
    /// <summary>
    /// option delta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float De {
      get { return de_; }
      set {
        de_ = value;
      }
    }

    /// <summary>Field number for the "ga" field.</summary>
    public const int GaFieldNumber = 151;
    private float ga_;
    /// <summary>
    /// option gamma
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ga {
      get { return ga_; }
      set {
        ga_ = value;
      }
    }

    /// <summary>Field number for the "th" field.</summary>
    public const int ThFieldNumber = 154;
    private float th_;
    /// <summary>
    /// option theta
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Th {
      get { return th_; }
      set {
        th_ = value;
      }
    }

    /// <summary>Field number for the "ve" field.</summary>
    public const int VeFieldNumber = 157;
    private float ve_;
    /// <summary>
    /// option vega
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ve {
      get { return ve_; }
      set {
        ve_ = value;
      }
    }

    /// <summary>Field number for the "va" field.</summary>
    public const int VaFieldNumber = 160;
    private float va_;
    /// <summary>
    /// option vanna
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Va {
      get { return va_; }
      set {
        va_ = value;
      }
    }

    /// <summary>Field number for the "vo" field.</summary>
    public const int VoFieldNumber = 163;
    private float vo_;
    /// <summary>
    /// option volga
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Vo {
      get { return vo_; }
      set {
        vo_ = value;
      }
    }

    /// <summary>Field number for the "ro" field.</summary>
    public const int RoFieldNumber = 166;
    private float ro_;
    /// <summary>
    /// option rho
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ro {
      get { return ro_; }
      set {
        ro_ = value;
      }
    }

    /// <summary>Field number for the "ph" field.</summary>
    public const int PhFieldNumber = 169;
    private float ph_;
    /// <summary>
    /// option phi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ph {
      get { return ph_; }
      set {
        ph_ = value;
      }
    }

    /// <summary>Field number for the "de_decay" field.</summary>
    public const int DeDecayFieldNumber = 172;
    private float deDecay_;
    /// <summary>
    /// option delta decay
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DeDecay {
      get { return deDecay_; }
      set {
        deDecay_ = value;
      }
    }

    /// <summary>Field number for the "up50" field.</summary>
    public const int Up50FieldNumber = 175;
    private float up50_;
    /// <summary>
    /// underlier up 50% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Up50 {
      get { return up50_; }
      set {
        up50_ = value;
      }
    }

    /// <summary>Field number for the "dn50" field.</summary>
    public const int Dn50FieldNumber = 178;
    private float dn50_;
    /// <summary>
    /// underlier dn 50% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Dn50 {
      get { return dn50_; }
      set {
        dn50_ = value;
      }
    }

    /// <summary>Field number for the "up15" field.</summary>
    public const int Up15FieldNumber = 181;
    private float up15_;
    /// <summary>
    /// underlier up 15% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Up15 {
      get { return up15_; }
      set {
        up15_ = value;
      }
    }

    /// <summary>Field number for the "dn15" field.</summary>
    public const int Dn15FieldNumber = 184;
    private float dn15_;
    /// <summary>
    /// underlier dn 15% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Dn15 {
      get { return dn15_; }
      set {
        dn15_ = value;
      }
    }

    /// <summary>Field number for the "up06" field.</summary>
    public const int Up06FieldNumber = 187;
    private float up06_;
    /// <summary>
    /// underlier up 6% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Up06 {
      get { return up06_; }
      set {
        up06_ = value;
      }
    }

    /// <summary>Field number for the "dn08" field.</summary>
    public const int Dn08FieldNumber = 190;
    private float dn08_;
    /// <summary>
    /// underlier dn 8% slide
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Dn08 {
      get { return dn08_; }
      set {
        dn08_ = value;
      }
    }

    /// <summary>Field number for the "syn_spot" field.</summary>
    public const int SynSpotFieldNumber = 193;
    private double synSpot_;
    /// <summary>
    /// Synthetic spot price (market-derived spot when the underlying is not a traded instrument)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SynSpot {
      get { return synSpot_; }
      set {
        synSpot_ = value;
      }
    }

    /// <summary>Field number for the "price_type" field.</summary>
    public const int PriceTypeFieldNumber = 196;
    private global::Spiderrock.Protobuf.CalcPriceType priceType_ = global::Spiderrock.Protobuf.CalcPriceType.Unspecified;
    /// <summary>
    /// Equity or Future (Black76) pricing framework;  if Future then uPrc is the forwardUPrc and sdiv = rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CalcPriceType PriceType {
      get { return priceType_; }
      set {
        priceType_ = value;
      }
    }

    /// <summary>Field number for the "calc_err" field.</summary>
    public const int CalcErrFieldNumber = 199;
    private string calcErr_ = "";
    /// <summary>
    /// option pricing error (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CalcErr {
      get { return calcErr_; }
      set {
        calcErr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "calc_source" field.</summary>
    public const int CalcSourceFieldNumber = 202;
    private global::Spiderrock.Protobuf.CalcSource calcSource_ = global::Spiderrock.Protobuf.CalcSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CalcSource CalcSource {
      get { return calcSource_; }
      set {
        calcSource_ = value;
      }
    }

    /// <summary>Field number for the "u_prc_adj_result" field.</summary>
    public const int UPrcAdjResultFieldNumber = 205;
    private global::Spiderrock.Protobuf.AdjResult uPrcAdjResult_ = global::Spiderrock.Protobuf.AdjResult.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.AdjResult UPrcAdjResult {
      get { return uPrcAdjResult_; }
      set {
        uPrcAdjResult_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 208;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LiveImpliedQuoteAdj);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LiveImpliedQuoteAdj other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Uprc, other.Uprc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Years, other.Years)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate, other.Rate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sdiv, other.Sdiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ddiv, other.Ddiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Obid, other.Obid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Oask, other.Oask)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Obiv, other.Obiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Oaiv, other.Oaiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Satm, other.Satm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Smny, other.Smny)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Svol, other.Svol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sprc, other.Sprc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Smrk, other.Smrk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VeSlope, other.VeSlope)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(De, other.De)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ga, other.Ga)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Th, other.Th)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ve, other.Ve)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Va, other.Va)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Vo, other.Vo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ro, other.Ro)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ph, other.Ph)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DeDecay, other.DeDecay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Up50, other.Up50)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dn50, other.Dn50)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Up15, other.Up15)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dn15, other.Dn15)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Up06, other.Up06)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dn08, other.Dn08)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SynSpot, other.SynSpot)) return false;
      if (PriceType != other.PriceType) return false;
      if (CalcErr != other.CalcErr) return false;
      if (CalcSource != other.CalcSource) return false;
      if (UPrcAdjResult != other.UPrcAdjResult) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (Uprc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Uprc);
      if (Years != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Years);
      if (Rate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate);
      if (Sdiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sdiv);
      if (Ddiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ddiv);
      if (Obid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Obid);
      if (Oask != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Oask);
      if (Obiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Obiv);
      if (Oaiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Oaiv);
      if (Satm != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Satm);
      if (Smny != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Smny);
      if (Svol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Svol);
      if (Sprc != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sprc);
      if (Smrk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Smrk);
      if (VeSlope != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VeSlope);
      if (De != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(De);
      if (Ga != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ga);
      if (Th != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Th);
      if (Ve != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ve);
      if (Va != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Va);
      if (Vo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Vo);
      if (Ro != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ro);
      if (Ph != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ph);
      if (DeDecay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DeDecay);
      if (Up50 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Up50);
      if (Dn50 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dn50);
      if (Up15 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Up15);
      if (Dn15 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dn15);
      if (Up06 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Up06);
      if (Dn08 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dn08);
      if (SynSpot != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SynSpot);
      if (PriceType != global::Spiderrock.Protobuf.CalcPriceType.Unspecified) hash ^= PriceType.GetHashCode();
      if (CalcErr.Length != 0) hash ^= CalcErr.GetHashCode();
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) hash ^= CalcSource.GetHashCode();
      if (UPrcAdjResult != global::Spiderrock.Protobuf.AdjResult.Unspecified) hash ^= UPrcAdjResult.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (Uprc != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(Uprc);
      }
      if (Years != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(Years);
      }
      if (Rate != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(Rate);
      }
      if (Sdiv != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(Sdiv);
      }
      if (Ddiv != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(Ddiv);
      }
      if (Obid != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Obid);
      }
      if (Oask != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Oask);
      }
      if (Obiv != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(Obiv);
      }
      if (Oaiv != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(Oaiv);
      }
      if (Satm != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(Satm);
      }
      if (Smny != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(Smny);
      }
      if (Svol != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(Svol);
      }
      if (Sprc != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(Sprc);
      }
      if (Smrk != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Smrk);
      }
      if (VeSlope != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(VeSlope);
      }
      if (De != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(De);
      }
      if (Ga != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Ga);
      }
      if (Th != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(Th);
      }
      if (Ve != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(Ve);
      }
      if (Va != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(Va);
      }
      if (Vo != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(Vo);
      }
      if (Ro != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(Ro);
      }
      if (Ph != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(Ph);
      }
      if (DeDecay != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(DeDecay);
      }
      if (Up50 != 0F) {
        output.WriteRawTag(253, 10);
        output.WriteFloat(Up50);
      }
      if (Dn50 != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(Dn50);
      }
      if (Up15 != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(Up15);
      }
      if (Dn15 != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(Dn15);
      }
      if (Up06 != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(Up06);
      }
      if (Dn08 != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(Dn08);
      }
      if (SynSpot != 0D) {
        output.WriteRawTag(137, 12);
        output.WriteDouble(SynSpot);
      }
      if (PriceType != global::Spiderrock.Protobuf.CalcPriceType.Unspecified) {
        output.WriteRawTag(160, 12);
        output.WriteEnum((int) PriceType);
      }
      if (CalcErr.Length != 0) {
        output.WriteRawTag(186, 12);
        output.WriteString(CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        output.WriteRawTag(208, 12);
        output.WriteEnum((int) CalcSource);
      }
      if (UPrcAdjResult != global::Spiderrock.Protobuf.AdjResult.Unspecified) {
        output.WriteRawTag(232, 12);
        output.WriteEnum((int) UPrcAdjResult);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (Uprc != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(Uprc);
      }
      if (Years != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(Years);
      }
      if (Rate != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(Rate);
      }
      if (Sdiv != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(Sdiv);
      }
      if (Ddiv != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(Ddiv);
      }
      if (Obid != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Obid);
      }
      if (Oask != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Oask);
      }
      if (Obiv != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(Obiv);
      }
      if (Oaiv != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(Oaiv);
      }
      if (Satm != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(Satm);
      }
      if (Smny != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(Smny);
      }
      if (Svol != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(Svol);
      }
      if (Sprc != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(Sprc);
      }
      if (Smrk != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Smrk);
      }
      if (VeSlope != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(VeSlope);
      }
      if (De != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(De);
      }
      if (Ga != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Ga);
      }
      if (Th != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(Th);
      }
      if (Ve != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(Ve);
      }
      if (Va != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(Va);
      }
      if (Vo != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(Vo);
      }
      if (Ro != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(Ro);
      }
      if (Ph != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(Ph);
      }
      if (DeDecay != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(DeDecay);
      }
      if (Up50 != 0F) {
        output.WriteRawTag(253, 10);
        output.WriteFloat(Up50);
      }
      if (Dn50 != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(Dn50);
      }
      if (Up15 != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(Up15);
      }
      if (Dn15 != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(Dn15);
      }
      if (Up06 != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(Up06);
      }
      if (Dn08 != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(Dn08);
      }
      if (SynSpot != 0D) {
        output.WriteRawTag(137, 12);
        output.WriteDouble(SynSpot);
      }
      if (PriceType != global::Spiderrock.Protobuf.CalcPriceType.Unspecified) {
        output.WriteRawTag(160, 12);
        output.WriteEnum((int) PriceType);
      }
      if (CalcErr.Length != 0) {
        output.WriteRawTag(186, 12);
        output.WriteString(CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        output.WriteRawTag(208, 12);
        output.WriteEnum((int) CalcSource);
      }
      if (UPrcAdjResult != global::Spiderrock.Protobuf.AdjResult.Unspecified) {
        output.WriteRawTag(232, 12);
        output.WriteEnum((int) UPrcAdjResult);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (Uprc != 0F) {
        size += 2 + 4;
      }
      if (Years != 0F) {
        size += 2 + 4;
      }
      if (Rate != 0F) {
        size += 2 + 4;
      }
      if (Sdiv != 0F) {
        size += 2 + 4;
      }
      if (Ddiv != 0F) {
        size += 2 + 4;
      }
      if (Obid != 0F) {
        size += 2 + 4;
      }
      if (Oask != 0F) {
        size += 2 + 4;
      }
      if (Obiv != 0F) {
        size += 2 + 4;
      }
      if (Oaiv != 0F) {
        size += 2 + 4;
      }
      if (Satm != 0F) {
        size += 2 + 4;
      }
      if (Smny != 0F) {
        size += 2 + 4;
      }
      if (Svol != 0F) {
        size += 2 + 4;
      }
      if (Sprc != 0F) {
        size += 2 + 4;
      }
      if (Smrk != 0F) {
        size += 2 + 4;
      }
      if (VeSlope != 0F) {
        size += 2 + 4;
      }
      if (De != 0F) {
        size += 2 + 4;
      }
      if (Ga != 0F) {
        size += 2 + 4;
      }
      if (Th != 0F) {
        size += 2 + 4;
      }
      if (Ve != 0F) {
        size += 2 + 4;
      }
      if (Va != 0F) {
        size += 2 + 4;
      }
      if (Vo != 0F) {
        size += 2 + 4;
      }
      if (Ro != 0F) {
        size += 2 + 4;
      }
      if (Ph != 0F) {
        size += 2 + 4;
      }
      if (DeDecay != 0F) {
        size += 2 + 4;
      }
      if (Up50 != 0F) {
        size += 2 + 4;
      }
      if (Dn50 != 0F) {
        size += 2 + 4;
      }
      if (Up15 != 0F) {
        size += 2 + 4;
      }
      if (Dn15 != 0F) {
        size += 2 + 4;
      }
      if (Up06 != 0F) {
        size += 2 + 4;
      }
      if (Dn08 != 0F) {
        size += 2 + 4;
      }
      if (SynSpot != 0D) {
        size += 2 + 8;
      }
      if (PriceType != global::Spiderrock.Protobuf.CalcPriceType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceType);
      }
      if (CalcErr.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CalcErr);
      }
      if (CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CalcSource);
      }
      if (UPrcAdjResult != global::Spiderrock.Protobuf.AdjResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UPrcAdjResult);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LiveImpliedQuoteAdj other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.Uprc != 0F) {
        Uprc = other.Uprc;
      }
      if (other.Years != 0F) {
        Years = other.Years;
      }
      if (other.Rate != 0F) {
        Rate = other.Rate;
      }
      if (other.Sdiv != 0F) {
        Sdiv = other.Sdiv;
      }
      if (other.Ddiv != 0F) {
        Ddiv = other.Ddiv;
      }
      if (other.Obid != 0F) {
        Obid = other.Obid;
      }
      if (other.Oask != 0F) {
        Oask = other.Oask;
      }
      if (other.Obiv != 0F) {
        Obiv = other.Obiv;
      }
      if (other.Oaiv != 0F) {
        Oaiv = other.Oaiv;
      }
      if (other.Satm != 0F) {
        Satm = other.Satm;
      }
      if (other.Smny != 0F) {
        Smny = other.Smny;
      }
      if (other.Svol != 0F) {
        Svol = other.Svol;
      }
      if (other.Sprc != 0F) {
        Sprc = other.Sprc;
      }
      if (other.Smrk != 0F) {
        Smrk = other.Smrk;
      }
      if (other.VeSlope != 0F) {
        VeSlope = other.VeSlope;
      }
      if (other.De != 0F) {
        De = other.De;
      }
      if (other.Ga != 0F) {
        Ga = other.Ga;
      }
      if (other.Th != 0F) {
        Th = other.Th;
      }
      if (other.Ve != 0F) {
        Ve = other.Ve;
      }
      if (other.Va != 0F) {
        Va = other.Va;
      }
      if (other.Vo != 0F) {
        Vo = other.Vo;
      }
      if (other.Ro != 0F) {
        Ro = other.Ro;
      }
      if (other.Ph != 0F) {
        Ph = other.Ph;
      }
      if (other.DeDecay != 0F) {
        DeDecay = other.DeDecay;
      }
      if (other.Up50 != 0F) {
        Up50 = other.Up50;
      }
      if (other.Dn50 != 0F) {
        Dn50 = other.Dn50;
      }
      if (other.Up15 != 0F) {
        Up15 = other.Up15;
      }
      if (other.Dn15 != 0F) {
        Dn15 = other.Dn15;
      }
      if (other.Up06 != 0F) {
        Up06 = other.Up06;
      }
      if (other.Dn08 != 0F) {
        Dn08 = other.Dn08;
      }
      if (other.SynSpot != 0D) {
        SynSpot = other.SynSpot;
      }
      if (other.PriceType != global::Spiderrock.Protobuf.CalcPriceType.Unspecified) {
        PriceType = other.PriceType;
      }
      if (other.CalcErr.Length != 0) {
        CalcErr = other.CalcErr;
      }
      if (other.CalcSource != global::Spiderrock.Protobuf.CalcSource.Unspecified) {
        CalcSource = other.CalcSource;
      }
      if (other.UPrcAdjResult != global::Spiderrock.Protobuf.AdjResult.Unspecified) {
        UPrcAdjResult = other.UPrcAdjResult;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 829: {
            Uprc = input.ReadFloat();
            break;
          }
          case 853: {
            Years = input.ReadFloat();
            break;
          }
          case 877: {
            Rate = input.ReadFloat();
            break;
          }
          case 901: {
            Sdiv = input.ReadFloat();
            break;
          }
          case 925: {
            Ddiv = input.ReadFloat();
            break;
          }
          case 949: {
            Obid = input.ReadFloat();
            break;
          }
          case 973: {
            Oask = input.ReadFloat();
            break;
          }
          case 997: {
            Obiv = input.ReadFloat();
            break;
          }
          case 1021: {
            Oaiv = input.ReadFloat();
            break;
          }
          case 1045: {
            Satm = input.ReadFloat();
            break;
          }
          case 1069: {
            Smny = input.ReadFloat();
            break;
          }
          case 1093: {
            Svol = input.ReadFloat();
            break;
          }
          case 1117: {
            Sprc = input.ReadFloat();
            break;
          }
          case 1141: {
            Smrk = input.ReadFloat();
            break;
          }
          case 1165: {
            VeSlope = input.ReadFloat();
            break;
          }
          case 1189: {
            De = input.ReadFloat();
            break;
          }
          case 1213: {
            Ga = input.ReadFloat();
            break;
          }
          case 1237: {
            Th = input.ReadFloat();
            break;
          }
          case 1261: {
            Ve = input.ReadFloat();
            break;
          }
          case 1285: {
            Va = input.ReadFloat();
            break;
          }
          case 1309: {
            Vo = input.ReadFloat();
            break;
          }
          case 1333: {
            Ro = input.ReadFloat();
            break;
          }
          case 1357: {
            Ph = input.ReadFloat();
            break;
          }
          case 1381: {
            DeDecay = input.ReadFloat();
            break;
          }
          case 1405: {
            Up50 = input.ReadFloat();
            break;
          }
          case 1429: {
            Dn50 = input.ReadFloat();
            break;
          }
          case 1453: {
            Up15 = input.ReadFloat();
            break;
          }
          case 1477: {
            Dn15 = input.ReadFloat();
            break;
          }
          case 1501: {
            Up06 = input.ReadFloat();
            break;
          }
          case 1525: {
            Dn08 = input.ReadFloat();
            break;
          }
          case 1545: {
            SynSpot = input.ReadDouble();
            break;
          }
          case 1568: {
            PriceType = (global::Spiderrock.Protobuf.CalcPriceType) input.ReadEnum();
            break;
          }
          case 1594: {
            CalcErr = input.ReadString();
            break;
          }
          case 1616: {
            CalcSource = (global::Spiderrock.Protobuf.CalcSource) input.ReadEnum();
            break;
          }
          case 1640: {
            UPrcAdjResult = (global::Spiderrock.Protobuf.AdjResult) input.ReadEnum();
            break;
          }
          case 1666: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 829: {
            Uprc = input.ReadFloat();
            break;
          }
          case 853: {
            Years = input.ReadFloat();
            break;
          }
          case 877: {
            Rate = input.ReadFloat();
            break;
          }
          case 901: {
            Sdiv = input.ReadFloat();
            break;
          }
          case 925: {
            Ddiv = input.ReadFloat();
            break;
          }
          case 949: {
            Obid = input.ReadFloat();
            break;
          }
          case 973: {
            Oask = input.ReadFloat();
            break;
          }
          case 997: {
            Obiv = input.ReadFloat();
            break;
          }
          case 1021: {
            Oaiv = input.ReadFloat();
            break;
          }
          case 1045: {
            Satm = input.ReadFloat();
            break;
          }
          case 1069: {
            Smny = input.ReadFloat();
            break;
          }
          case 1093: {
            Svol = input.ReadFloat();
            break;
          }
          case 1117: {
            Sprc = input.ReadFloat();
            break;
          }
          case 1141: {
            Smrk = input.ReadFloat();
            break;
          }
          case 1165: {
            VeSlope = input.ReadFloat();
            break;
          }
          case 1189: {
            De = input.ReadFloat();
            break;
          }
          case 1213: {
            Ga = input.ReadFloat();
            break;
          }
          case 1237: {
            Th = input.ReadFloat();
            break;
          }
          case 1261: {
            Ve = input.ReadFloat();
            break;
          }
          case 1285: {
            Va = input.ReadFloat();
            break;
          }
          case 1309: {
            Vo = input.ReadFloat();
            break;
          }
          case 1333: {
            Ro = input.ReadFloat();
            break;
          }
          case 1357: {
            Ph = input.ReadFloat();
            break;
          }
          case 1381: {
            DeDecay = input.ReadFloat();
            break;
          }
          case 1405: {
            Up50 = input.ReadFloat();
            break;
          }
          case 1429: {
            Dn50 = input.ReadFloat();
            break;
          }
          case 1453: {
            Up15 = input.ReadFloat();
            break;
          }
          case 1477: {
            Dn15 = input.ReadFloat();
            break;
          }
          case 1501: {
            Up06 = input.ReadFloat();
            break;
          }
          case 1525: {
            Dn08 = input.ReadFloat();
            break;
          }
          case 1545: {
            SynSpot = input.ReadDouble();
            break;
          }
          case 1568: {
            PriceType = (global::Spiderrock.Protobuf.CalcPriceType) input.ReadEnum();
            break;
          }
          case 1594: {
            CalcErr = input.ReadString();
            break;
          }
          case 1616: {
            CalcSource = (global::Spiderrock.Protobuf.CalcSource) input.ReadEnum();
            break;
          }
          case 1640: {
            UPrcAdjResult = (global::Spiderrock.Protobuf.AdjResult) input.ReadEnum();
            break;
          }
          case 1666: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LiveImpliedQuoteAdj message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.LiveImpliedQuoteAdj.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          okey_ = other.okey_ != null ? other.okey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "okey" field.</summary>
        public const int OkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.OptionKey okey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey Okey {
          get { return okey_; }
          set {
            okey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Okey, other.Okey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (okey_ != null) hash ^= Okey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (okey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Okey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.okey_ != null) {
            if (okey_ == null) {
              Okey = new global::Spiderrock.Protobuf.OptionKey();
            }
            Okey.MergeFrom(other.Okey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
