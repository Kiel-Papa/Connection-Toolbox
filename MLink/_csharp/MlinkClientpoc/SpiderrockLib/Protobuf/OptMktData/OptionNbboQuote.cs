// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptMktData/OptionNbboQuote.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptMktData/OptionNbboQuote.proto</summary>
  public static partial class OptionNbboQuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptMktData/OptionNbboQuote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionNbboQuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQcm90b2J1Zi9PcHRNa3REYXRhL09wdGlvbk5iYm9RdW90ZS5wcm90bxIT",
            "c3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJvdG8i",
            "hgYKD09wdGlvbk5iYm9RdW90ZRIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuTWVzc2FnZU1ldGFkYXRhEjcKBHBrZXkYAiABKAsyKS5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLk9wdGlvbk5iYm9RdW90ZS5QS2V5EjQKC3Vw",
            "ZGF0ZV90eXBlGGQgASgOMh8uc3BpZGVycm9jay5wcm90b2J1Zi5VcGRhdGVU",
            "eXBlEhEKCWJpZF9wcmljZRhnIAEoAhIRCglhc2tfcHJpY2UYaiABKAISEAoI",
            "YmlkX3NpemUYbSABKAUSEAoIYXNrX3NpemUYcCABKAUSFAoMY3VtX2JpZF9z",
            "aXplGHMgASgFEhQKDGN1bV9hc2tfc2l6ZRh2IAEoBRIuCghiaWRfZXhjaBh5",
            "IAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0RXhjaBIuCghhc2tfZXhj",
            "aBh8IAEoDjIcLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0RXhjaBIQCghiaWRf",
            "bWFzaxh/IAEoDRIRCghhc2tfbWFzaxiCASABKA0SNgoMYmlkX21rdF90eXBl",
            "GIUBIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0TWt0VHlwZRI2Cgxh",
            "c2tfbWt0X3R5cGUYiAEgASgOMh8uc3BpZGVycm9jay5wcm90b2J1Zi5PcHRN",
            "a3RUeXBlEhMKCmJpZF9wcmljZTIYiwEgASgCEhMKCmFza19wcmljZTIYjgEg",
            "ASgCEhYKDWN1bV9iaWRfc2l6ZTIYkQEgASgFEhYKDWN1bV9hc2tfc2l6ZTIY",
            "lAEgASgFEhEKCGJpZF90aW1lGJcBIAEoBRIRCghhc2tfdGltZRiaASABKAUS",
            "FgoNc3JjX3RpbWVzdGFtcBidASABKAMSFgoNbmV0X3RpbWVzdGFtcBigASAB",
            "KAMaNAoEUEtleRIsCgRva2V5GAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1",
            "Zi5PcHRpb25LZXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionNbboQuote), global::Spiderrock.Protobuf.OptionNbboQuote.Parser, new[]{ "Meta", "Pkey", "UpdateType", "BidPrice", "AskPrice", "BidSize", "AskSize", "CumBidSize", "CumAskSize", "BidExch", "AskExch", "BidMask", "AskMask", "BidMktType", "AskMktType", "BidPrice2", "AskPrice2", "CumBidSize2", "CumAskSize2", "BidTime", "AskTime", "SrcTimestamp", "NetTimestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey), global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey.Parser, new[]{ "Okey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///This table contains live option quote records from OPRA (equities) or the listing exchange (futures).  Each record contains up to two price levels and represents a live snapshot of the book for a specific option series.  There are typically 1mm+ records in this table if all ticker sources are enabled.
  /// </summary>
  public sealed partial class OptionNbboQuote : pb::IMessage<OptionNbboQuote>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionNbboQuote> _parser = new pb::MessageParser<OptionNbboQuote>(() => new OptionNbboQuote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionNbboQuote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.OptionNbboQuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionNbboQuote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionNbboQuote(OptionNbboQuote other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      updateType_ = other.updateType_;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      cumBidSize_ = other.cumBidSize_;
      cumAskSize_ = other.cumAskSize_;
      bidExch_ = other.bidExch_;
      askExch_ = other.askExch_;
      bidMask_ = other.bidMask_;
      askMask_ = other.askMask_;
      bidMktType_ = other.bidMktType_;
      askMktType_ = other.askMktType_;
      bidPrice2_ = other.bidPrice2_;
      askPrice2_ = other.askPrice2_;
      cumBidSize2_ = other.cumBidSize2_;
      cumAskSize2_ = other.cumAskSize2_;
      bidTime_ = other.bidTime_;
      askTime_ = other.askTime_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionNbboQuote Clone() {
      return new OptionNbboQuote(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "update_type" field.</summary>
    public const int UpdateTypeFieldNumber = 100;
    private global::Spiderrock.Protobuf.UpdateType updateType_ = global::Spiderrock.Protobuf.UpdateType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.UpdateType UpdateType {
      get { return updateType_; }
      set {
        updateType_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 103;
    private float bidPrice_;
    /// <summary>
    /// bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 106;
    private float askPrice_;
    /// <summary>
    /// ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 109;
    private int bidSize_;
    /// <summary>
    /// bid size in contracts (largest exch quote)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 112;
    private int askSize_;
    /// <summary>
    /// ask size in contracts (largest exch quote)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_size" field.</summary>
    public const int CumBidSizeFieldNumber = 115;
    private int cumBidSize_;
    /// <summary>
    /// bid size in contracts (total nbbo size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidSize {
      get { return cumBidSize_; }
      set {
        cumBidSize_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_size" field.</summary>
    public const int CumAskSizeFieldNumber = 118;
    private int cumAskSize_;
    /// <summary>
    /// ask size in contracts (total nbbo size)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskSize {
      get { return cumAskSize_; }
      set {
        cumAskSize_ = value;
      }
    }

    /// <summary>Field number for the "bid_exch" field.</summary>
    public const int BidExchFieldNumber = 121;
    private global::Spiderrock.Protobuf.OptExch bidExch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    /// <summary>
    /// first (or largest remaining) exchange at bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch BidExch {
      get { return bidExch_; }
      set {
        bidExch_ = value;
      }
    }

    /// <summary>Field number for the "ask_exch" field.</summary>
    public const int AskExchFieldNumber = 124;
    private global::Spiderrock.Protobuf.OptExch askExch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    /// <summary>
    /// first (or largest remaining) exchange at ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch AskExch {
      get { return askExch_; }
      set {
        askExch_ = value;
      }
    }

    /// <summary>Field number for the "bid_mask" field.</summary>
    public const int BidMaskFieldNumber = 127;
    private uint bidMask_;
    /// <summary>
    /// exchange bid bit mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BidMask {
      get { return bidMask_; }
      set {
        bidMask_ = value;
      }
    }

    /// <summary>Field number for the "ask_mask" field.</summary>
    public const int AskMaskFieldNumber = 130;
    private uint askMask_;
    /// <summary>
    /// exchange ask bit mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AskMask {
      get { return askMask_; }
      set {
        askMask_ = value;
      }
    }

    /// <summary>Field number for the "bid_mkt_type" field.</summary>
    public const int BidMktTypeFieldNumber = 133;
    private global::Spiderrock.Protobuf.OptMktType bidMktType_ = global::Spiderrock.Protobuf.OptMktType.Unspecified;
    /// <summary>
    /// bid side quote flags (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptMktType BidMktType {
      get { return bidMktType_; }
      set {
        bidMktType_ = value;
      }
    }

    /// <summary>Field number for the "ask_mkt_type" field.</summary>
    public const int AskMktTypeFieldNumber = 136;
    private global::Spiderrock.Protobuf.OptMktType askMktType_ = global::Spiderrock.Protobuf.OptMktType.Unspecified;
    /// <summary>
    /// ask side quote flags (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptMktType AskMktType {
      get { return askMktType_; }
      set {
        askMktType_ = value;
      }
    }

    /// <summary>Field number for the "bid_price2" field.</summary>
    public const int BidPrice2FieldNumber = 139;
    private float bidPrice2_;
    /// <summary>
    /// 2nd best bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidPrice2 {
      get { return bidPrice2_; }
      set {
        bidPrice2_ = value;
      }
    }

    /// <summary>Field number for the "ask_price2" field.</summary>
    public const int AskPrice2FieldNumber = 142;
    private float askPrice2_;
    /// <summary>
    /// 2nd best ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskPrice2 {
      get { return askPrice2_; }
      set {
        askPrice2_ = value;
      }
    }

    /// <summary>Field number for the "cum_bid_size2" field.</summary>
    public const int CumBidSize2FieldNumber = 145;
    private int cumBidSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumBidSize2 {
      get { return cumBidSize2_; }
      set {
        cumBidSize2_ = value;
      }
    }

    /// <summary>Field number for the "cum_ask_size2" field.</summary>
    public const int CumAskSize2FieldNumber = 148;
    private int cumAskSize2_;
    /// <summary>
    /// cumulative size at 2nd price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CumAskSize2 {
      get { return cumAskSize2_; }
      set {
        cumAskSize2_ = value;
      }
    }

    /// <summary>Field number for the "bid_time" field.</summary>
    public const int BidTimeFieldNumber = 151;
    private int bidTime_;
    /// <summary>
    /// last bid price change (milliseconds since midnight) calculated from the srcTimestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidTime {
      get { return bidTime_; }
      set {
        bidTime_ = value;
      }
    }

    /// <summary>Field number for the "ask_time" field.</summary>
    public const int AskTimeFieldNumber = 154;
    private int askTime_;
    /// <summary>
    /// last ask price change (milliseconds since midnight) calculated from the srcTimestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskTime {
      get { return askTime_; }
      set {
        askTime_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 157;
    private long srcTimestamp_;
    /// <summary>
    /// source high precision timestamp (if available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 160;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionNbboQuote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionNbboQuote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (UpdateType != other.UpdateType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (CumBidSize != other.CumBidSize) return false;
      if (CumAskSize != other.CumAskSize) return false;
      if (BidExch != other.BidExch) return false;
      if (AskExch != other.AskExch) return false;
      if (BidMask != other.BidMask) return false;
      if (AskMask != other.AskMask) return false;
      if (BidMktType != other.BidMktType) return false;
      if (AskMktType != other.AskMktType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidPrice2, other.BidPrice2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskPrice2, other.AskPrice2)) return false;
      if (CumBidSize2 != other.CumBidSize2) return false;
      if (CumAskSize2 != other.CumAskSize2) return false;
      if (BidTime != other.BidTime) return false;
      if (AskTime != other.AskTime) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) hash ^= UpdateType.GetHashCode();
      if (BidPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (CumBidSize != 0) hash ^= CumBidSize.GetHashCode();
      if (CumAskSize != 0) hash ^= CumAskSize.GetHashCode();
      if (BidExch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= BidExch.GetHashCode();
      if (AskExch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= AskExch.GetHashCode();
      if (BidMask != 0) hash ^= BidMask.GetHashCode();
      if (AskMask != 0) hash ^= AskMask.GetHashCode();
      if (BidMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) hash ^= BidMktType.GetHashCode();
      if (AskMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) hash ^= AskMktType.GetHashCode();
      if (BidPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidPrice2);
      if (AskPrice2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskPrice2);
      if (CumBidSize2 != 0) hash ^= CumBidSize2.GetHashCode();
      if (CumAskSize2 != 0) hash ^= CumAskSize2.GetHashCode();
      if (BidTime != 0) hash ^= BidTime.GetHashCode();
      if (AskTime != 0) hash ^= AskTime.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) UpdateType);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(AskSize);
      }
      if (CumBidSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(CumBidSize);
      }
      if (CumAskSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(CumAskSize);
      }
      if (BidExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) BidExch);
      }
      if (AskExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) AskExch);
      }
      if (BidMask != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(BidMask);
      }
      if (AskMask != 0) {
        output.WriteRawTag(144, 8);
        output.WriteUInt32(AskMask);
      }
      if (BidMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) BidMktType);
      }
      if (AskMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) AskMktType);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AskPrice2);
      }
      if (CumBidSize2 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(CumAskSize2);
      }
      if (BidTime != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(BidTime);
      }
      if (AskTime != 0) {
        output.WriteRawTag(208, 9);
        output.WriteInt32(AskTime);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) UpdateType);
      }
      if (BidPrice != 0F) {
        output.WriteRawTag(189, 6);
        output.WriteFloat(BidPrice);
      }
      if (AskPrice != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(AskSize);
      }
      if (CumBidSize != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(CumBidSize);
      }
      if (CumAskSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(CumAskSize);
      }
      if (BidExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) BidExch);
      }
      if (AskExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(224, 7);
        output.WriteEnum((int) AskExch);
      }
      if (BidMask != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(BidMask);
      }
      if (AskMask != 0) {
        output.WriteRawTag(144, 8);
        output.WriteUInt32(AskMask);
      }
      if (BidMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        output.WriteRawTag(168, 8);
        output.WriteEnum((int) BidMktType);
      }
      if (AskMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) AskMktType);
      }
      if (BidPrice2 != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(BidPrice2);
      }
      if (AskPrice2 != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AskPrice2);
      }
      if (CumBidSize2 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(CumAskSize2);
      }
      if (BidTime != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(BidTime);
      }
      if (AskTime != 0) {
        output.WriteRawTag(208, 9);
        output.WriteInt32(AskTime);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(NetTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UpdateType);
      }
      if (BidPrice != 0F) {
        size += 2 + 4;
      }
      if (AskPrice != 0F) {
        size += 2 + 4;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (CumBidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidSize);
      }
      if (CumAskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskSize);
      }
      if (BidExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BidExch);
      }
      if (AskExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AskExch);
      }
      if (BidMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BidMask);
      }
      if (AskMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AskMask);
      }
      if (BidMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BidMktType);
      }
      if (AskMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AskMktType);
      }
      if (BidPrice2 != 0F) {
        size += 2 + 4;
      }
      if (AskPrice2 != 0F) {
        size += 2 + 4;
      }
      if (CumBidSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumBidSize2);
      }
      if (CumAskSize2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CumAskSize2);
      }
      if (BidTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidTime);
      }
      if (AskTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskTime);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionNbboQuote other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.UpdateType != global::Spiderrock.Protobuf.UpdateType.Unspecified) {
        UpdateType = other.UpdateType;
      }
      if (other.BidPrice != 0F) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0F) {
        AskPrice = other.AskPrice;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.CumBidSize != 0) {
        CumBidSize = other.CumBidSize;
      }
      if (other.CumAskSize != 0) {
        CumAskSize = other.CumAskSize;
      }
      if (other.BidExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        BidExch = other.BidExch;
      }
      if (other.AskExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        AskExch = other.AskExch;
      }
      if (other.BidMask != 0) {
        BidMask = other.BidMask;
      }
      if (other.AskMask != 0) {
        AskMask = other.AskMask;
      }
      if (other.BidMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        BidMktType = other.BidMktType;
      }
      if (other.AskMktType != global::Spiderrock.Protobuf.OptMktType.Unspecified) {
        AskMktType = other.AskMktType;
      }
      if (other.BidPrice2 != 0F) {
        BidPrice2 = other.BidPrice2;
      }
      if (other.AskPrice2 != 0F) {
        AskPrice2 = other.AskPrice2;
      }
      if (other.CumBidSize2 != 0) {
        CumBidSize2 = other.CumBidSize2;
      }
      if (other.CumAskSize2 != 0) {
        CumAskSize2 = other.CumAskSize2;
      }
      if (other.BidTime != 0) {
        BidTime = other.BidTime;
      }
      if (other.AskTime != 0) {
        AskTime = other.AskTime;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            UpdateType = (global::Spiderrock.Protobuf.UpdateType) input.ReadEnum();
            break;
          }
          case 829: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 853: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 872: {
            BidSize = input.ReadInt32();
            break;
          }
          case 896: {
            AskSize = input.ReadInt32();
            break;
          }
          case 920: {
            CumBidSize = input.ReadInt32();
            break;
          }
          case 944: {
            CumAskSize = input.ReadInt32();
            break;
          }
          case 968: {
            BidExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 992: {
            AskExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1016: {
            BidMask = input.ReadUInt32();
            break;
          }
          case 1040: {
            AskMask = input.ReadUInt32();
            break;
          }
          case 1064: {
            BidMktType = (global::Spiderrock.Protobuf.OptMktType) input.ReadEnum();
            break;
          }
          case 1088: {
            AskMktType = (global::Spiderrock.Protobuf.OptMktType) input.ReadEnum();
            break;
          }
          case 1117: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1141: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1160: {
            CumBidSize2 = input.ReadInt32();
            break;
          }
          case 1184: {
            CumAskSize2 = input.ReadInt32();
            break;
          }
          case 1208: {
            BidTime = input.ReadInt32();
            break;
          }
          case 1232: {
            AskTime = input.ReadInt32();
            break;
          }
          case 1256: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1280: {
            NetTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionNbboQuote.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            UpdateType = (global::Spiderrock.Protobuf.UpdateType) input.ReadEnum();
            break;
          }
          case 829: {
            BidPrice = input.ReadFloat();
            break;
          }
          case 853: {
            AskPrice = input.ReadFloat();
            break;
          }
          case 872: {
            BidSize = input.ReadInt32();
            break;
          }
          case 896: {
            AskSize = input.ReadInt32();
            break;
          }
          case 920: {
            CumBidSize = input.ReadInt32();
            break;
          }
          case 944: {
            CumAskSize = input.ReadInt32();
            break;
          }
          case 968: {
            BidExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 992: {
            AskExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 1016: {
            BidMask = input.ReadUInt32();
            break;
          }
          case 1040: {
            AskMask = input.ReadUInt32();
            break;
          }
          case 1064: {
            BidMktType = (global::Spiderrock.Protobuf.OptMktType) input.ReadEnum();
            break;
          }
          case 1088: {
            AskMktType = (global::Spiderrock.Protobuf.OptMktType) input.ReadEnum();
            break;
          }
          case 1117: {
            BidPrice2 = input.ReadFloat();
            break;
          }
          case 1141: {
            AskPrice2 = input.ReadFloat();
            break;
          }
          case 1160: {
            CumBidSize2 = input.ReadInt32();
            break;
          }
          case 1184: {
            CumAskSize2 = input.ReadInt32();
            break;
          }
          case 1208: {
            BidTime = input.ReadInt32();
            break;
          }
          case 1232: {
            AskTime = input.ReadInt32();
            break;
          }
          case 1256: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1280: {
            NetTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionNbboQuote message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionNbboQuote.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          okey_ = other.okey_ != null ? other.okey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "okey" field.</summary>
        public const int OkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.OptionKey okey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey Okey {
          get { return okey_; }
          set {
            okey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Okey, other.Okey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (okey_ != null) hash ^= Okey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (okey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Okey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (okey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Okey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.okey_ != null) {
            if (okey_ == null) {
              Okey = new global::Spiderrock.Protobuf.OptionKey();
            }
            Okey.MergeFrom(other.Okey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
