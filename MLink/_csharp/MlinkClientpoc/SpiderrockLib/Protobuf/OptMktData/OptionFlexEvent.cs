// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptMktData/OptionFlexEvent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptMktData/OptionFlexEvent.proto</summary>
  public static partial class OptionFlexEventReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptMktData/OptionFlexEvent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionFlexEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQcm90b2J1Zi9PcHRNa3REYXRhL09wdGlvbkZsZXhFdmVudC5wcm90bxIT",
            "c3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJvdG8i",
            "4QYKD09wdGlvbkZsZXhFdmVudBIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJv",
            "Y2sucHJvdG9idWYuTWVzc2FnZU1ldGFkYXRhEjcKBHBrZXkYAiABKAsyKS5z",
            "cGlkZXJyb2NrLnByb3RvYnVmLk9wdGlvbkZsZXhFdmVudC5QS2V5EhAKCGV2",
            "ZW50X2lkGGQgASgFEi4KCHBydF9leGNoGGcgASgOMhwuc3BpZGVycm9jay5w",
            "cm90b2J1Zi5PcHRFeGNoEhAKCHBydF9yb290GGogASgJEhIKCnJlcXVlc3Rf",
            "aWQYbSABKAUSNgoKZXZlbnRfdHlwZRhwIAEoDjIiLnNwaWRlcnJvY2sucHJv",
            "dG9idWYuRmxleEV2ZW50VHlwZRIWCg50b3RhbF9xdWFudGl0eRhzIAEoBRIV",
            "Cg1wYWNrYWdlX3ByaWNlGHYgASgBEhUKDW5ldF90aW1lc3RhbXAYeSABKAMS",
            "FQoNc3JjX3RpbWVzdGFtcBh8IAEoAxI3CgRsZWdzGH8gAygLMikuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5PcHRpb25GbGV4RXZlbnQuTGVncxofCgRQS2V5EhcK",
            "D3NlcXVlbmNlX251bWJlchgKIAEoBRqIAwoETGVncxItCgRva2V5GIIBIAEo",
            "CzIeLnNwaWRlcnJvY2sucHJvdG9idWYuT3B0aW9uS2V5EjEKCWZsZXhfdHlw",
            "ZRiFASABKA4yHS5zcGlkZXJyb2NrLnByb3RvYnVmLkZsZXhUeXBlEhEKCHF1",
            "YW50aXR5GIgBIAEoBRIOCgVwcmljZRiLASABKAESNwoKcHJpY2VfdHlwZRiO",
            "ASABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVmLkZsZXhQcmljZVR5cGUSDgoF",
            "ZGVsdGEYkQEgASgBEhIKCXJlZl9wcmljZRiUASABKAESFAoLY2xvc2VfcHJp",
            "Y2UYlwEgASgBEhIKCXByaWNlX2FkahiaASABKAESEwoKc3RyaWtlX2Fkahid",
            "ASABKAESEgoJYmlkX3ByaWNlGKABIAEoARIRCghiaWRfc2l6ZRijASABKAES",
            "EgoJYXNrX3ByaWNlGKYBIAEoARIRCghhc2tfc2l6ZRipASABKAESEQoIcmF3",
            "X3RleHQYrAEgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionFlexEvent), global::Spiderrock.Protobuf.OptionFlexEvent.Parser, new[]{ "Meta", "Pkey", "EventId", "PrtExch", "PrtRoot", "RequestId", "EventType", "TotalQuantity", "PackagePrice", "NetTimestamp", "SrcTimestamp", "Legs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey), global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey.Parser, new[]{ "SequenceNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs), global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs.Parser, new[]{ "Okey", "FlexType", "Quantity", "Price", "PriceType", "Delta", "RefPrice", "ClosePrice", "PriceAdj", "StrikeAdj", "BidPrice", "BidSize", "AskPrice", "AskSize", "RawText" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///The most recent (last) record for each active FLEX option.
  /// </summary>
  public sealed partial class OptionFlexEvent : pb::IMessage<OptionFlexEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionFlexEvent> _parser = new pb::MessageParser<OptionFlexEvent>(() => new OptionFlexEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionFlexEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.OptionFlexEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionFlexEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionFlexEvent(OptionFlexEvent other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      eventId_ = other.eventId_;
      prtExch_ = other.prtExch_;
      prtRoot_ = other.prtRoot_;
      requestId_ = other.requestId_;
      eventType_ = other.eventType_;
      totalQuantity_ = other.totalQuantity_;
      packagePrice_ = other.packagePrice_;
      netTimestamp_ = other.netTimestamp_;
      srcTimestamp_ = other.srcTimestamp_;
      legs_ = other.legs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionFlexEvent Clone() {
      return new OptionFlexEvent(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 100;
    private int eventId_;
    /// <summary>
    /// unique id of the event assigned by SpiderRock, subsequent messages on the event will use the same id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "prt_exch" field.</summary>
    public const int PrtExchFieldNumber = 103;
    private global::Spiderrock.Protobuf.OptExch prtExch_ = global::Spiderrock.Protobuf.OptExch.Unspecified;
    /// <summary>
    /// exchange code that produced this flex event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptExch PrtExch {
      get { return prtExch_; }
      set {
        prtExch_ = value;
      }
    }

    /// <summary>Field number for the "prt_root" field.</summary>
    public const int PrtRootFieldNumber = 106;
    private string prtRoot_ = "";
    /// <summary>
    /// security symbol of the FLEX option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrtRoot {
      get { return prtRoot_; }
      set {
        prtRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 109;
    private int requestId_;
    /// <summary>
    /// request identifier associated with this trade assigned by the exchange (these appear to not be 100% reliable, particularly for PHLX)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 112;
    private global::Spiderrock.Protobuf.FlexEventType eventType_ = global::Spiderrock.Protobuf.FlexEventType.Unspecified;
    /// <summary>
    /// type of event this message represents, e.g., RFQ, QTE, LST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FlexEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "total_quantity" field.</summary>
    public const int TotalQuantityFieldNumber = 115;
    private int totalQuantity_;
    /// <summary>
    /// total quantity of the flex trade
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalQuantity {
      get { return totalQuantity_; }
      set {
        totalQuantity_ = value;
      }
    }

    /// <summary>Field number for the "package_price" field.</summary>
    public const int PackagePriceFieldNumber = 118;
    private double packagePrice_;
    /// <summary>
    /// total price of the flex trade inclusive of all legs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PackagePrice {
      get { return packagePrice_; }
      set {
        packagePrice_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 121;
    private long netTimestamp_;
    /// <summary>
    /// timestamp of when this message was received
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 124;
    private long srcTimestamp_;
    /// <summary>
    /// timestamp from the exchange of when this message was sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "legs" field.</summary>
    public const int LegsFieldNumber = 127;
    private static readonly pb::FieldCodec<global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs> _repeated_legs_codec
        = pb::FieldCodec.ForMessage(1018, global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs.Parser);
    private readonly pbc::RepeatedField<global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs> legs_ = new pbc::RepeatedField<global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spiderrock.Protobuf.OptionFlexEvent.Types.Legs> Legs {
      get { return legs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionFlexEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionFlexEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (EventId != other.EventId) return false;
      if (PrtExch != other.PrtExch) return false;
      if (PrtRoot != other.PrtRoot) return false;
      if (RequestId != other.RequestId) return false;
      if (EventType != other.EventType) return false;
      if (TotalQuantity != other.TotalQuantity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PackagePrice, other.PackagePrice)) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if(!legs_.Equals(other.legs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (EventId != 0) hash ^= EventId.GetHashCode();
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) hash ^= PrtExch.GetHashCode();
      if (PrtRoot.Length != 0) hash ^= PrtRoot.GetHashCode();
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (EventType != global::Spiderrock.Protobuf.FlexEventType.Unspecified) hash ^= EventType.GetHashCode();
      if (TotalQuantity != 0) hash ^= TotalQuantity.GetHashCode();
      if (PackagePrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PackagePrice);
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      hash ^= legs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (EventId != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(EventId);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtRoot.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(PrtRoot);
      }
      if (RequestId != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(RequestId);
      }
      if (EventType != global::Spiderrock.Protobuf.FlexEventType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) EventType);
      }
      if (TotalQuantity != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(TotalQuantity);
      }
      if (PackagePrice != 0D) {
        output.WriteRawTag(177, 7);
        output.WriteDouble(PackagePrice);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(200, 7);
        output.WriteInt64(NetTimestamp);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(224, 7);
        output.WriteInt64(SrcTimestamp);
      }
      legs_.WriteTo(output, _repeated_legs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (EventId != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(EventId);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) PrtExch);
      }
      if (PrtRoot.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(PrtRoot);
      }
      if (RequestId != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(RequestId);
      }
      if (EventType != global::Spiderrock.Protobuf.FlexEventType.Unspecified) {
        output.WriteRawTag(128, 7);
        output.WriteEnum((int) EventType);
      }
      if (TotalQuantity != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(TotalQuantity);
      }
      if (PackagePrice != 0D) {
        output.WriteRawTag(177, 7);
        output.WriteDouble(PackagePrice);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(200, 7);
        output.WriteInt64(NetTimestamp);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(224, 7);
        output.WriteInt64(SrcTimestamp);
      }
      legs_.WriteTo(ref output, _repeated_legs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (EventId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EventId);
      }
      if (PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtExch);
      }
      if (PrtRoot.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrtRoot);
      }
      if (RequestId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (EventType != global::Spiderrock.Protobuf.FlexEventType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (TotalQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalQuantity);
      }
      if (PackagePrice != 0D) {
        size += 2 + 8;
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      size += legs_.CalculateSize(_repeated_legs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionFlexEvent other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.EventId != 0) {
        EventId = other.EventId;
      }
      if (other.PrtExch != global::Spiderrock.Protobuf.OptExch.Unspecified) {
        PrtExch = other.PrtExch;
      }
      if (other.PrtRoot.Length != 0) {
        PrtRoot = other.PrtRoot;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.EventType != global::Spiderrock.Protobuf.FlexEventType.Unspecified) {
        EventType = other.EventType;
      }
      if (other.TotalQuantity != 0) {
        TotalQuantity = other.TotalQuantity;
      }
      if (other.PackagePrice != 0D) {
        PackagePrice = other.PackagePrice;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      legs_.Add(other.legs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            EventId = input.ReadInt32();
            break;
          }
          case 824: {
            PrtExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 850: {
            PrtRoot = input.ReadString();
            break;
          }
          case 872: {
            RequestId = input.ReadInt32();
            break;
          }
          case 896: {
            EventType = (global::Spiderrock.Protobuf.FlexEventType) input.ReadEnum();
            break;
          }
          case 920: {
            TotalQuantity = input.ReadInt32();
            break;
          }
          case 945: {
            PackagePrice = input.ReadDouble();
            break;
          }
          case 968: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 992: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1018: {
            legs_.AddEntriesFrom(input, _repeated_legs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionFlexEvent.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 800: {
            EventId = input.ReadInt32();
            break;
          }
          case 824: {
            PrtExch = (global::Spiderrock.Protobuf.OptExch) input.ReadEnum();
            break;
          }
          case 850: {
            PrtRoot = input.ReadString();
            break;
          }
          case 872: {
            RequestId = input.ReadInt32();
            break;
          }
          case 896: {
            EventType = (global::Spiderrock.Protobuf.FlexEventType) input.ReadEnum();
            break;
          }
          case 920: {
            TotalQuantity = input.ReadInt32();
            break;
          }
          case 945: {
            PackagePrice = input.ReadDouble();
            break;
          }
          case 968: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 992: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1018: {
            legs_.AddEntriesFrom(ref input, _repeated_legs_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionFlexEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionFlexEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          sequenceNumber_ = other.sequenceNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "sequence_number" field.</summary>
        public const int SequenceNumberFieldNumber = 10;
        private int sequenceNumber_;
        /// <summary>
        /// sequence of the flex event message counting from the start of day or last restart of the feed handler
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SequenceNumber {
          get { return sequenceNumber_; }
          set {
            sequenceNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SequenceNumber != other.SequenceNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SequenceNumber != 0) hash ^= SequenceNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SequenceNumber != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(SequenceNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SequenceNumber != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(SequenceNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SequenceNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.SequenceNumber != 0) {
            SequenceNumber = other.SequenceNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                SequenceNumber = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                SequenceNumber = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Legs : pb::IMessage<Legs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Legs> _parser = new pb::MessageParser<Legs>(() => new Legs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Legs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionFlexEvent.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Legs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Legs(Legs other) : this() {
          okey_ = other.okey_ != null ? other.okey_.Clone() : null;
          flexType_ = other.flexType_;
          quantity_ = other.quantity_;
          price_ = other.price_;
          priceType_ = other.priceType_;
          delta_ = other.delta_;
          refPrice_ = other.refPrice_;
          closePrice_ = other.closePrice_;
          priceAdj_ = other.priceAdj_;
          strikeAdj_ = other.strikeAdj_;
          bidPrice_ = other.bidPrice_;
          bidSize_ = other.bidSize_;
          askPrice_ = other.askPrice_;
          askSize_ = other.askSize_;
          rawText_ = other.rawText_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Legs Clone() {
          return new Legs(this);
        }

        /// <summary>Field number for the "okey" field.</summary>
        public const int OkeyFieldNumber = 130;
        private global::Spiderrock.Protobuf.OptionKey okey_;
        /// <summary>
        /// OptionKey of the instrument, if available
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.OptionKey Okey {
          get { return okey_; }
          set {
            okey_ = value;
          }
        }

        /// <summary>Field number for the "flex_type" field.</summary>
        public const int FlexTypeFieldNumber = 133;
        private global::Spiderrock.Protobuf.FlexType flexType_ = global::Spiderrock.Protobuf.FlexType.Unspecified;
        /// <summary>
        /// European or American exercise, AM or PM exercise time
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.FlexType FlexType {
          get { return flexType_; }
          set {
            flexType_ = value;
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 136;
        private int quantity_;
        /// <summary>
        /// quantity of contracts in this leg of the event
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 139;
        private double price_;
        /// <summary>
        /// price of this leg of the event, could be quoted in percentage of closing price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "price_type" field.</summary>
        public const int PriceTypeFieldNumber = 142;
        private global::Spiderrock.Protobuf.FlexPriceType priceType_ = global::Spiderrock.Protobuf.FlexPriceType.Unspecified;
        /// <summary>
        /// price type of the event
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.FlexPriceType PriceType {
          get { return priceType_; }
          set {
            priceType_ = value;
          }
        }

        /// <summary>Field number for the "delta" field.</summary>
        public const int DeltaFieldNumber = 145;
        private double delta_;
        /// <summary>
        /// delta supplied with the event for delta adjusted at close events
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Delta {
          get { return delta_; }
          set {
            delta_ = value;
          }
        }

        /// <summary>Field number for the "ref_price" field.</summary>
        public const int RefPriceFieldNumber = 148;
        private double refPrice_;
        /// <summary>
        /// reference price of the event, for use in delta ajusting the final price
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double RefPrice {
          get { return refPrice_; }
          set {
            refPrice_ = value;
          }
        }

        /// <summary>Field number for the "close_price" field.</summary>
        public const int ClosePriceFieldNumber = 151;
        private double closePrice_;
        /// <summary>
        /// close price used for both percentage adjusted and delta adjusted events
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double ClosePrice {
          get { return closePrice_; }
          set {
            closePrice_ = value;
          }
        }

        /// <summary>Field number for the "price_adj" field.</summary>
        public const int PriceAdjFieldNumber = 154;
        private double priceAdj_;
        /// <summary>
        /// final adjusted price, made available after the event is marked as PctAdjApplied or DeltaAdjApplied
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double PriceAdj {
          get { return priceAdj_; }
          set {
            priceAdj_ = value;
          }
        }

        /// <summary>Field number for the "strike_adj" field.</summary>
        public const int StrikeAdjFieldNumber = 157;
        private double strikeAdj_;
        /// <summary>
        /// final adjusted strike, made available after the event is marked PctAdjApplied
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double StrikeAdj {
          get { return strikeAdj_; }
          set {
            strikeAdj_ = value;
          }
        }

        /// <summary>Field number for the "bid_price" field.</summary>
        public const int BidPriceFieldNumber = 160;
        private double bidPrice_;
        /// <summary>
        /// bid price from QTE messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double BidPrice {
          get { return bidPrice_; }
          set {
            bidPrice_ = value;
          }
        }

        /// <summary>Field number for the "bid_size" field.</summary>
        public const int BidSizeFieldNumber = 163;
        private double bidSize_;
        /// <summary>
        /// bid size from QTE messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double BidSize {
          get { return bidSize_; }
          set {
            bidSize_ = value;
          }
        }

        /// <summary>Field number for the "ask_price" field.</summary>
        public const int AskPriceFieldNumber = 166;
        private double askPrice_;
        /// <summary>
        /// ask price from QTE messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AskPrice {
          get { return askPrice_; }
          set {
            askPrice_ = value;
          }
        }

        /// <summary>Field number for the "ask_size" field.</summary>
        public const int AskSizeFieldNumber = 169;
        private double askSize_;
        /// <summary>
        /// ask size from QTE messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AskSize {
          get { return askSize_; }
          set {
            askSize_ = value;
          }
        }

        /// <summary>Field number for the "raw_text" field.</summary>
        public const int RawTextFieldNumber = 172;
        private string rawText_ = "";
        /// <summary>
        /// raw text of the flex event
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RawText {
          get { return rawText_; }
          set {
            rawText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Legs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Legs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Okey, other.Okey)) return false;
          if (FlexType != other.FlexType) return false;
          if (Quantity != other.Quantity) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
          if (PriceType != other.PriceType) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Delta, other.Delta)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RefPrice, other.RefPrice)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ClosePrice, other.ClosePrice)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PriceAdj, other.PriceAdj)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StrikeAdj, other.StrikeAdj)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidSize, other.BidSize)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskSize, other.AskSize)) return false;
          if (RawText != other.RawText) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (okey_ != null) hash ^= Okey.GetHashCode();
          if (FlexType != global::Spiderrock.Protobuf.FlexType.Unspecified) hash ^= FlexType.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
          if (PriceType != global::Spiderrock.Protobuf.FlexPriceType.Unspecified) hash ^= PriceType.GetHashCode();
          if (Delta != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Delta);
          if (RefPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RefPrice);
          if (ClosePrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ClosePrice);
          if (PriceAdj != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PriceAdj);
          if (StrikeAdj != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StrikeAdj);
          if (BidPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice);
          if (BidSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidSize);
          if (AskPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice);
          if (AskSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskSize);
          if (RawText.Length != 0) hash ^= RawText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (okey_ != null) {
            output.WriteRawTag(146, 8);
            output.WriteMessage(Okey);
          }
          if (FlexType != global::Spiderrock.Protobuf.FlexType.Unspecified) {
            output.WriteRawTag(168, 8);
            output.WriteEnum((int) FlexType);
          }
          if (Quantity != 0) {
            output.WriteRawTag(192, 8);
            output.WriteInt32(Quantity);
          }
          if (Price != 0D) {
            output.WriteRawTag(217, 8);
            output.WriteDouble(Price);
          }
          if (PriceType != global::Spiderrock.Protobuf.FlexPriceType.Unspecified) {
            output.WriteRawTag(240, 8);
            output.WriteEnum((int) PriceType);
          }
          if (Delta != 0D) {
            output.WriteRawTag(137, 9);
            output.WriteDouble(Delta);
          }
          if (RefPrice != 0D) {
            output.WriteRawTag(161, 9);
            output.WriteDouble(RefPrice);
          }
          if (ClosePrice != 0D) {
            output.WriteRawTag(185, 9);
            output.WriteDouble(ClosePrice);
          }
          if (PriceAdj != 0D) {
            output.WriteRawTag(209, 9);
            output.WriteDouble(PriceAdj);
          }
          if (StrikeAdj != 0D) {
            output.WriteRawTag(233, 9);
            output.WriteDouble(StrikeAdj);
          }
          if (BidPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(BidPrice);
          }
          if (BidSize != 0D) {
            output.WriteRawTag(153, 10);
            output.WriteDouble(BidSize);
          }
          if (AskPrice != 0D) {
            output.WriteRawTag(177, 10);
            output.WriteDouble(AskPrice);
          }
          if (AskSize != 0D) {
            output.WriteRawTag(201, 10);
            output.WriteDouble(AskSize);
          }
          if (RawText.Length != 0) {
            output.WriteRawTag(226, 10);
            output.WriteString(RawText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (okey_ != null) {
            output.WriteRawTag(146, 8);
            output.WriteMessage(Okey);
          }
          if (FlexType != global::Spiderrock.Protobuf.FlexType.Unspecified) {
            output.WriteRawTag(168, 8);
            output.WriteEnum((int) FlexType);
          }
          if (Quantity != 0) {
            output.WriteRawTag(192, 8);
            output.WriteInt32(Quantity);
          }
          if (Price != 0D) {
            output.WriteRawTag(217, 8);
            output.WriteDouble(Price);
          }
          if (PriceType != global::Spiderrock.Protobuf.FlexPriceType.Unspecified) {
            output.WriteRawTag(240, 8);
            output.WriteEnum((int) PriceType);
          }
          if (Delta != 0D) {
            output.WriteRawTag(137, 9);
            output.WriteDouble(Delta);
          }
          if (RefPrice != 0D) {
            output.WriteRawTag(161, 9);
            output.WriteDouble(RefPrice);
          }
          if (ClosePrice != 0D) {
            output.WriteRawTag(185, 9);
            output.WriteDouble(ClosePrice);
          }
          if (PriceAdj != 0D) {
            output.WriteRawTag(209, 9);
            output.WriteDouble(PriceAdj);
          }
          if (StrikeAdj != 0D) {
            output.WriteRawTag(233, 9);
            output.WriteDouble(StrikeAdj);
          }
          if (BidPrice != 0D) {
            output.WriteRawTag(129, 10);
            output.WriteDouble(BidPrice);
          }
          if (BidSize != 0D) {
            output.WriteRawTag(153, 10);
            output.WriteDouble(BidSize);
          }
          if (AskPrice != 0D) {
            output.WriteRawTag(177, 10);
            output.WriteDouble(AskPrice);
          }
          if (AskSize != 0D) {
            output.WriteRawTag(201, 10);
            output.WriteDouble(AskSize);
          }
          if (RawText.Length != 0) {
            output.WriteRawTag(226, 10);
            output.WriteString(RawText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (okey_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Okey);
          }
          if (FlexType != global::Spiderrock.Protobuf.FlexType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FlexType);
          }
          if (Quantity != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
          }
          if (Price != 0D) {
            size += 2 + 8;
          }
          if (PriceType != global::Spiderrock.Protobuf.FlexPriceType.Unspecified) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceType);
          }
          if (Delta != 0D) {
            size += 2 + 8;
          }
          if (RefPrice != 0D) {
            size += 2 + 8;
          }
          if (ClosePrice != 0D) {
            size += 2 + 8;
          }
          if (PriceAdj != 0D) {
            size += 2 + 8;
          }
          if (StrikeAdj != 0D) {
            size += 2 + 8;
          }
          if (BidPrice != 0D) {
            size += 2 + 8;
          }
          if (BidSize != 0D) {
            size += 2 + 8;
          }
          if (AskPrice != 0D) {
            size += 2 + 8;
          }
          if (AskSize != 0D) {
            size += 2 + 8;
          }
          if (RawText.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(RawText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Legs other) {
          if (other == null) {
            return;
          }
          if (other.okey_ != null) {
            if (okey_ == null) {
              Okey = new global::Spiderrock.Protobuf.OptionKey();
            }
            Okey.MergeFrom(other.Okey);
          }
          if (other.FlexType != global::Spiderrock.Protobuf.FlexType.Unspecified) {
            FlexType = other.FlexType;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          if (other.Price != 0D) {
            Price = other.Price;
          }
          if (other.PriceType != global::Spiderrock.Protobuf.FlexPriceType.Unspecified) {
            PriceType = other.PriceType;
          }
          if (other.Delta != 0D) {
            Delta = other.Delta;
          }
          if (other.RefPrice != 0D) {
            RefPrice = other.RefPrice;
          }
          if (other.ClosePrice != 0D) {
            ClosePrice = other.ClosePrice;
          }
          if (other.PriceAdj != 0D) {
            PriceAdj = other.PriceAdj;
          }
          if (other.StrikeAdj != 0D) {
            StrikeAdj = other.StrikeAdj;
          }
          if (other.BidPrice != 0D) {
            BidPrice = other.BidPrice;
          }
          if (other.BidSize != 0D) {
            BidSize = other.BidSize;
          }
          if (other.AskPrice != 0D) {
            AskPrice = other.AskPrice;
          }
          if (other.AskSize != 0D) {
            AskSize = other.AskSize;
          }
          if (other.RawText.Length != 0) {
            RawText = other.RawText;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 1042: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
              case 1064: {
                FlexType = (global::Spiderrock.Protobuf.FlexType) input.ReadEnum();
                break;
              }
              case 1088: {
                Quantity = input.ReadInt32();
                break;
              }
              case 1113: {
                Price = input.ReadDouble();
                break;
              }
              case 1136: {
                PriceType = (global::Spiderrock.Protobuf.FlexPriceType) input.ReadEnum();
                break;
              }
              case 1161: {
                Delta = input.ReadDouble();
                break;
              }
              case 1185: {
                RefPrice = input.ReadDouble();
                break;
              }
              case 1209: {
                ClosePrice = input.ReadDouble();
                break;
              }
              case 1233: {
                PriceAdj = input.ReadDouble();
                break;
              }
              case 1257: {
                StrikeAdj = input.ReadDouble();
                break;
              }
              case 1281: {
                BidPrice = input.ReadDouble();
                break;
              }
              case 1305: {
                BidSize = input.ReadDouble();
                break;
              }
              case 1329: {
                AskPrice = input.ReadDouble();
                break;
              }
              case 1353: {
                AskSize = input.ReadDouble();
                break;
              }
              case 1378: {
                RawText = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 1042: {
                if (okey_ == null) {
                  Okey = new global::Spiderrock.Protobuf.OptionKey();
                }
                input.ReadMessage(Okey);
                break;
              }
              case 1064: {
                FlexType = (global::Spiderrock.Protobuf.FlexType) input.ReadEnum();
                break;
              }
              case 1088: {
                Quantity = input.ReadInt32();
                break;
              }
              case 1113: {
                Price = input.ReadDouble();
                break;
              }
              case 1136: {
                PriceType = (global::Spiderrock.Protobuf.FlexPriceType) input.ReadEnum();
                break;
              }
              case 1161: {
                Delta = input.ReadDouble();
                break;
              }
              case 1185: {
                RefPrice = input.ReadDouble();
                break;
              }
              case 1209: {
                ClosePrice = input.ReadDouble();
                break;
              }
              case 1233: {
                PriceAdj = input.ReadDouble();
                break;
              }
              case 1257: {
                StrikeAdj = input.ReadDouble();
                break;
              }
              case 1281: {
                BidPrice = input.ReadDouble();
                break;
              }
              case 1305: {
                BidSize = input.ReadDouble();
                break;
              }
              case 1329: {
                AskPrice = input.ReadDouble();
                break;
              }
              case 1353: {
                AskSize = input.ReadDouble();
                break;
              }
              case 1378: {
                RawText = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
