// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/FutProbModel/FutureQuoteProbability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/FutProbModel/FutureQuoteProbability.proto</summary>
  public static partial class FutureQuoteProbabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/FutProbModel/FutureQuoteProbability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FutureQuoteProbabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJQcm90b2J1Zi9GdXRQcm9iTW9kZWwvRnV0dXJlUXVvdGVQcm9iYWJpbGl0",
            "eS5wcm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21t",
            "b24ucHJvdG8i3QgKFkZ1dHVyZVF1b3RlUHJvYmFiaWxpdHkSMwoFX21ldGEY",
            "ASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI+",
            "CgRwa2V5GAIgASgLMjAuc3BpZGVycm9jay5wcm90b2J1Zi5GdXR1cmVRdW90",
            "ZVByb2JhYmlsaXR5LlBLZXkSEQoJYmlkX3ByaWNlGGQgASgBEhEKCWFza19w",
            "cmljZRhnIAEoARIQCghiaWRfc2l6ZRhqIAEoBRIQCghhc2tfc2l6ZRhtIAEo",
            "BRIVCg1iaWRfdGFrZV9wcm9iGHAgASgCEhUKDWFza190YWtlX3Byb2IYcyAB",
            "KAISNwoLYmlkX3Rha2VfcnYYdiABKA4yIi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LlByZWRpY3RSZXN1bHQSNwoLYXNrX3Rha2VfcnYYeSABKA4yIi5zcGlkZXJy",
            "b2NrLnByb3RvYnVmLlByZWRpY3RSZXN1bHQSFgoOYmlkX2ltcHJfcHJpY2UY",
            "fCABKAISFgoOYXNrX2ltcHJfcHJpY2UYfyABKAISFwoOYmlkX3RrX2ltX3By",
            "b2IYggEgASgCEhcKDmFza190a19pbV9wcm9iGIUBIAEoAhI5CgxiaWRfdGtf",
            "aW1fcnYYiAEgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5QcmVkaWN0UmVz",
            "dWx0EjkKDGFza190a19pbV9ydhiLASABKA4yIi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLlByZWRpY3RSZXN1bHQSEgoJbWlkX3ByaWNlGI4BIAEoARIXCg5hdmdf",
            "YmlkX2xpbmsxbRiRASABKAISFwoObWFlX2JpZF9saW5rMW0YlAEgASgCEhcK",
            "DmF2Z19hc2tfbGluazFtGJcBIAEoAhIXCg5tYWVfYXNrX2xpbmsxbRiaASAB",
            "KAISGAoPYXZnX2JpZF9saW5rMTBtGJ0BIAEoAhIYCg9tYWVfYmlkX2xpbmsx",
            "MG0YoAEgASgCEhgKD2F2Z19hc2tfbGluazEwbRijASABKAISGAoPbWFlX2Fz",
            "a19saW5rMTBtGKYBIAEoAhIYCg9hdmdfbWt0X3dpZHRoMW0YqQEgASgCEhkK",
            "EGF2Z19ta3Rfd2lkdGgxMG0YrAEgASgCEhAKB2NvdW50ZXIYrwEgASgFEjEK",
            "CXFwX3NvdXJjZRiyASABKA4yHS5zcGlkZXJyb2NrLnByb3RvYnVmLlFQU291",
            "cmNlEhYKDXNyY190aW1lc3RhbXAYtQEgASgDEhYKDW5ldF90aW1lc3RhbXAY",
            "uAEgASgDEhYKDXNtc190aW1lc3RhbXAYuwEgASgDGmoKBFBLZXkSLAoEZmtl",
            "eRgKIAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuRXhwaXJ5S2V5EjQKC3N0",
            "YXRlX21vZGVsGAsgASgOMh8uc3BpZGVycm9jay5wcm90b2J1Zi5TdGF0ZU1v",
            "ZGVsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureQuoteProbability), global::Spiderrock.Protobuf.FutureQuoteProbability.Parser, new[]{ "Meta", "Pkey", "BidPrice", "AskPrice", "BidSize", "AskSize", "BidTakeProb", "AskTakeProb", "BidTakeRv", "AskTakeRv", "BidImprPrice", "AskImprPrice", "BidTkImProb", "AskTkImProb", "BidTkImRv", "AskTkImRv", "MidPrice", "AvgBidLink1M", "MaeBidLink1M", "AvgAskLink1M", "MaeAskLink1M", "AvgBidLink10M", "MaeBidLink10M", "AvgAskLink10M", "MaeAskLink10M", "AvgMktWidth1M", "AvgMktWidth10M", "Counter", "QpSource", "SrcTimestamp", "NetTimestamp", "SmsTimestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey), global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey.Parser, new[]{ "Fkey", "StateModel" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FutureQuoteProbability : pb::IMessage<FutureQuoteProbability>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FutureQuoteProbability> _parser = new pb::MessageParser<FutureQuoteProbability>(() => new FutureQuoteProbability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FutureQuoteProbability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.FutureQuoteProbabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureQuoteProbability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureQuoteProbability(FutureQuoteProbability other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      bidTakeProb_ = other.bidTakeProb_;
      askTakeProb_ = other.askTakeProb_;
      bidTakeRv_ = other.bidTakeRv_;
      askTakeRv_ = other.askTakeRv_;
      bidImprPrice_ = other.bidImprPrice_;
      askImprPrice_ = other.askImprPrice_;
      bidTkImProb_ = other.bidTkImProb_;
      askTkImProb_ = other.askTkImProb_;
      bidTkImRv_ = other.bidTkImRv_;
      askTkImRv_ = other.askTkImRv_;
      midPrice_ = other.midPrice_;
      avgBidLink1M_ = other.avgBidLink1M_;
      maeBidLink1M_ = other.maeBidLink1M_;
      avgAskLink1M_ = other.avgAskLink1M_;
      maeAskLink1M_ = other.maeAskLink1M_;
      avgBidLink10M_ = other.avgBidLink10M_;
      maeBidLink10M_ = other.maeBidLink10M_;
      avgAskLink10M_ = other.avgAskLink10M_;
      maeAskLink10M_ = other.maeAskLink10M_;
      avgMktWidth1M_ = other.avgMktWidth1M_;
      avgMktWidth10M_ = other.avgMktWidth10M_;
      counter_ = other.counter_;
      qpSource_ = other.qpSource_;
      srcTimestamp_ = other.srcTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      smsTimestamp_ = other.smsTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureQuoteProbability Clone() {
      return new FutureQuoteProbability(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 100;
    private double bidPrice_;
    /// <summary>
    /// best bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 103;
    private double askPrice_;
    /// <summary>
    /// best ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 106;
    private int bidSize_;
    /// <summary>
    /// cumulative size @ bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 109;
    private int askSize_;
    /// <summary>
    /// cumulative size @ ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "bid_take_prob" field.</summary>
    public const int BidTakeProbFieldNumber = 112;
    private float bidTakeProb_;
    /// <summary>
    /// bid take probability of current nbbo market (zero exchange fee) [average size print]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidTakeProb {
      get { return bidTakeProb_; }
      set {
        bidTakeProb_ = value;
      }
    }

    /// <summary>Field number for the "ask_take_prob" field.</summary>
    public const int AskTakeProbFieldNumber = 115;
    private float askTakeProb_;
    /// <summary>
    /// ask take probability of current nbbo market (zero exchange fee) [average size print]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskTakeProb {
      get { return askTakeProb_; }
      set {
        askTakeProb_ = value;
      }
    }

    /// <summary>Field number for the "bid_take_rv" field.</summary>
    public const int BidTakeRvFieldNumber = 118;
    private global::Spiderrock.Protobuf.PredictResult bidTakeRv_ = global::Spiderrock.Protobuf.PredictResult.Unspecified;
    /// <summary>
    /// model result code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PredictResult BidTakeRv {
      get { return bidTakeRv_; }
      set {
        bidTakeRv_ = value;
      }
    }

    /// <summary>Field number for the "ask_take_rv" field.</summary>
    public const int AskTakeRvFieldNumber = 121;
    private global::Spiderrock.Protobuf.PredictResult askTakeRv_ = global::Spiderrock.Protobuf.PredictResult.Unspecified;
    /// <summary>
    /// model result code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PredictResult AskTakeRv {
      get { return askTakeRv_; }
      set {
        askTakeRv_ = value;
      }
    }

    /// <summary>Field number for the "bid_impr_price" field.</summary>
    public const int BidImprPriceFieldNumber = 124;
    private float bidImprPrice_;
    /// <summary>
    /// trial improvement price (usually 1 tick or 1/2 spread inside bidPrice)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidImprPrice {
      get { return bidImprPrice_; }
      set {
        bidImprPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_impr_price" field.</summary>
    public const int AskImprPriceFieldNumber = 127;
    private float askImprPrice_;
    /// <summary>
    /// trial improvement price (usually 1 tick or 1/2 spread inside askPrice)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskImprPrice {
      get { return askImprPrice_; }
      set {
        askImprPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_tk_im_prob" field.</summary>
    public const int BidTkImProbFieldNumber = 130;
    private float bidTkImProb_;
    /// <summary>
    /// bid take imprv probability of current nbbo market (zero exchange fee) [prob to sell (take) @ bid + imprIncrement]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BidTkImProb {
      get { return bidTkImProb_; }
      set {
        bidTkImProb_ = value;
      }
    }

    /// <summary>Field number for the "ask_tk_im_prob" field.</summary>
    public const int AskTkImProbFieldNumber = 133;
    private float askTkImProb_;
    /// <summary>
    /// ask take imprv probability of current nbbo market (zero exchange fee) [prob to buy (take) @ ask - imprIncrement]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AskTkImProb {
      get { return askTkImProb_; }
      set {
        askTkImProb_ = value;
      }
    }

    /// <summary>Field number for the "bid_tk_im_rv" field.</summary>
    public const int BidTkImRvFieldNumber = 136;
    private global::Spiderrock.Protobuf.PredictResult bidTkImRv_ = global::Spiderrock.Protobuf.PredictResult.Unspecified;
    /// <summary>
    /// model result code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PredictResult BidTkImRv {
      get { return bidTkImRv_; }
      set {
        bidTkImRv_ = value;
      }
    }

    /// <summary>Field number for the "ask_tk_im_rv" field.</summary>
    public const int AskTkImRvFieldNumber = 139;
    private global::Spiderrock.Protobuf.PredictResult askTkImRv_ = global::Spiderrock.Protobuf.PredictResult.Unspecified;
    /// <summary>
    /// model result code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.PredictResult AskTkImRv {
      get { return askTkImRv_; }
      set {
        askTkImRv_ = value;
      }
    }

    /// <summary>Field number for the "mid_price" field.</summary>
    public const int MidPriceFieldNumber = 142;
    private double midPrice_;
    /// <summary>
    /// price corresponding to 0.50 probability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MidPrice {
      get { return midPrice_; }
      set {
        midPrice_ = value;
      }
    }

    /// <summary>Field number for the "avg_bid_link1m" field.</summary>
    public const int AvgBidLink1MFieldNumber = 145;
    private float avgBidLink1M_;
    /// <summary>
    /// average bid link value (~1 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgBidLink1M {
      get { return avgBidLink1M_; }
      set {
        avgBidLink1M_ = value;
      }
    }

    /// <summary>Field number for the "mae_bid_link1m" field.</summary>
    public const int MaeBidLink1MFieldNumber = 148;
    private float maeBidLink1M_;
    /// <summary>
    /// bid link value mean abs err (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeBidLink1M {
      get { return maeBidLink1M_; }
      set {
        maeBidLink1M_ = value;
      }
    }

    /// <summary>Field number for the "avg_ask_link1m" field.</summary>
    public const int AvgAskLink1MFieldNumber = 151;
    private float avgAskLink1M_;
    /// <summary>
    /// average ask link value (~1 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgAskLink1M {
      get { return avgAskLink1M_; }
      set {
        avgAskLink1M_ = value;
      }
    }

    /// <summary>Field number for the "mae_ask_link1m" field.</summary>
    public const int MaeAskLink1MFieldNumber = 154;
    private float maeAskLink1M_;
    /// <summary>
    /// ask link value mean abs err (~1 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeAskLink1M {
      get { return maeAskLink1M_; }
      set {
        maeAskLink1M_ = value;
      }
    }

    /// <summary>Field number for the "avg_bid_link10m" field.</summary>
    public const int AvgBidLink10MFieldNumber = 157;
    private float avgBidLink10M_;
    /// <summary>
    /// average bid link value (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgBidLink10M {
      get { return avgBidLink10M_; }
      set {
        avgBidLink10M_ = value;
      }
    }

    /// <summary>Field number for the "mae_bid_link10m" field.</summary>
    public const int MaeBidLink10MFieldNumber = 160;
    private float maeBidLink10M_;
    /// <summary>
    /// bid link value mean abs err (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeBidLink10M {
      get { return maeBidLink10M_; }
      set {
        maeBidLink10M_ = value;
      }
    }

    /// <summary>Field number for the "avg_ask_link10m" field.</summary>
    public const int AvgAskLink10MFieldNumber = 163;
    private float avgAskLink10M_;
    /// <summary>
    /// average ask link value (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgAskLink10M {
      get { return avgAskLink10M_; }
      set {
        avgAskLink10M_ = value;
      }
    }

    /// <summary>Field number for the "mae_ask_link10m" field.</summary>
    public const int MaeAskLink10MFieldNumber = 166;
    private float maeAskLink10M_;
    /// <summary>
    /// ask link value mean abs err (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeAskLink10M {
      get { return maeAskLink10M_; }
      set {
        maeAskLink10M_ = value;
      }
    }

    /// <summary>Field number for the "avg_mkt_width1m" field.</summary>
    public const int AvgMktWidth1MFieldNumber = 169;
    private float avgMktWidth1M_;
    /// <summary>
    /// askPrice - bidPrice (~1 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgMktWidth1M {
      get { return avgMktWidth1M_; }
      set {
        avgMktWidth1M_ = value;
      }
    }

    /// <summary>Field number for the "avg_mkt_width10m" field.</summary>
    public const int AvgMktWidth10MFieldNumber = 172;
    private float avgMktWidth10M_;
    /// <summary>
    /// askPrice - bidPrice (~10 min)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgMktWidth10M {
      get { return avgMktWidth10M_; }
      set {
        avgMktWidth10M_ = value;
      }
    }

    /// <summary>Field number for the "counter" field.</summary>
    public const int CounterFieldNumber = 175;
    private int counter_;
    /// <summary>
    /// record update counter (zero @ start of period;per fkey)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Counter {
      get { return counter_; }
      set {
        counter_ = value;
      }
    }

    /// <summary>Field number for the "qp_source" field.</summary>
    public const int QpSourceFieldNumber = 178;
    private global::Spiderrock.Protobuf.QPSource qpSource_ = global::Spiderrock.Protobuf.QPSource.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.QPSource QpSource {
      get { return qpSource_; }
      set {
        qpSource_ = value;
      }
    }

    /// <summary>Field number for the "src_timestamp" field.</summary>
    public const int SrcTimestampFieldNumber = 181;
    private long srcTimestamp_;
    /// <summary>
    /// feed timestamp from the packet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SrcTimestamp {
      get { return srcTimestamp_; }
      set {
        srcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 184;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch (from FutureBookQuote);zero = size only change
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sms_timestamp" field.</summary>
    public const int SmsTimestampFieldNumber = 187;
    private long smsTimestamp_;
    /// <summary>
    /// state model server timestamp (just before publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SmsTimestamp {
      get { return smsTimestamp_; }
      set {
        smsTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FutureQuoteProbability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FutureQuoteProbability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidTakeProb, other.BidTakeProb)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskTakeProb, other.AskTakeProb)) return false;
      if (BidTakeRv != other.BidTakeRv) return false;
      if (AskTakeRv != other.AskTakeRv) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidImprPrice, other.BidImprPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskImprPrice, other.AskImprPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BidTkImProb, other.BidTkImProb)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AskTkImProb, other.AskTkImProb)) return false;
      if (BidTkImRv != other.BidTkImRv) return false;
      if (AskTkImRv != other.AskTkImRv) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MidPrice, other.MidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgBidLink1M, other.AvgBidLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeBidLink1M, other.MaeBidLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgAskLink1M, other.AvgAskLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeAskLink1M, other.MaeAskLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgBidLink10M, other.AvgBidLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeBidLink10M, other.MaeBidLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgAskLink10M, other.AvgAskLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeAskLink10M, other.MaeAskLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgMktWidth1M, other.AvgMktWidth1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgMktWidth10M, other.AvgMktWidth10M)) return false;
      if (Counter != other.Counter) return false;
      if (QpSource != other.QpSource) return false;
      if (SrcTimestamp != other.SrcTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (SmsTimestamp != other.SmsTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (BidPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (BidTakeProb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidTakeProb);
      if (AskTakeProb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskTakeProb);
      if (BidTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) hash ^= BidTakeRv.GetHashCode();
      if (AskTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) hash ^= AskTakeRv.GetHashCode();
      if (BidImprPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidImprPrice);
      if (AskImprPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskImprPrice);
      if (BidTkImProb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BidTkImProb);
      if (AskTkImProb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AskTkImProb);
      if (BidTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) hash ^= BidTkImRv.GetHashCode();
      if (AskTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) hash ^= AskTkImRv.GetHashCode();
      if (MidPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MidPrice);
      if (AvgBidLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgBidLink1M);
      if (MaeBidLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeBidLink1M);
      if (AvgAskLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgAskLink1M);
      if (MaeAskLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeAskLink1M);
      if (AvgBidLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgBidLink10M);
      if (MaeBidLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeBidLink10M);
      if (AvgAskLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgAskLink10M);
      if (MaeAskLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeAskLink10M);
      if (AvgMktWidth1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgMktWidth1M);
      if (AvgMktWidth10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgMktWidth10M);
      if (Counter != 0) hash ^= Counter.GetHashCode();
      if (QpSource != global::Spiderrock.Protobuf.QPSource.Unspecified) hash ^= QpSource.GetHashCode();
      if (SrcTimestamp != 0L) hash ^= SrcTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (SmsTimestamp != 0L) hash ^= SmsTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(161, 6);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(AskSize);
      }
      if (BidTakeProb != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(BidTakeProb);
      }
      if (AskTakeProb != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(AskTakeProb);
      }
      if (BidTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) BidTakeRv);
      }
      if (AskTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) AskTakeRv);
      }
      if (BidImprPrice != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(BidImprPrice);
      }
      if (AskImprPrice != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(AskImprPrice);
      }
      if (BidTkImProb != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(BidTkImProb);
      }
      if (AskTkImProb != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(AskTkImProb);
      }
      if (BidTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) BidTkImRv);
      }
      if (AskTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) AskTkImRv);
      }
      if (MidPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(MidPrice);
      }
      if (AvgBidLink1M != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(AvgBidLink1M);
      }
      if (MaeBidLink1M != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(MaeBidLink1M);
      }
      if (AvgAskLink1M != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(AvgAskLink1M);
      }
      if (MaeAskLink1M != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(MaeAskLink1M);
      }
      if (AvgBidLink10M != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AvgBidLink10M);
      }
      if (MaeBidLink10M != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(MaeBidLink10M);
      }
      if (AvgAskLink10M != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(AvgAskLink10M);
      }
      if (MaeAskLink10M != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(MaeAskLink10M);
      }
      if (AvgMktWidth1M != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(AvgMktWidth1M);
      }
      if (AvgMktWidth10M != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(AvgMktWidth10M);
      }
      if (Counter != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(Counter);
      }
      if (QpSource != global::Spiderrock.Protobuf.QPSource.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) QpSource);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(168, 11);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(192, 11);
        output.WriteInt64(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        output.WriteRawTag(216, 11);
        output.WriteInt64(SmsTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(161, 6);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(208, 6);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(AskSize);
      }
      if (BidTakeProb != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(BidTakeProb);
      }
      if (AskTakeProb != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(AskTakeProb);
      }
      if (BidTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) BidTakeRv);
      }
      if (AskTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) AskTakeRv);
      }
      if (BidImprPrice != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(BidImprPrice);
      }
      if (AskImprPrice != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(AskImprPrice);
      }
      if (BidTkImProb != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(BidTkImProb);
      }
      if (AskTkImProb != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(AskTkImProb);
      }
      if (BidTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(192, 8);
        output.WriteEnum((int) BidTkImRv);
      }
      if (AskTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        output.WriteRawTag(216, 8);
        output.WriteEnum((int) AskTkImRv);
      }
      if (MidPrice != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(MidPrice);
      }
      if (AvgBidLink1M != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(AvgBidLink1M);
      }
      if (MaeBidLink1M != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(MaeBidLink1M);
      }
      if (AvgAskLink1M != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(AvgAskLink1M);
      }
      if (MaeAskLink1M != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(MaeAskLink1M);
      }
      if (AvgBidLink10M != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(AvgBidLink10M);
      }
      if (MaeBidLink10M != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(MaeBidLink10M);
      }
      if (AvgAskLink10M != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(AvgAskLink10M);
      }
      if (MaeAskLink10M != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(MaeAskLink10M);
      }
      if (AvgMktWidth1M != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(AvgMktWidth1M);
      }
      if (AvgMktWidth10M != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(AvgMktWidth10M);
      }
      if (Counter != 0) {
        output.WriteRawTag(248, 10);
        output.WriteInt32(Counter);
      }
      if (QpSource != global::Spiderrock.Protobuf.QPSource.Unspecified) {
        output.WriteRawTag(144, 11);
        output.WriteEnum((int) QpSource);
      }
      if (SrcTimestamp != 0L) {
        output.WriteRawTag(168, 11);
        output.WriteInt64(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(192, 11);
        output.WriteInt64(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        output.WriteRawTag(216, 11);
        output.WriteInt64(SmsTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (BidPrice != 0D) {
        size += 2 + 8;
      }
      if (AskPrice != 0D) {
        size += 2 + 8;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (BidTakeProb != 0F) {
        size += 2 + 4;
      }
      if (AskTakeProb != 0F) {
        size += 2 + 4;
      }
      if (BidTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BidTakeRv);
      }
      if (AskTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AskTakeRv);
      }
      if (BidImprPrice != 0F) {
        size += 2 + 4;
      }
      if (AskImprPrice != 0F) {
        size += 2 + 4;
      }
      if (BidTkImProb != 0F) {
        size += 2 + 4;
      }
      if (AskTkImProb != 0F) {
        size += 2 + 4;
      }
      if (BidTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BidTkImRv);
      }
      if (AskTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AskTkImRv);
      }
      if (MidPrice != 0D) {
        size += 2 + 8;
      }
      if (AvgBidLink1M != 0F) {
        size += 2 + 4;
      }
      if (MaeBidLink1M != 0F) {
        size += 2 + 4;
      }
      if (AvgAskLink1M != 0F) {
        size += 2 + 4;
      }
      if (MaeAskLink1M != 0F) {
        size += 2 + 4;
      }
      if (AvgBidLink10M != 0F) {
        size += 2 + 4;
      }
      if (MaeBidLink10M != 0F) {
        size += 2 + 4;
      }
      if (AvgAskLink10M != 0F) {
        size += 2 + 4;
      }
      if (MaeAskLink10M != 0F) {
        size += 2 + 4;
      }
      if (AvgMktWidth1M != 0F) {
        size += 2 + 4;
      }
      if (AvgMktWidth10M != 0F) {
        size += 2 + 4;
      }
      if (Counter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Counter);
      }
      if (QpSource != global::Spiderrock.Protobuf.QPSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) QpSource);
      }
      if (SrcTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SrcTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SmsTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FutureQuoteProbability other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.BidPrice != 0D) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0D) {
        AskPrice = other.AskPrice;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.BidTakeProb != 0F) {
        BidTakeProb = other.BidTakeProb;
      }
      if (other.AskTakeProb != 0F) {
        AskTakeProb = other.AskTakeProb;
      }
      if (other.BidTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        BidTakeRv = other.BidTakeRv;
      }
      if (other.AskTakeRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        AskTakeRv = other.AskTakeRv;
      }
      if (other.BidImprPrice != 0F) {
        BidImprPrice = other.BidImprPrice;
      }
      if (other.AskImprPrice != 0F) {
        AskImprPrice = other.AskImprPrice;
      }
      if (other.BidTkImProb != 0F) {
        BidTkImProb = other.BidTkImProb;
      }
      if (other.AskTkImProb != 0F) {
        AskTkImProb = other.AskTkImProb;
      }
      if (other.BidTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        BidTkImRv = other.BidTkImRv;
      }
      if (other.AskTkImRv != global::Spiderrock.Protobuf.PredictResult.Unspecified) {
        AskTkImRv = other.AskTkImRv;
      }
      if (other.MidPrice != 0D) {
        MidPrice = other.MidPrice;
      }
      if (other.AvgBidLink1M != 0F) {
        AvgBidLink1M = other.AvgBidLink1M;
      }
      if (other.MaeBidLink1M != 0F) {
        MaeBidLink1M = other.MaeBidLink1M;
      }
      if (other.AvgAskLink1M != 0F) {
        AvgAskLink1M = other.AvgAskLink1M;
      }
      if (other.MaeAskLink1M != 0F) {
        MaeAskLink1M = other.MaeAskLink1M;
      }
      if (other.AvgBidLink10M != 0F) {
        AvgBidLink10M = other.AvgBidLink10M;
      }
      if (other.MaeBidLink10M != 0F) {
        MaeBidLink10M = other.MaeBidLink10M;
      }
      if (other.AvgAskLink10M != 0F) {
        AvgAskLink10M = other.AvgAskLink10M;
      }
      if (other.MaeAskLink10M != 0F) {
        MaeAskLink10M = other.MaeAskLink10M;
      }
      if (other.AvgMktWidth1M != 0F) {
        AvgMktWidth1M = other.AvgMktWidth1M;
      }
      if (other.AvgMktWidth10M != 0F) {
        AvgMktWidth10M = other.AvgMktWidth10M;
      }
      if (other.Counter != 0) {
        Counter = other.Counter;
      }
      if (other.QpSource != global::Spiderrock.Protobuf.QPSource.Unspecified) {
        QpSource = other.QpSource;
      }
      if (other.SrcTimestamp != 0L) {
        SrcTimestamp = other.SrcTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.SmsTimestamp != 0L) {
        SmsTimestamp = other.SmsTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 801: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 825: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 848: {
            BidSize = input.ReadInt32();
            break;
          }
          case 872: {
            AskSize = input.ReadInt32();
            break;
          }
          case 901: {
            BidTakeProb = input.ReadFloat();
            break;
          }
          case 925: {
            AskTakeProb = input.ReadFloat();
            break;
          }
          case 944: {
            BidTakeRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 968: {
            AskTakeRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 997: {
            BidImprPrice = input.ReadFloat();
            break;
          }
          case 1021: {
            AskImprPrice = input.ReadFloat();
            break;
          }
          case 1045: {
            BidTkImProb = input.ReadFloat();
            break;
          }
          case 1069: {
            AskTkImProb = input.ReadFloat();
            break;
          }
          case 1088: {
            BidTkImRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 1112: {
            AskTkImRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 1137: {
            MidPrice = input.ReadDouble();
            break;
          }
          case 1165: {
            AvgBidLink1M = input.ReadFloat();
            break;
          }
          case 1189: {
            MaeBidLink1M = input.ReadFloat();
            break;
          }
          case 1213: {
            AvgAskLink1M = input.ReadFloat();
            break;
          }
          case 1237: {
            MaeAskLink1M = input.ReadFloat();
            break;
          }
          case 1261: {
            AvgBidLink10M = input.ReadFloat();
            break;
          }
          case 1285: {
            MaeBidLink10M = input.ReadFloat();
            break;
          }
          case 1309: {
            AvgAskLink10M = input.ReadFloat();
            break;
          }
          case 1333: {
            MaeAskLink10M = input.ReadFloat();
            break;
          }
          case 1357: {
            AvgMktWidth1M = input.ReadFloat();
            break;
          }
          case 1381: {
            AvgMktWidth10M = input.ReadFloat();
            break;
          }
          case 1400: {
            Counter = input.ReadInt32();
            break;
          }
          case 1424: {
            QpSource = (global::Spiderrock.Protobuf.QPSource) input.ReadEnum();
            break;
          }
          case 1448: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1472: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1496: {
            SmsTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureQuoteProbability.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 801: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 825: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 848: {
            BidSize = input.ReadInt32();
            break;
          }
          case 872: {
            AskSize = input.ReadInt32();
            break;
          }
          case 901: {
            BidTakeProb = input.ReadFloat();
            break;
          }
          case 925: {
            AskTakeProb = input.ReadFloat();
            break;
          }
          case 944: {
            BidTakeRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 968: {
            AskTakeRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 997: {
            BidImprPrice = input.ReadFloat();
            break;
          }
          case 1021: {
            AskImprPrice = input.ReadFloat();
            break;
          }
          case 1045: {
            BidTkImProb = input.ReadFloat();
            break;
          }
          case 1069: {
            AskTkImProb = input.ReadFloat();
            break;
          }
          case 1088: {
            BidTkImRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 1112: {
            AskTkImRv = (global::Spiderrock.Protobuf.PredictResult) input.ReadEnum();
            break;
          }
          case 1137: {
            MidPrice = input.ReadDouble();
            break;
          }
          case 1165: {
            AvgBidLink1M = input.ReadFloat();
            break;
          }
          case 1189: {
            MaeBidLink1M = input.ReadFloat();
            break;
          }
          case 1213: {
            AvgAskLink1M = input.ReadFloat();
            break;
          }
          case 1237: {
            MaeAskLink1M = input.ReadFloat();
            break;
          }
          case 1261: {
            AvgBidLink10M = input.ReadFloat();
            break;
          }
          case 1285: {
            MaeBidLink10M = input.ReadFloat();
            break;
          }
          case 1309: {
            AvgAskLink10M = input.ReadFloat();
            break;
          }
          case 1333: {
            MaeAskLink10M = input.ReadFloat();
            break;
          }
          case 1357: {
            AvgMktWidth1M = input.ReadFloat();
            break;
          }
          case 1381: {
            AvgMktWidth10M = input.ReadFloat();
            break;
          }
          case 1400: {
            Counter = input.ReadInt32();
            break;
          }
          case 1424: {
            QpSource = (global::Spiderrock.Protobuf.QPSource) input.ReadEnum();
            break;
          }
          case 1448: {
            SrcTimestamp = input.ReadInt64();
            break;
          }
          case 1472: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1496: {
            SmsTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FutureQuoteProbability message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.FutureQuoteProbability.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          fkey_ = other.fkey_ != null ? other.fkey_.Clone() : null;
          stateModel_ = other.stateModel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "fkey" field.</summary>
        public const int FkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey fkey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Fkey {
          get { return fkey_; }
          set {
            fkey_ = value;
          }
        }

        /// <summary>Field number for the "state_model" field.</summary>
        public const int StateModelFieldNumber = 11;
        private global::Spiderrock.Protobuf.StateModel stateModel_ = global::Spiderrock.Protobuf.StateModel.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.StateModel StateModel {
          get { return stateModel_; }
          set {
            stateModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fkey, other.Fkey)) return false;
          if (StateModel != other.StateModel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (fkey_ != null) hash ^= Fkey.GetHashCode();
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) hash ^= StateModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) StateModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) StateModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (fkey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StateModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.fkey_ != null) {
            if (fkey_ == null) {
              Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Fkey.MergeFrom(other.Fkey);
          }
          if (other.StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            StateModel = other.StateModel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                StateModel = (global::Spiderrock.Protobuf.StateModel) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                StateModel = (global::Spiderrock.Protobuf.StateModel) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
