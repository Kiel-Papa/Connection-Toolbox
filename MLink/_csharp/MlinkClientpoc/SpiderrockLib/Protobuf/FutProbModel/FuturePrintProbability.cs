// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/FutProbModel/FuturePrintProbability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/FutProbModel/FuturePrintProbability.proto</summary>
  public static partial class FuturePrintProbabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/FutProbModel/FuturePrintProbability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FuturePrintProbabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJQcm90b2J1Zi9GdXRQcm9iTW9kZWwvRnV0dXJlUHJpbnRQcm9iYWJpbGl0",
            "eS5wcm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21t",
            "b24ucHJvdG8izAUKFkZ1dHVyZVByaW50UHJvYmFiaWxpdHkSMwoFX21ldGEY",
            "ASABKAsyJC5zcGlkZXJyb2NrLnByb3RvYnVmLk1lc3NhZ2VNZXRhZGF0YRI+",
            "CgRwa2V5GAIgASgLMjAuc3BpZGVycm9jay5wcm90b2J1Zi5GdXR1cmVQcmlu",
            "dFByb2JhYmlsaXR5LlBLZXkSEQoJcHJ0X3ByaWNlGGQgASgBEhAKCHBydF9z",
            "aXplGGcgASgFEhAKCHBydF9wcm9iGGogASgCEi4KCHBydF9zaWRlGG0gASgO",
            "Mhwuc3BpZGVycm9jay5wcm90b2J1Zi5CdXlTZWxsEhEKCWJpZF9wcmljZRhw",
            "IAEoARIRCglhc2tfcHJpY2UYcyABKAESEAoIYmlkX3NpemUYdiABKAUSEAoI",
            "YXNrX3NpemUYeSABKAUSEwoLYXZnX2JMaW5rMW0YfCABKAISEwoLbWFlX2JM",
            "aW5rMW0YfyABKAISFAoLYXZnX3NMaW5rMW0YggEgASgCEhQKC21hZV9zTGlu",
            "azFtGIUBIAEoAhIVCgxhdmdfYkxpbmsxMG0YiAEgASgCEhUKDG1hZV9iTGlu",
            "azEwbRiLASABKAISFQoMYXZnX3NMaW5rMTBtGI4BIAEoAhIVCgxtYWVfc0xp",
            "bmsxMG0YkQEgASgCEhIKCWJfY291bnRlchiUASABKAUSEgoJc19jb3VudGVy",
            "GJcBIAEoBRIWCg1wcnRfdGltZXN0YW1wGJoBIAEoAxIWCg1uZXRfdGltZXN0",
            "YW1wGJ0BIAEoAxIWCg1zbXNfdGltZXN0YW1wGKABIAEoAxpqCgRQS2V5EiwK",
            "BGZrZXkYCiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLkV4cGlyeUtleRI0",
            "CgtzdGF0ZV9tb2RlbBgLIAEoDjIfLnNwaWRlcnJvY2sucHJvdG9idWYuU3Rh",
            "dGVNb2RlbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FuturePrintProbability), global::Spiderrock.Protobuf.FuturePrintProbability.Parser, new[]{ "Meta", "Pkey", "PrtPrice", "PrtSize", "PrtProb", "PrtSide", "BidPrice", "AskPrice", "BidSize", "AskSize", "AvgBLink1M", "MaeBLink1M", "AvgSLink1M", "MaeSLink1M", "AvgBLink10M", "MaeBLink10M", "AvgSLink10M", "MaeSLink10M", "BCounter", "SCounter", "PrtTimestamp", "NetTimestamp", "SmsTimestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey), global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey.Parser, new[]{ "Fkey", "StateModel" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FuturePrintProbability : pb::IMessage<FuturePrintProbability>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FuturePrintProbability> _parser = new pb::MessageParser<FuturePrintProbability>(() => new FuturePrintProbability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FuturePrintProbability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.FuturePrintProbabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintProbability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintProbability(FuturePrintProbability other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      prtPrice_ = other.prtPrice_;
      prtSize_ = other.prtSize_;
      prtProb_ = other.prtProb_;
      prtSide_ = other.prtSide_;
      bidPrice_ = other.bidPrice_;
      askPrice_ = other.askPrice_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      avgBLink1M_ = other.avgBLink1M_;
      maeBLink1M_ = other.maeBLink1M_;
      avgSLink1M_ = other.avgSLink1M_;
      maeSLink1M_ = other.maeSLink1M_;
      avgBLink10M_ = other.avgBLink10M_;
      maeBLink10M_ = other.maeBLink10M_;
      avgSLink10M_ = other.avgSLink10M_;
      maeSLink10M_ = other.maeSLink10M_;
      bCounter_ = other.bCounter_;
      sCounter_ = other.sCounter_;
      prtTimestamp_ = other.prtTimestamp_;
      netTimestamp_ = other.netTimestamp_;
      smsTimestamp_ = other.smsTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuturePrintProbability Clone() {
      return new FuturePrintProbability(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "prt_price" field.</summary>
    public const int PrtPriceFieldNumber = 100;
    private double prtPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtPrice {
      get { return prtPrice_; }
      set {
        prtPrice_ = value;
      }
    }

    /// <summary>Field number for the "prt_size" field.</summary>
    public const int PrtSizeFieldNumber = 103;
    private int prtSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtSize {
      get { return prtSize_; }
      set {
        prtSize_ = value;
      }
    }

    /// <summary>Field number for the "prt_prob" field.</summary>
    public const int PrtProbFieldNumber = 106;
    private float prtProb_;
    /// <summary>
    /// probability that this print will result in positive PnL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrtProb {
      get { return prtProb_; }
      set {
        prtProb_ = value;
      }
    }

    /// <summary>Field number for the "prt_side" field.</summary>
    public const int PrtSideFieldNumber = 109;
    private global::Spiderrock.Protobuf.BuySell prtSide_ = global::Spiderrock.Protobuf.BuySell.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.BuySell PrtSide {
      get { return prtSide_; }
      set {
        prtSide_ = value;
      }
    }

    /// <summary>Field number for the "bid_price" field.</summary>
    public const int BidPriceFieldNumber = 112;
    private double bidPrice_;
    /// <summary>
    /// nbbo bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPrice {
      get { return bidPrice_; }
      set {
        bidPrice_ = value;
      }
    }

    /// <summary>Field number for the "ask_price" field.</summary>
    public const int AskPriceFieldNumber = 115;
    private double askPrice_;
    /// <summary>
    /// nbbo ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPrice {
      get { return askPrice_; }
      set {
        askPrice_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 118;
    private int bidSize_;
    /// <summary>
    /// cumulative size @ bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 121;
    private int askSize_;
    /// <summary>
    /// cumulative size @ ask price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "avg_bLink1m" field.</summary>
    public const int AvgBLink1MFieldNumber = 124;
    private float avgBLink1M_;
    /// <summary>
    /// average buy link value (trailing 10)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgBLink1M {
      get { return avgBLink1M_; }
      set {
        avgBLink1M_ = value;
      }
    }

    /// <summary>Field number for the "mae_bLink1m" field.</summary>
    public const int MaeBLink1MFieldNumber = 127;
    private float maeBLink1M_;
    /// <summary>
    /// buy link value mean abs err (trailing 1000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeBLink1M {
      get { return maeBLink1M_; }
      set {
        maeBLink1M_ = value;
      }
    }

    /// <summary>Field number for the "avg_sLink1m" field.</summary>
    public const int AvgSLink1MFieldNumber = 130;
    private float avgSLink1M_;
    /// <summary>
    /// average sell link value (trailing 10)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgSLink1M {
      get { return avgSLink1M_; }
      set {
        avgSLink1M_ = value;
      }
    }

    /// <summary>Field number for the "mae_sLink1m" field.</summary>
    public const int MaeSLink1MFieldNumber = 133;
    private float maeSLink1M_;
    /// <summary>
    /// sell link value mean abs err (trailing 1000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeSLink1M {
      get { return maeSLink1M_; }
      set {
        maeSLink1M_ = value;
      }
    }

    /// <summary>Field number for the "avg_bLink10m" field.</summary>
    public const int AvgBLink10MFieldNumber = 136;
    private float avgBLink10M_;
    /// <summary>
    /// average buy link value (trailing 100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgBLink10M {
      get { return avgBLink10M_; }
      set {
        avgBLink10M_ = value;
      }
    }

    /// <summary>Field number for the "mae_bLink10m" field.</summary>
    public const int MaeBLink10MFieldNumber = 139;
    private float maeBLink10M_;
    /// <summary>
    /// bid link value mean abs err (trailing 1000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeBLink10M {
      get { return maeBLink10M_; }
      set {
        maeBLink10M_ = value;
      }
    }

    /// <summary>Field number for the "avg_sLink10m" field.</summary>
    public const int AvgSLink10MFieldNumber = 142;
    private float avgSLink10M_;
    /// <summary>
    /// average ask link value (trailing 100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AvgSLink10M {
      get { return avgSLink10M_; }
      set {
        avgSLink10M_ = value;
      }
    }

    /// <summary>Field number for the "mae_sLink10m" field.</summary>
    public const int MaeSLink10MFieldNumber = 145;
    private float maeSLink10M_;
    /// <summary>
    /// ask link value mean abs err (trailing 1000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaeSLink10M {
      get { return maeSLink10M_; }
      set {
        maeSLink10M_ = value;
      }
    }

    /// <summary>Field number for the "b_counter" field.</summary>
    public const int BCounterFieldNumber = 148;
    private int bCounter_;
    /// <summary>
    /// buy counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BCounter {
      get { return bCounter_; }
      set {
        bCounter_ = value;
      }
    }

    /// <summary>Field number for the "s_counter" field.</summary>
    public const int SCounterFieldNumber = 151;
    private int sCounter_;
    /// <summary>
    /// sell counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SCounter {
      get { return sCounter_; }
      set {
        sCounter_ = value;
      }
    }

    /// <summary>Field number for the "prt_timestamp" field.</summary>
    public const int PrtTimestampFieldNumber = 154;
    private long prtTimestamp_;
    /// <summary>
    /// feed timestamp from the packet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PrtTimestamp {
      get { return prtTimestamp_; }
      set {
        prtTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "net_timestamp" field.</summary>
    public const int NetTimestampFieldNumber = 157;
    private long netTimestamp_;
    /// <summary>
    /// inbound packet PTP timestamp from SR gateway switch (from FuturePrint)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NetTimestamp {
      get { return netTimestamp_; }
      set {
        netTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sms_timestamp" field.</summary>
    public const int SmsTimestampFieldNumber = 160;
    private long smsTimestamp_;
    /// <summary>
    /// state model server timestamp (just before publish)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SmsTimestamp {
      get { return smsTimestamp_; }
      set {
        smsTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FuturePrintProbability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FuturePrintProbability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtPrice, other.PrtPrice)) return false;
      if (PrtSize != other.PrtSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrtProb, other.PrtProb)) return false;
      if (PrtSide != other.PrtSide) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPrice, other.BidPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPrice, other.AskPrice)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgBLink1M, other.AvgBLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeBLink1M, other.MaeBLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgSLink1M, other.AvgSLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeSLink1M, other.MaeSLink1M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgBLink10M, other.AvgBLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeBLink10M, other.MaeBLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgSLink10M, other.AvgSLink10M)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaeSLink10M, other.MaeSLink10M)) return false;
      if (BCounter != other.BCounter) return false;
      if (SCounter != other.SCounter) return false;
      if (PrtTimestamp != other.PrtTimestamp) return false;
      if (NetTimestamp != other.NetTimestamp) return false;
      if (SmsTimestamp != other.SmsTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (PrtPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtPrice);
      if (PrtSize != 0) hash ^= PrtSize.GetHashCode();
      if (PrtProb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrtProb);
      if (PrtSide != global::Spiderrock.Protobuf.BuySell.Unspecified) hash ^= PrtSide.GetHashCode();
      if (BidPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPrice);
      if (AskPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPrice);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (AvgBLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgBLink1M);
      if (MaeBLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeBLink1M);
      if (AvgSLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgSLink1M);
      if (MaeSLink1M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeSLink1M);
      if (AvgBLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgBLink10M);
      if (MaeBLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeBLink10M);
      if (AvgSLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgSLink10M);
      if (MaeSLink10M != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaeSLink10M);
      if (BCounter != 0) hash ^= BCounter.GetHashCode();
      if (SCounter != 0) hash ^= SCounter.GetHashCode();
      if (PrtTimestamp != 0L) hash ^= PrtTimestamp.GetHashCode();
      if (NetTimestamp != 0L) hash ^= NetTimestamp.GetHashCode();
      if (SmsTimestamp != 0L) hash ^= SmsTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(161, 6);
        output.WriteDouble(PrtPrice);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtProb != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PrtProb);
      }
      if (PrtSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) PrtSide);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(AskSize);
      }
      if (AvgBLink1M != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(AvgBLink1M);
      }
      if (MaeBLink1M != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(MaeBLink1M);
      }
      if (AvgSLink1M != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(AvgSLink1M);
      }
      if (MaeSLink1M != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(MaeSLink1M);
      }
      if (AvgBLink10M != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(AvgBLink10M);
      }
      if (MaeBLink10M != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaeBLink10M);
      }
      if (AvgSLink10M != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AvgSLink10M);
      }
      if (MaeSLink10M != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(MaeSLink10M);
      }
      if (BCounter != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BCounter);
      }
      if (SCounter != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(SCounter);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(208, 9);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(SmsTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (PrtPrice != 0D) {
        output.WriteRawTag(161, 6);
        output.WriteDouble(PrtPrice);
      }
      if (PrtSize != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(PrtSize);
      }
      if (PrtProb != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PrtProb);
      }
      if (PrtSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        output.WriteRawTag(232, 6);
        output.WriteEnum((int) PrtSide);
      }
      if (BidPrice != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(BidPrice);
      }
      if (AskPrice != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(AskPrice);
      }
      if (BidSize != 0) {
        output.WriteRawTag(176, 7);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(AskSize);
      }
      if (AvgBLink1M != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(AvgBLink1M);
      }
      if (MaeBLink1M != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(MaeBLink1M);
      }
      if (AvgSLink1M != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(AvgSLink1M);
      }
      if (MaeSLink1M != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(MaeSLink1M);
      }
      if (AvgBLink10M != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(AvgBLink10M);
      }
      if (MaeBLink10M != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(MaeBLink10M);
      }
      if (AvgSLink10M != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(AvgSLink10M);
      }
      if (MaeSLink10M != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(MaeSLink10M);
      }
      if (BCounter != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(BCounter);
      }
      if (SCounter != 0) {
        output.WriteRawTag(184, 9);
        output.WriteInt32(SCounter);
      }
      if (PrtTimestamp != 0L) {
        output.WriteRawTag(208, 9);
        output.WriteInt64(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        output.WriteRawTag(128, 10);
        output.WriteInt64(SmsTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (PrtPrice != 0D) {
        size += 2 + 8;
      }
      if (PrtSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtSize);
      }
      if (PrtProb != 0F) {
        size += 2 + 4;
      }
      if (PrtSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PrtSide);
      }
      if (BidPrice != 0D) {
        size += 2 + 8;
      }
      if (AskPrice != 0D) {
        size += 2 + 8;
      }
      if (BidSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (AvgBLink1M != 0F) {
        size += 2 + 4;
      }
      if (MaeBLink1M != 0F) {
        size += 2 + 4;
      }
      if (AvgSLink1M != 0F) {
        size += 2 + 4;
      }
      if (MaeSLink1M != 0F) {
        size += 2 + 4;
      }
      if (AvgBLink10M != 0F) {
        size += 2 + 4;
      }
      if (MaeBLink10M != 0F) {
        size += 2 + 4;
      }
      if (AvgSLink10M != 0F) {
        size += 2 + 4;
      }
      if (MaeSLink10M != 0F) {
        size += 2 + 4;
      }
      if (BCounter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BCounter);
      }
      if (SCounter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SCounter);
      }
      if (PrtTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PrtTimestamp);
      }
      if (NetTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NetTimestamp);
      }
      if (SmsTimestamp != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SmsTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FuturePrintProbability other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.PrtPrice != 0D) {
        PrtPrice = other.PrtPrice;
      }
      if (other.PrtSize != 0) {
        PrtSize = other.PrtSize;
      }
      if (other.PrtProb != 0F) {
        PrtProb = other.PrtProb;
      }
      if (other.PrtSide != global::Spiderrock.Protobuf.BuySell.Unspecified) {
        PrtSide = other.PrtSide;
      }
      if (other.BidPrice != 0D) {
        BidPrice = other.BidPrice;
      }
      if (other.AskPrice != 0D) {
        AskPrice = other.AskPrice;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.AvgBLink1M != 0F) {
        AvgBLink1M = other.AvgBLink1M;
      }
      if (other.MaeBLink1M != 0F) {
        MaeBLink1M = other.MaeBLink1M;
      }
      if (other.AvgSLink1M != 0F) {
        AvgSLink1M = other.AvgSLink1M;
      }
      if (other.MaeSLink1M != 0F) {
        MaeSLink1M = other.MaeSLink1M;
      }
      if (other.AvgBLink10M != 0F) {
        AvgBLink10M = other.AvgBLink10M;
      }
      if (other.MaeBLink10M != 0F) {
        MaeBLink10M = other.MaeBLink10M;
      }
      if (other.AvgSLink10M != 0F) {
        AvgSLink10M = other.AvgSLink10M;
      }
      if (other.MaeSLink10M != 0F) {
        MaeSLink10M = other.MaeSLink10M;
      }
      if (other.BCounter != 0) {
        BCounter = other.BCounter;
      }
      if (other.SCounter != 0) {
        SCounter = other.SCounter;
      }
      if (other.PrtTimestamp != 0L) {
        PrtTimestamp = other.PrtTimestamp;
      }
      if (other.NetTimestamp != 0L) {
        NetTimestamp = other.NetTimestamp;
      }
      if (other.SmsTimestamp != 0L) {
        SmsTimestamp = other.SmsTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 801: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 824: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 853: {
            PrtProb = input.ReadFloat();
            break;
          }
          case 872: {
            PrtSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 897: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 921: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 944: {
            BidSize = input.ReadInt32();
            break;
          }
          case 968: {
            AskSize = input.ReadInt32();
            break;
          }
          case 997: {
            AvgBLink1M = input.ReadFloat();
            break;
          }
          case 1021: {
            MaeBLink1M = input.ReadFloat();
            break;
          }
          case 1045: {
            AvgSLink1M = input.ReadFloat();
            break;
          }
          case 1069: {
            MaeSLink1M = input.ReadFloat();
            break;
          }
          case 1093: {
            AvgBLink10M = input.ReadFloat();
            break;
          }
          case 1117: {
            MaeBLink10M = input.ReadFloat();
            break;
          }
          case 1141: {
            AvgSLink10M = input.ReadFloat();
            break;
          }
          case 1165: {
            MaeSLink10M = input.ReadFloat();
            break;
          }
          case 1184: {
            BCounter = input.ReadInt32();
            break;
          }
          case 1208: {
            SCounter = input.ReadInt32();
            break;
          }
          case 1232: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1256: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1280: {
            SmsTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FuturePrintProbability.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 801: {
            PrtPrice = input.ReadDouble();
            break;
          }
          case 824: {
            PrtSize = input.ReadInt32();
            break;
          }
          case 853: {
            PrtProb = input.ReadFloat();
            break;
          }
          case 872: {
            PrtSide = (global::Spiderrock.Protobuf.BuySell) input.ReadEnum();
            break;
          }
          case 897: {
            BidPrice = input.ReadDouble();
            break;
          }
          case 921: {
            AskPrice = input.ReadDouble();
            break;
          }
          case 944: {
            BidSize = input.ReadInt32();
            break;
          }
          case 968: {
            AskSize = input.ReadInt32();
            break;
          }
          case 997: {
            AvgBLink1M = input.ReadFloat();
            break;
          }
          case 1021: {
            MaeBLink1M = input.ReadFloat();
            break;
          }
          case 1045: {
            AvgSLink1M = input.ReadFloat();
            break;
          }
          case 1069: {
            MaeSLink1M = input.ReadFloat();
            break;
          }
          case 1093: {
            AvgBLink10M = input.ReadFloat();
            break;
          }
          case 1117: {
            MaeBLink10M = input.ReadFloat();
            break;
          }
          case 1141: {
            AvgSLink10M = input.ReadFloat();
            break;
          }
          case 1165: {
            MaeSLink10M = input.ReadFloat();
            break;
          }
          case 1184: {
            BCounter = input.ReadInt32();
            break;
          }
          case 1208: {
            SCounter = input.ReadInt32();
            break;
          }
          case 1232: {
            PrtTimestamp = input.ReadInt64();
            break;
          }
          case 1256: {
            NetTimestamp = input.ReadInt64();
            break;
          }
          case 1280: {
            SmsTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FuturePrintProbability message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.FuturePrintProbability.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          fkey_ = other.fkey_ != null ? other.fkey_.Clone() : null;
          stateModel_ = other.stateModel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "fkey" field.</summary>
        public const int FkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey fkey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Fkey {
          get { return fkey_; }
          set {
            fkey_ = value;
          }
        }

        /// <summary>Field number for the "state_model" field.</summary>
        public const int StateModelFieldNumber = 11;
        private global::Spiderrock.Protobuf.StateModel stateModel_ = global::Spiderrock.Protobuf.StateModel.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.StateModel StateModel {
          get { return stateModel_; }
          set {
            stateModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fkey, other.Fkey)) return false;
          if (StateModel != other.StateModel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (fkey_ != null) hash ^= Fkey.GetHashCode();
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) hash ^= StateModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) StateModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) StateModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (fkey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fkey);
          }
          if (StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StateModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.fkey_ != null) {
            if (fkey_ == null) {
              Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Fkey.MergeFrom(other.Fkey);
          }
          if (other.StateModel != global::Spiderrock.Protobuf.StateModel.Unspecified) {
            StateModel = other.StateModel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                StateModel = (global::Spiderrock.Protobuf.StateModel) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
              case 88: {
                StateModel = (global::Spiderrock.Protobuf.StateModel) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
