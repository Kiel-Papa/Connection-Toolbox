// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/EqtSummaryData/StockMinuteBar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/EqtSummaryData/StockMinuteBar.proto</summary>
  public static partial class StockMinuteBarReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/EqtSummaryData/StockMinuteBar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockMinuteBarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixQcm90b2J1Zi9FcXRTdW1tYXJ5RGF0YS9TdG9ja01pbnV0ZUJhci5wcm90",
            "bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24ucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i+QQKDlN0b2Nr",
            "TWludXRlQmFyEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9jay5wcm90b2J1",
            "Zi5NZXNzYWdlTWV0YWRhdGESNgoEcGtleRgCIAEoCzIoLnNwaWRlcnJvY2su",
            "cHJvdG9idWYuU3RvY2tNaW51dGVCYXIuUEtleRIMCgRkYXRlGGQgASgJEgwK",
            "BHRpbWUYZyABKAkSEAoIcHJ0X29wZW4YaiABKAESEAoIcHJ0X2hpZ2gYbSAB",
            "KAESDwoHcHJ0X2xvdxhwIAEoARIQCghwcnRfbGFzdBhzIAEoARIQCghwcnRf",
            "dldhcBh2IAEoARISCgpwcnRfdm9sdW1lGHkgASgFEhEKCXBydF9jb3VudBh8",
            "IAEoBRISCgpxdGVfaGlfYmlkGH8gASgBEhMKCnF0ZV9sb19hc2sYggEgASgB",
            "EhEKCHF0ZV90d2FwGIUBIAEoARISCglxdGVfY291bnQYiAEgASgFEgwKA2Jp",
            "ZBiLASABKAESDAoDYXNrGI4BIAEoARIPCgZiaWRfc3oYkQEgASgFEg8KBmFz",
            "a19zehiUASABKAUSDgoFd2lkdGgYlwEgASgCEisKBmlzX2VPQhiaASABKA4y",
            "Gi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vEisKBmlzX2VPSBidASABKA4y",
            "Gi5zcGlkZXJyb2NrLnByb3RvYnVmLlllc05vEi4KCXRpbWVzdGFtcBigASAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGjYKBFBLZXkSLgoGdGlj",
            "a2VyGAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5UaWNrZXJLZXliBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockMinuteBar), global::Spiderrock.Protobuf.StockMinuteBar.Parser, new[]{ "Meta", "Pkey", "Date", "Time", "PrtOpen", "PrtHigh", "PrtLow", "PrtLast", "PrtVWap", "PrtVolume", "PrtCount", "QteHiBid", "QteLoAsk", "QteTwap", "QteCount", "Bid", "Ask", "BidSz", "AskSz", "Width", "IsEOB", "IsEOH", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey), global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey.Parser, new[]{ "Ticker" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///StockMinuteBar records are created once per minute for each open stock and index market.  These records are visible in SRSE and are published to the SpiderRock elastic cluster at the same time.
  /// </summary>
  public sealed partial class StockMinuteBar : pb::IMessage<StockMinuteBar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockMinuteBar> _parser = new pb::MessageParser<StockMinuteBar>(() => new StockMinuteBar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockMinuteBar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.StockMinuteBarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockMinuteBar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockMinuteBar(StockMinuteBar other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      date_ = other.date_;
      time_ = other.time_;
      prtOpen_ = other.prtOpen_;
      prtHigh_ = other.prtHigh_;
      prtLow_ = other.prtLow_;
      prtLast_ = other.prtLast_;
      prtVWap_ = other.prtVWap_;
      prtVolume_ = other.prtVolume_;
      prtCount_ = other.prtCount_;
      qteHiBid_ = other.qteHiBid_;
      qteLoAsk_ = other.qteLoAsk_;
      qteTwap_ = other.qteTwap_;
      qteCount_ = other.qteCount_;
      bid_ = other.bid_;
      ask_ = other.ask_;
      bidSz_ = other.bidSz_;
      askSz_ = other.askSz_;
      width_ = other.width_;
      isEOB_ = other.isEOB_;
      isEOH_ = other.isEOH_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockMinuteBar Clone() {
      return new StockMinuteBar(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 100;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 103;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prt_open" field.</summary>
    public const int PrtOpenFieldNumber = 106;
    private double prtOpen_;
    /// <summary>
    /// Open print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtOpen {
      get { return prtOpen_; }
      set {
        prtOpen_ = value;
      }
    }

    /// <summary>Field number for the "prt_high" field.</summary>
    public const int PrtHighFieldNumber = 109;
    private double prtHigh_;
    /// <summary>
    /// High print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtHigh {
      get { return prtHigh_; }
      set {
        prtHigh_ = value;
      }
    }

    /// <summary>Field number for the "prt_low" field.</summary>
    public const int PrtLowFieldNumber = 112;
    private double prtLow_;
    /// <summary>
    /// Low print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtLow {
      get { return prtLow_; }
      set {
        prtLow_ = value;
      }
    }

    /// <summary>Field number for the "prt_last" field.</summary>
    public const int PrtLastFieldNumber = 115;
    private double prtLast_;
    /// <summary>
    /// Last print
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtLast {
      get { return prtLast_; }
      set {
        prtLast_ = value;
      }
    }

    /// <summary>Field number for the "prt_vWap" field.</summary>
    public const int PrtVWapFieldNumber = 118;
    private double prtVWap_;
    /// <summary>
    /// VWap (print)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrtVWap {
      get { return prtVWap_; }
      set {
        prtVWap_ = value;
      }
    }

    /// <summary>Field number for the "prt_volume" field.</summary>
    public const int PrtVolumeFieldNumber = 121;
    private int prtVolume_;
    /// <summary>
    /// Print volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtVolume {
      get { return prtVolume_; }
      set {
        prtVolume_ = value;
      }
    }

    /// <summary>Field number for the "prt_count" field.</summary>
    public const int PrtCountFieldNumber = 124;
    private int prtCount_;
    /// <summary>
    /// Print count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrtCount {
      get { return prtCount_; }
      set {
        prtCount_ = value;
      }
    }

    /// <summary>Field number for the "qte_hi_bid" field.</summary>
    public const int QteHiBidFieldNumber = 127;
    private double qteHiBid_;
    /// <summary>
    /// Quote high bid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double QteHiBid {
      get { return qteHiBid_; }
      set {
        qteHiBid_ = value;
      }
    }

    /// <summary>Field number for the "qte_lo_ask" field.</summary>
    public const int QteLoAskFieldNumber = 130;
    private double qteLoAsk_;
    /// <summary>
    /// Quote low ask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double QteLoAsk {
      get { return qteLoAsk_; }
      set {
        qteLoAsk_ = value;
      }
    }

    /// <summary>Field number for the "qte_twap" field.</summary>
    public const int QteTwapFieldNumber = 133;
    private double qteTwap_;
    /// <summary>
    /// Quote TWap
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double QteTwap {
      get { return qteTwap_; }
      set {
        qteTwap_ = value;
      }
    }

    /// <summary>Field number for the "qte_count" field.</summary>
    public const int QteCountFieldNumber = 136;
    private int qteCount_;
    /// <summary>
    /// Quote count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int QteCount {
      get { return qteCount_; }
      set {
        qteCount_ = value;
      }
    }

    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 139;
    private double bid_;
    /// <summary>
    /// Bid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bid {
      get { return bid_; }
      set {
        bid_ = value;
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 142;
    private double ask_;
    /// <summary>
    /// Ask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ask {
      get { return ask_; }
      set {
        ask_ = value;
      }
    }

    /// <summary>Field number for the "bid_sz" field.</summary>
    public const int BidSzFieldNumber = 145;
    private int bidSz_;
    /// <summary>
    /// Bid size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSz {
      get { return bidSz_; }
      set {
        bidSz_ = value;
      }
    }

    /// <summary>Field number for the "ask_sz" field.</summary>
    public const int AskSzFieldNumber = 148;
    private int askSz_;
    /// <summary>
    /// Ask size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSz {
      get { return askSz_; }
      set {
        askSz_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 151;
    private float width_;
    /// <summary>
    /// Bid/ask spread
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "is_eOB" field.</summary>
    public const int IsEOBFieldNumber = 154;
    private global::Spiderrock.Protobuf.YesNo isEOB_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// is end-of-bar (every 10 minutes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsEOB {
      get { return isEOB_; }
      set {
        isEOB_ = value;
      }
    }

    /// <summary>Field number for the "is_eOH" field.</summary>
    public const int IsEOHFieldNumber = 157;
    private global::Spiderrock.Protobuf.YesNo isEOH_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    /// <summary>
    /// is end-of-hour
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo IsEOH {
      get { return isEOH_; }
      set {
        isEOH_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 160;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// same as date + time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockMinuteBar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockMinuteBar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (Date != other.Date) return false;
      if (Time != other.Time) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtOpen, other.PrtOpen)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtHigh, other.PrtHigh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtLow, other.PrtLow)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtLast, other.PrtLast)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrtVWap, other.PrtVWap)) return false;
      if (PrtVolume != other.PrtVolume) return false;
      if (PrtCount != other.PrtCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(QteHiBid, other.QteHiBid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(QteLoAsk, other.QteLoAsk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(QteTwap, other.QteTwap)) return false;
      if (QteCount != other.QteCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bid, other.Bid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ask, other.Ask)) return false;
      if (BidSz != other.BidSz) return false;
      if (AskSz != other.AskSz) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
      if (IsEOB != other.IsEOB) return false;
      if (IsEOH != other.IsEOH) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (PrtOpen != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtOpen);
      if (PrtHigh != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtHigh);
      if (PrtLow != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtLow);
      if (PrtLast != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtLast);
      if (PrtVWap != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrtVWap);
      if (PrtVolume != 0) hash ^= PrtVolume.GetHashCode();
      if (PrtCount != 0) hash ^= PrtCount.GetHashCode();
      if (QteHiBid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(QteHiBid);
      if (QteLoAsk != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(QteLoAsk);
      if (QteTwap != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(QteTwap);
      if (QteCount != 0) hash ^= QteCount.GetHashCode();
      if (Bid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bid);
      if (Ask != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ask);
      if (BidSz != 0) hash ^= BidSz.GetHashCode();
      if (AskSz != 0) hash ^= AskSz.GetHashCode();
      if (Width != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
      if (IsEOB != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsEOB.GetHashCode();
      if (IsEOH != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= IsEOH.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Date);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(Time);
      }
      if (PrtOpen != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(PrtOpen);
      }
      if (PrtHigh != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(PrtHigh);
      }
      if (PrtLow != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(PrtLow);
      }
      if (PrtLast != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(PrtLast);
      }
      if (PrtVWap != 0D) {
        output.WriteRawTag(177, 7);
        output.WriteDouble(PrtVWap);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtCount != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtCount);
      }
      if (QteHiBid != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(QteHiBid);
      }
      if (QteLoAsk != 0D) {
        output.WriteRawTag(145, 8);
        output.WriteDouble(QteLoAsk);
      }
      if (QteTwap != 0D) {
        output.WriteRawTag(169, 8);
        output.WriteDouble(QteTwap);
      }
      if (QteCount != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(QteCount);
      }
      if (Bid != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(Bid);
      }
      if (Ask != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(Ask);
      }
      if (BidSz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(BidSz);
      }
      if (AskSz != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(AskSz);
      }
      if (Width != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Width);
      }
      if (IsEOB != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 9);
        output.WriteEnum((int) IsEOB);
      }
      if (IsEOH != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(232, 9);
        output.WriteEnum((int) IsEOH);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Date);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(Time);
      }
      if (PrtOpen != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(PrtOpen);
      }
      if (PrtHigh != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(PrtHigh);
      }
      if (PrtLow != 0D) {
        output.WriteRawTag(129, 7);
        output.WriteDouble(PrtLow);
      }
      if (PrtLast != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(PrtLast);
      }
      if (PrtVWap != 0D) {
        output.WriteRawTag(177, 7);
        output.WriteDouble(PrtVWap);
      }
      if (PrtVolume != 0) {
        output.WriteRawTag(200, 7);
        output.WriteInt32(PrtVolume);
      }
      if (PrtCount != 0) {
        output.WriteRawTag(224, 7);
        output.WriteInt32(PrtCount);
      }
      if (QteHiBid != 0D) {
        output.WriteRawTag(249, 7);
        output.WriteDouble(QteHiBid);
      }
      if (QteLoAsk != 0D) {
        output.WriteRawTag(145, 8);
        output.WriteDouble(QteLoAsk);
      }
      if (QteTwap != 0D) {
        output.WriteRawTag(169, 8);
        output.WriteDouble(QteTwap);
      }
      if (QteCount != 0) {
        output.WriteRawTag(192, 8);
        output.WriteInt32(QteCount);
      }
      if (Bid != 0D) {
        output.WriteRawTag(217, 8);
        output.WriteDouble(Bid);
      }
      if (Ask != 0D) {
        output.WriteRawTag(241, 8);
        output.WriteDouble(Ask);
      }
      if (BidSz != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(BidSz);
      }
      if (AskSz != 0) {
        output.WriteRawTag(160, 9);
        output.WriteInt32(AskSz);
      }
      if (Width != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(Width);
      }
      if (IsEOB != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(208, 9);
        output.WriteEnum((int) IsEOB);
      }
      if (IsEOH != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(232, 9);
        output.WriteEnum((int) IsEOH);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(130, 10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (Date.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Time.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (PrtOpen != 0D) {
        size += 2 + 8;
      }
      if (PrtHigh != 0D) {
        size += 2 + 8;
      }
      if (PrtLow != 0D) {
        size += 2 + 8;
      }
      if (PrtLast != 0D) {
        size += 2 + 8;
      }
      if (PrtVWap != 0D) {
        size += 2 + 8;
      }
      if (PrtVolume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtVolume);
      }
      if (PrtCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrtCount);
      }
      if (QteHiBid != 0D) {
        size += 2 + 8;
      }
      if (QteLoAsk != 0D) {
        size += 2 + 8;
      }
      if (QteTwap != 0D) {
        size += 2 + 8;
      }
      if (QteCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(QteCount);
      }
      if (Bid != 0D) {
        size += 2 + 8;
      }
      if (Ask != 0D) {
        size += 2 + 8;
      }
      if (BidSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BidSz);
      }
      if (AskSz != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AskSz);
      }
      if (Width != 0F) {
        size += 2 + 4;
      }
      if (IsEOB != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsEOB);
      }
      if (IsEOH != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IsEOH);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockMinuteBar other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.PrtOpen != 0D) {
        PrtOpen = other.PrtOpen;
      }
      if (other.PrtHigh != 0D) {
        PrtHigh = other.PrtHigh;
      }
      if (other.PrtLow != 0D) {
        PrtLow = other.PrtLow;
      }
      if (other.PrtLast != 0D) {
        PrtLast = other.PrtLast;
      }
      if (other.PrtVWap != 0D) {
        PrtVWap = other.PrtVWap;
      }
      if (other.PrtVolume != 0) {
        PrtVolume = other.PrtVolume;
      }
      if (other.PrtCount != 0) {
        PrtCount = other.PrtCount;
      }
      if (other.QteHiBid != 0D) {
        QteHiBid = other.QteHiBid;
      }
      if (other.QteLoAsk != 0D) {
        QteLoAsk = other.QteLoAsk;
      }
      if (other.QteTwap != 0D) {
        QteTwap = other.QteTwap;
      }
      if (other.QteCount != 0) {
        QteCount = other.QteCount;
      }
      if (other.Bid != 0D) {
        Bid = other.Bid;
      }
      if (other.Ask != 0D) {
        Ask = other.Ask;
      }
      if (other.BidSz != 0) {
        BidSz = other.BidSz;
      }
      if (other.AskSz != 0) {
        AskSz = other.AskSz;
      }
      if (other.Width != 0F) {
        Width = other.Width;
      }
      if (other.IsEOB != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsEOB = other.IsEOB;
      }
      if (other.IsEOH != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        IsEOH = other.IsEOH;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            Date = input.ReadString();
            break;
          }
          case 826: {
            Time = input.ReadString();
            break;
          }
          case 849: {
            PrtOpen = input.ReadDouble();
            break;
          }
          case 873: {
            PrtHigh = input.ReadDouble();
            break;
          }
          case 897: {
            PrtLow = input.ReadDouble();
            break;
          }
          case 921: {
            PrtLast = input.ReadDouble();
            break;
          }
          case 945: {
            PrtVWap = input.ReadDouble();
            break;
          }
          case 968: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 992: {
            PrtCount = input.ReadInt32();
            break;
          }
          case 1017: {
            QteHiBid = input.ReadDouble();
            break;
          }
          case 1041: {
            QteLoAsk = input.ReadDouble();
            break;
          }
          case 1065: {
            QteTwap = input.ReadDouble();
            break;
          }
          case 1088: {
            QteCount = input.ReadInt32();
            break;
          }
          case 1113: {
            Bid = input.ReadDouble();
            break;
          }
          case 1137: {
            Ask = input.ReadDouble();
            break;
          }
          case 1160: {
            BidSz = input.ReadInt32();
            break;
          }
          case 1184: {
            AskSz = input.ReadInt32();
            break;
          }
          case 1213: {
            Width = input.ReadFloat();
            break;
          }
          case 1232: {
            IsEOB = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1256: {
            IsEOH = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1282: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.StockMinuteBar.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            Date = input.ReadString();
            break;
          }
          case 826: {
            Time = input.ReadString();
            break;
          }
          case 849: {
            PrtOpen = input.ReadDouble();
            break;
          }
          case 873: {
            PrtHigh = input.ReadDouble();
            break;
          }
          case 897: {
            PrtLow = input.ReadDouble();
            break;
          }
          case 921: {
            PrtLast = input.ReadDouble();
            break;
          }
          case 945: {
            PrtVWap = input.ReadDouble();
            break;
          }
          case 968: {
            PrtVolume = input.ReadInt32();
            break;
          }
          case 992: {
            PrtCount = input.ReadInt32();
            break;
          }
          case 1017: {
            QteHiBid = input.ReadDouble();
            break;
          }
          case 1041: {
            QteLoAsk = input.ReadDouble();
            break;
          }
          case 1065: {
            QteTwap = input.ReadDouble();
            break;
          }
          case 1088: {
            QteCount = input.ReadInt32();
            break;
          }
          case 1113: {
            Bid = input.ReadDouble();
            break;
          }
          case 1137: {
            Ask = input.ReadDouble();
            break;
          }
          case 1160: {
            BidSz = input.ReadInt32();
            break;
          }
          case 1184: {
            AskSz = input.ReadInt32();
            break;
          }
          case 1213: {
            Width = input.ReadFloat();
            break;
          }
          case 1232: {
            IsEOB = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1256: {
            IsEOH = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 1282: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StockMinuteBar message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.StockMinuteBar.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
