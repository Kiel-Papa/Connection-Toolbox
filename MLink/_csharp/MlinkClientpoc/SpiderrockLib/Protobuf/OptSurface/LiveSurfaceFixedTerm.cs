// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptSurface/LiveSurfaceFixedTerm.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptSurface/LiveSurfaceFixedTerm.proto</summary>
  public static partial class LiveSurfaceFixedTermReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptSurface/LiveSurfaceFixedTerm.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LiveSurfaceFixedTermReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5Qcm90b2J1Zi9PcHRTdXJmYWNlL0xpdmVTdXJmYWNlRml4ZWRUZXJtLnBy",
            "b3RvEhNzcGlkZXJyb2NrLnByb3RvYnVmGhdzcGlkZXJyb2NrX2NvbW1vbi5w",
            "cm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvIuEXChRMaXZlU3VyZmFjZUZpeGVk",
            "VGVybRIzCgVfbWV0YRgBIAEoCzIkLnNwaWRlcnJvY2sucHJvdG9idWYuTWVz",
            "c2FnZU1ldGFkYXRhEjwKBHBrZXkYAiABKAsyLi5zcGlkZXJyb2NrLnByb3Rv",
            "YnVmLkxpdmVTdXJmYWNlRml4ZWRUZXJtLlBLZXkSDwoHaF9lTW92ZRhkIAEo",
            "AhITCgtoX2VNb3ZlX251bRhnIAEoBRITCgtoX2VNb3ZlX2F2ZxhqIAEoAhIT",
            "CgtoX2VNb3ZlX3N0ZBhtIAEoAhITCgtoX2VNb3ZlX21pbhhwIAEoAhITCgto",
            "X2VNb3ZlX21heBhzIAEoAhIPCgdpX2VNb3ZlGHYgASgCEjIKC2lfZUZpdF9j",
            "b2RlGHkgASgOMh0uc3BpZGVycm9jay5wcm90b2J1Zi5FRml0Q29kZRIUCgxp",
            "X2VGaXRfZXJyb3IYfCABKAISFAoMZXhwaXJ5X2NvdW50GH8gASgFEhQKC2lf",
            "ZU1vdmVfYXZnGIIBIAEoAhIUCgtpX2VNb3ZlX3N0ZBiFASABKAISFAoLaV9l",
            "TW92ZV9taW4YiAEgASgCEhQKC2lfZU1vdmVfbWF4GIsBIAEoAhIUCgtpX2VN",
            "b3ZlX2NudBiOASABKAUSGAoPZV9tb3ZlX2V4cF9hZGoxGJEBIAEoBRIYCg9l",
            "X21vdmVfeXJzX2FkajEYlAEgASgCEhYKDWVfbW92ZV95ZWFyczEYlwEgASgC",
            "EjUKDGVfbW92ZV9lS2V5MRiaASABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "LkV4cGlyeUtleRIYCg9lX21vdmVfZXhwX2FkajIYnQEgASgFEhgKD2VfbW92",
            "ZV95cnNfYWRqMhigASABKAISFgoNZV9tb3ZlX3llYXJzMhijASABKAISNQoM",
            "ZV9tb3ZlX2VLZXkyGKYBIAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuRXhw",
            "aXJ5S2V5EhUKDGF0bV9jZW5faV9zdBipASABKAISFQoMYXRtX2Nlbl9pX2x0",
            "GKwBIAEoAhIYCg9hdG1fY2VuX2lfZGVjYXkYrwEgASgCEhUKDGF0bV9jZW5f",
            "aV81ZBiyASABKAISFgoNYXRtX2Nlbl9pXzEwZBi1ASABKAISFgoNYXRtX2Nl",
            "bl9pXzIxZBi4ASABKAISFgoNYXRtX2Nlbl9pXzQyZBi7ASABKAISFgoNYXRt",
            "X2Nlbl9pXzYzZBi+ASABKAISFgoNYXRtX2Nlbl9pXzg0ZBjBASABKAISFwoO",
            "YXRtX2Nlbl9pXzEwNWQYxAEgASgCEhcKDmF0bV9jZW5faV8xMjZkGMcBIAEo",
            "AhIXCg5hdG1fY2VuX2lfMTg5ZBjKASABKAISFwoOYXRtX2Nlbl9pXzI1MmQY",
            "zQEgASgCEhcKDmF0bV9jZW5faV8zNzhkGNABIAEoAhIXCg5hdG1fY2VuX2lf",
            "NTA0ZBjTASABKAISFQoMYXRtX2Nlbl9oX3N0GNYBIAEoAhIVCgxhdG1fY2Vu",
            "X2hfbHQY2QEgASgCEhgKD2F0bV9jZW5faF9kZWNheRjcASABKAISFQoMYXRt",
            "X2Nlbl9oXzVkGN8BIAEoAhIWCg1hdG1fY2VuX2hfMTBkGOIBIAEoAhIWCg1h",
            "dG1fY2VuX2hfMjFkGOUBIAEoAhIWCg1hdG1fY2VuX2hfNDJkGOgBIAEoAhIW",
            "Cg1hdG1fY2VuX2hfNjNkGOsBIAEoAhIWCg1hdG1fY2VuX2hfODRkGO4BIAEo",
            "AhIXCg5hdG1fY2VuX2hfMTA1ZBjxASABKAISFwoOYXRtX2Nlbl9oXzEyNmQY",
            "9AEgASgCEhcKDmF0bV9jZW5faF8xODlkGPcBIAEoAhIXCg5hdG1fY2VuX2hf",
            "MjUyZBj6ASABKAISFwoOYXRtX2Nlbl9oXzM3OGQY/QEgASgCEhcKDmF0bV9j",
            "ZW5faF81MDRkGIACIAEoAhIRCghzX2Rpdl81ZBiDAiABKAISEgoJc19kaXZf",
            "MTBkGIYCIAEoAhISCglzX2Rpdl8yMWQYiQIgASgCEhIKCXNfZGl2XzQyZBiM",
            "AiABKAISEgoJc19kaXZfNjNkGI8CIAEoAhISCglzX2Rpdl84NGQYkgIgASgC",
            "EhMKCnNfZGl2XzEwNWQYlQIgASgCEhMKCnNfZGl2XzEyNmQYmAIgASgCEhMK",
            "CnNfZGl2XzE4OWQYmwIgASgCEhMKCnNfZGl2XzI1MmQYngIgASgCEhMKCnNf",
            "ZGl2XzM3OGQYoQIgASgCEhMKCnNfZGl2XzUwNGQYpAIgASgCEhQKC2Z3ZF91",
            "UHJjXzVkGKcCIAEoAhIVCgxmd2RfdVByY18xMGQYqgIgASgCEhUKDGZ3ZF91",
            "UHJjXzIxZBitAiABKAISFQoMZndkX3VQcmNfNDJkGLACIAEoAhIVCgxmd2Rf",
            "dVByY182M2QYswIgASgCEhUKDGZ3ZF91UHJjXzg0ZBi2AiABKAISFgoNZndk",
            "X3VQcmNfMTA1ZBi5AiABKAISFgoNZndkX3VQcmNfMTI2ZBi8AiABKAISFgoN",
            "ZndkX3VQcmNfMTg5ZBi/AiABKAISFgoNZndkX3VQcmNfMjUyZBjCAiABKAIS",
            "FgoNZndkX3VQcmNfMzc4ZBjFAiABKAISFgoNZndkX3VQcmNfNTA0ZBjIAiAB",
            "KAISEwoKdl93aWR0aF81ZBjLAiABKAISFAoLdl93aWR0aF8xMGQYzgIgASgC",
            "EhQKC3Zfd2lkdGhfMjFkGNECIAEoAhIUCgt2X3dpZHRoXzQyZBjUAiABKAIS",
            "FAoLdl93aWR0aF82M2QY1wIgASgCEhQKC3Zfd2lkdGhfODRkGNoCIAEoAhIV",
            "Cgx2X3dpZHRoXzEwNWQY3QIgASgCEhUKDHZfd2lkdGhfMTI2ZBjgAiABKAIS",
            "FQoMdl93aWR0aF8xODlkGOMCIAEoAhIVCgx2X3dpZHRoXzI1MmQY5gIgASgC",
            "EhUKDHZfd2lkdGhfMzc4ZBjpAiABKAISFQoMdl93aWR0aF81MDRkGOwCIAEo",
            "AhITCgp2X3Nsb3BlXzVkGO8CIAEoAhIUCgt2X3Nsb3BlXzEwZBjyAiABKAIS",
            "FAoLdl9zbG9wZV8yMWQY9QIgASgCEhQKC3Zfc2xvcGVfNDJkGPgCIAEoAhIU",
            "Cgt2X3Nsb3BlXzYzZBj7AiABKAISFAoLdl9zbG9wZV84NGQY/gIgASgCEhUK",
            "DHZfc2xvcGVfMTA1ZBiBAyABKAISFQoMdl9zbG9wZV8xMjZkGIQDIAEoAhIV",
            "Cgx2X3Nsb3BlXzE4OWQYhwMgASgCEhUKDHZfc2xvcGVfMjUyZBiKAyABKAIS",
            "FQoMdl9zbG9wZV8zNzhkGI0DIAEoAhIVCgx2X3Nsb3BlXzUwNGQYkAMgASgC",
            "EhEKCGVfY250XzVkGJMDIAEoBRISCgllX2NudF8xMGQYlgMgASgFEhIKCWVf",
            "Y250XzIxZBiZAyABKAUSEgoJZV9jbnRfNDJkGJwDIAEoBRISCgllX2NudF82",
            "M2QYnwMgASgFEhIKCWVfY250Xzg0ZBiiAyABKAUSEwoKZV9jbnRfMTA1ZBil",
            "AyABKAUSEwoKZV9jbnRfMTI2ZBioAyABKAUSEwoKZV9jbnRfMTg5ZBirAyAB",
            "KAUSEwoKZV9jbnRfMjUyZBiuAyABKAUSEwoKZV9jbnRfMzc4ZBixAyABKAUS",
            "EwoKZV9jbnRfNTA0ZBi0AyABKAUSMQoGc3RhdHVzGLcDIAEoDjIgLnNwaWRl",
            "cnJvY2sucHJvdG9idWYuQ3VydmVTdGF0dXMSKAoEdGltZRi6AyABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24SLgoJdGltZXN0YW1wGL0DIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAacwoEUEtleRIuCgZ0aWNrZXIY",
            "CiABKAsyHi5zcGlkZXJyb2NrLnByb3RvYnVmLlRpY2tlcktleRI7CgxzdXJm",
            "YWNlX3R5cGUYCyABKA4yJS5zcGlkZXJyb2NrLnByb3RvYnVmLlN1cmZhY2VD",
            "dXJ2ZVR5cGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveSurfaceFixedTerm), global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Parser, new[]{ "Meta", "Pkey", "HEMove", "HEMoveNum", "HEMoveAvg", "HEMoveStd", "HEMoveMin", "HEMoveMax", "IEMove", "IEFitCode", "IEFitError", "ExpiryCount", "IEMoveAvg", "IEMoveStd", "IEMoveMin", "IEMoveMax", "IEMoveCnt", "EMoveExpAdj1", "EMoveYrsAdj1", "EMoveYears1", "EMoveEKey1", "EMoveExpAdj2", "EMoveYrsAdj2", "EMoveYears2", "EMoveEKey2", "AtmCenISt", "AtmCenILt", "AtmCenIDecay", "AtmCenI5D", "AtmCenI10D", "AtmCenI21D", "AtmCenI42D", "AtmCenI63D", "AtmCenI84D", "AtmCenI105D", "AtmCenI126D", "AtmCenI189D", "AtmCenI252D", "AtmCenI378D", "AtmCenI504D", "AtmCenHSt", "AtmCenHLt", "AtmCenHDecay", "AtmCenH5D", "AtmCenH10D", "AtmCenH21D", "AtmCenH42D", "AtmCenH63D", "AtmCenH84D", "AtmCenH105D", "AtmCenH126D", "AtmCenH189D", "AtmCenH252D", "AtmCenH378D", "AtmCenH504D", "SDiv5D", "SDiv10D", "SDiv21D", "SDiv42D", "SDiv63D", "SDiv84D", "SDiv105D", "SDiv126D", "SDiv189D", "SDiv252D", "SDiv378D", "SDiv504D", "FwdUPrc5D", "FwdUPrc10D", "FwdUPrc21D", "FwdUPrc42D", "FwdUPrc63D", "FwdUPrc84D", "FwdUPrc105D", "FwdUPrc126D", "FwdUPrc189D", "FwdUPrc252D", "FwdUPrc378D", "FwdUPrc504D", "VWidth5D", "VWidth10D", "VWidth21D", "VWidth42D", "VWidth63D", "VWidth84D", "VWidth105D", "VWidth126D", "VWidth189D", "VWidth252D", "VWidth378D", "VWidth504D", "VSlope5D", "VSlope10D", "VSlope21D", "VSlope42D", "VSlope63D", "VSlope84D", "VSlope105D", "VSlope126D", "VSlope189D", "VSlope252D", "VSlope378D", "VSlope504D", "ECnt5D", "ECnt10D", "ECnt21D", "ECnt42D", "ECnt63D", "ECnt84D", "ECnt105D", "ECnt126D", "ECnt189D", "ECnt252D", "ECnt378D", "ECnt504D", "Status", "Time", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey), global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey.Parser, new[]{ "Ticker", "SurfaceType" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///LiveSurfaceFixedTerm (surfaceType = 'Live') records contain a live implied volatility term record at standardized days-to-expiration.  SurfaceType = 'PriorDay' records contain the final record from the prior trading day.
  ///These records include implied and histrical earnings moves, implied earnings date adjustments, and interpolated/gridded atm, sdiv, and quote width values.
  ///LiveSurfaceTerm records are published to the SpiderRock elastic cluster every 10 minutes for all equity and index underliers with options.
  /// </summary>
  public sealed partial class LiveSurfaceFixedTerm : pb::IMessage<LiveSurfaceFixedTerm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LiveSurfaceFixedTerm> _parser = new pb::MessageParser<LiveSurfaceFixedTerm>(() => new LiveSurfaceFixedTerm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LiveSurfaceFixedTerm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.LiveSurfaceFixedTermReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveSurfaceFixedTerm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveSurfaceFixedTerm(LiveSurfaceFixedTerm other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      hEMove_ = other.hEMove_;
      hEMoveNum_ = other.hEMoveNum_;
      hEMoveAvg_ = other.hEMoveAvg_;
      hEMoveStd_ = other.hEMoveStd_;
      hEMoveMin_ = other.hEMoveMin_;
      hEMoveMax_ = other.hEMoveMax_;
      iEMove_ = other.iEMove_;
      iEFitCode_ = other.iEFitCode_;
      iEFitError_ = other.iEFitError_;
      expiryCount_ = other.expiryCount_;
      iEMoveAvg_ = other.iEMoveAvg_;
      iEMoveStd_ = other.iEMoveStd_;
      iEMoveMin_ = other.iEMoveMin_;
      iEMoveMax_ = other.iEMoveMax_;
      iEMoveCnt_ = other.iEMoveCnt_;
      eMoveExpAdj1_ = other.eMoveExpAdj1_;
      eMoveYrsAdj1_ = other.eMoveYrsAdj1_;
      eMoveYears1_ = other.eMoveYears1_;
      eMoveEKey1_ = other.eMoveEKey1_ != null ? other.eMoveEKey1_.Clone() : null;
      eMoveExpAdj2_ = other.eMoveExpAdj2_;
      eMoveYrsAdj2_ = other.eMoveYrsAdj2_;
      eMoveYears2_ = other.eMoveYears2_;
      eMoveEKey2_ = other.eMoveEKey2_ != null ? other.eMoveEKey2_.Clone() : null;
      atmCenISt_ = other.atmCenISt_;
      atmCenILt_ = other.atmCenILt_;
      atmCenIDecay_ = other.atmCenIDecay_;
      atmCenI5D_ = other.atmCenI5D_;
      atmCenI10D_ = other.atmCenI10D_;
      atmCenI21D_ = other.atmCenI21D_;
      atmCenI42D_ = other.atmCenI42D_;
      atmCenI63D_ = other.atmCenI63D_;
      atmCenI84D_ = other.atmCenI84D_;
      atmCenI105D_ = other.atmCenI105D_;
      atmCenI126D_ = other.atmCenI126D_;
      atmCenI189D_ = other.atmCenI189D_;
      atmCenI252D_ = other.atmCenI252D_;
      atmCenI378D_ = other.atmCenI378D_;
      atmCenI504D_ = other.atmCenI504D_;
      atmCenHSt_ = other.atmCenHSt_;
      atmCenHLt_ = other.atmCenHLt_;
      atmCenHDecay_ = other.atmCenHDecay_;
      atmCenH5D_ = other.atmCenH5D_;
      atmCenH10D_ = other.atmCenH10D_;
      atmCenH21D_ = other.atmCenH21D_;
      atmCenH42D_ = other.atmCenH42D_;
      atmCenH63D_ = other.atmCenH63D_;
      atmCenH84D_ = other.atmCenH84D_;
      atmCenH105D_ = other.atmCenH105D_;
      atmCenH126D_ = other.atmCenH126D_;
      atmCenH189D_ = other.atmCenH189D_;
      atmCenH252D_ = other.atmCenH252D_;
      atmCenH378D_ = other.atmCenH378D_;
      atmCenH504D_ = other.atmCenH504D_;
      sDiv5D_ = other.sDiv5D_;
      sDiv10D_ = other.sDiv10D_;
      sDiv21D_ = other.sDiv21D_;
      sDiv42D_ = other.sDiv42D_;
      sDiv63D_ = other.sDiv63D_;
      sDiv84D_ = other.sDiv84D_;
      sDiv105D_ = other.sDiv105D_;
      sDiv126D_ = other.sDiv126D_;
      sDiv189D_ = other.sDiv189D_;
      sDiv252D_ = other.sDiv252D_;
      sDiv378D_ = other.sDiv378D_;
      sDiv504D_ = other.sDiv504D_;
      fwdUPrc5D_ = other.fwdUPrc5D_;
      fwdUPrc10D_ = other.fwdUPrc10D_;
      fwdUPrc21D_ = other.fwdUPrc21D_;
      fwdUPrc42D_ = other.fwdUPrc42D_;
      fwdUPrc63D_ = other.fwdUPrc63D_;
      fwdUPrc84D_ = other.fwdUPrc84D_;
      fwdUPrc105D_ = other.fwdUPrc105D_;
      fwdUPrc126D_ = other.fwdUPrc126D_;
      fwdUPrc189D_ = other.fwdUPrc189D_;
      fwdUPrc252D_ = other.fwdUPrc252D_;
      fwdUPrc378D_ = other.fwdUPrc378D_;
      fwdUPrc504D_ = other.fwdUPrc504D_;
      vWidth5D_ = other.vWidth5D_;
      vWidth10D_ = other.vWidth10D_;
      vWidth21D_ = other.vWidth21D_;
      vWidth42D_ = other.vWidth42D_;
      vWidth63D_ = other.vWidth63D_;
      vWidth84D_ = other.vWidth84D_;
      vWidth105D_ = other.vWidth105D_;
      vWidth126D_ = other.vWidth126D_;
      vWidth189D_ = other.vWidth189D_;
      vWidth252D_ = other.vWidth252D_;
      vWidth378D_ = other.vWidth378D_;
      vWidth504D_ = other.vWidth504D_;
      vSlope5D_ = other.vSlope5D_;
      vSlope10D_ = other.vSlope10D_;
      vSlope21D_ = other.vSlope21D_;
      vSlope42D_ = other.vSlope42D_;
      vSlope63D_ = other.vSlope63D_;
      vSlope84D_ = other.vSlope84D_;
      vSlope105D_ = other.vSlope105D_;
      vSlope126D_ = other.vSlope126D_;
      vSlope189D_ = other.vSlope189D_;
      vSlope252D_ = other.vSlope252D_;
      vSlope378D_ = other.vSlope378D_;
      vSlope504D_ = other.vSlope504D_;
      eCnt5D_ = other.eCnt5D_;
      eCnt10D_ = other.eCnt10D_;
      eCnt21D_ = other.eCnt21D_;
      eCnt42D_ = other.eCnt42D_;
      eCnt63D_ = other.eCnt63D_;
      eCnt84D_ = other.eCnt84D_;
      eCnt105D_ = other.eCnt105D_;
      eCnt126D_ = other.eCnt126D_;
      eCnt189D_ = other.eCnt189D_;
      eCnt252D_ = other.eCnt252D_;
      eCnt378D_ = other.eCnt378D_;
      eCnt504D_ = other.eCnt504D_;
      status_ = other.status_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LiveSurfaceFixedTerm Clone() {
      return new LiveSurfaceFixedTerm(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove" field.</summary>
    public const int HEMoveFieldNumber = 100;
    private float hEMove_;
    /// <summary>
    /// expected forward earnings move (average of the last 8-12 underlier earnings moves; w/max clipping)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HEMove {
      get { return hEMove_; }
      set {
        hEMove_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove_num" field.</summary>
    public const int HEMoveNumFieldNumber = 103;
    private int hEMoveNum_;
    /// <summary>
    /// num historical earnings moves in historical window
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HEMoveNum {
      get { return hEMoveNum_; }
      set {
        hEMoveNum_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove_avg" field.</summary>
    public const int HEMoveAvgFieldNumber = 106;
    private float hEMoveAvg_;
    /// <summary>
    /// avg historical earnings move (last 8-12 underlier earnings moves)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HEMoveAvg {
      get { return hEMoveAvg_; }
      set {
        hEMoveAvg_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove_std" field.</summary>
    public const int HEMoveStdFieldNumber = 109;
    private float hEMoveStd_;
    /// <summary>
    /// std historical earnings move (last 8-12 underlier earnings moves)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HEMoveStd {
      get { return hEMoveStd_; }
      set {
        hEMoveStd_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove_min" field.</summary>
    public const int HEMoveMinFieldNumber = 112;
    private float hEMoveMin_;
    /// <summary>
    /// max historical earnings move (last 8-12 underlier earnings moves)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HEMoveMin {
      get { return hEMoveMin_; }
      set {
        hEMoveMin_ = value;
      }
    }

    /// <summary>Field number for the "h_eMove_max" field.</summary>
    public const int HEMoveMaxFieldNumber = 115;
    private float hEMoveMax_;
    /// <summary>
    /// min historical earnings move (last 8-12 underlier earnings moves)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HEMoveMax {
      get { return hEMoveMax_; }
      set {
        hEMoveMax_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove" field.</summary>
    public const int IEMoveFieldNumber = 118;
    private float iEMove_;
    /// <summary>
    /// implied earnings move (implied move; all earnings events)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEMove {
      get { return iEMove_; }
      set {
        iEMove_ = value;
      }
    }

    /// <summary>Field number for the "i_eFit_code" field.</summary>
    public const int IEFitCodeFieldNumber = 121;
    private global::Spiderrock.Protobuf.EFitCode iEFitCode_ = global::Spiderrock.Protobuf.EFitCode.Unspecified;
    /// <summary>
    /// implied EFit Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.EFitCode IEFitCode {
      get { return iEFitCode_; }
      set {
        iEFitCode_ = value;
      }
    }

    /// <summary>Field number for the "i_eFit_error" field.</summary>
    public const int IEFitErrorFieldNumber = 124;
    private float iEFitError_;
    /// <summary>
    /// eMove fit error (term surface fit error)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEFitError {
      get { return iEFitError_; }
      set {
        iEFitError_ = value;
      }
    }

    /// <summary>Field number for the "expiry_count" field.</summary>
    public const int ExpiryCountFieldNumber = 127;
    private int expiryCount_;
    /// <summary>
    /// number of actual expirations involved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiryCount {
      get { return expiryCount_; }
      set {
        expiryCount_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove_avg" field.</summary>
    public const int IEMoveAvgFieldNumber = 130;
    private float iEMoveAvg_;
    /// <summary>
    /// average eMove today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEMoveAvg {
      get { return iEMoveAvg_; }
      set {
        iEMoveAvg_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove_std" field.</summary>
    public const int IEMoveStdFieldNumber = 133;
    private float iEMoveStd_;
    /// <summary>
    /// eMove std dev today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEMoveStd {
      get { return iEMoveStd_; }
      set {
        iEMoveStd_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove_min" field.</summary>
    public const int IEMoveMinFieldNumber = 136;
    private float iEMoveMin_;
    /// <summary>
    /// eMove min today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEMoveMin {
      get { return iEMoveMin_; }
      set {
        iEMoveMin_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove_max" field.</summary>
    public const int IEMoveMaxFieldNumber = 139;
    private float iEMoveMax_;
    /// <summary>
    /// emove max today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IEMoveMax {
      get { return iEMoveMax_; }
      set {
        iEMoveMax_ = value;
      }
    }

    /// <summary>Field number for the "i_eMove_cnt" field.</summary>
    public const int IEMoveCntFieldNumber = 142;
    private int iEMoveCnt_;
    /// <summary>
    /// number of surface term fits today
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IEMoveCnt {
      get { return iEMoveCnt_; }
      set {
        iEMoveCnt_ = value;
      }
    }

    /// <summary>Field number for the "e_move_exp_adj1" field.</summary>
    public const int EMoveExpAdj1FieldNumber = 145;
    private int eMoveExpAdj1_;
    /// <summary>
    /// number of expirations (+/-) that the next earn date was moved to best fit market term structure (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EMoveExpAdj1 {
      get { return eMoveExpAdj1_; }
      set {
        eMoveExpAdj1_ = value;
      }
    }

    /// <summary>Field number for the "e_move_yrs_adj1" field.</summary>
    public const int EMoveYrsAdj1FieldNumber = 148;
    private float eMoveYrsAdj1_;
    /// <summary>
    /// number of trading years (+/-) that the next earn date was moved to best fit market term structure (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EMoveYrsAdj1 {
      get { return eMoveYrsAdj1_; }
      set {
        eMoveYrsAdj1_ = value;
      }
    }

    /// <summary>Field number for the "e_move_years1" field.</summary>
    public const int EMoveYears1FieldNumber = 151;
    private float eMoveYears1_;
    /// <summary>
    /// years to expiration from LiveSurfaceCurve.pkey.ekey = eMoveFKey1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EMoveYears1 {
      get { return eMoveYears1_; }
      set {
        eMoveYears1_ = value;
      }
    }

    /// <summary>Field number for the "e_move_eKey1" field.</summary>
    public const int EMoveEKey1FieldNumber = 154;
    private global::Spiderrock.Protobuf.ExpiryKey eMoveEKey1_;
    /// <summary>
    /// LiveSurfaceCurve.pkey.ekey immediately after 1st implied earnings move (note: this will not match the base earnings calendar if eMoveDtAdj1 != 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExpiryKey EMoveEKey1 {
      get { return eMoveEKey1_; }
      set {
        eMoveEKey1_ = value;
      }
    }

    /// <summary>Field number for the "e_move_exp_adj2" field.</summary>
    public const int EMoveExpAdj2FieldNumber = 157;
    private int eMoveExpAdj2_;
    /// <summary>
    /// number of expirations (+/-) that the 2nd earn date was moved to best fit market term structure (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EMoveExpAdj2 {
      get { return eMoveExpAdj2_; }
      set {
        eMoveExpAdj2_ = value;
      }
    }

    /// <summary>Field number for the "e_move_yrs_adj2" field.</summary>
    public const int EMoveYrsAdj2FieldNumber = 160;
    private float eMoveYrsAdj2_;
    /// <summary>
    /// number of trading years (+/-) that the 2nd earn date was moved to best fit market term structure (if any)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EMoveYrsAdj2 {
      get { return eMoveYrsAdj2_; }
      set {
        eMoveYrsAdj2_ = value;
      }
    }

    /// <summary>Field number for the "e_move_years2" field.</summary>
    public const int EMoveYears2FieldNumber = 163;
    private float eMoveYears2_;
    /// <summary>
    /// years to expiration from LiveSurfaceCurve.pkey.fkey = eMoveFKey2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EMoveYears2 {
      get { return eMoveYears2_; }
      set {
        eMoveYears2_ = value;
      }
    }

    /// <summary>Field number for the "e_move_eKey2" field.</summary>
    public const int EMoveEKey2FieldNumber = 166;
    private global::Spiderrock.Protobuf.ExpiryKey eMoveEKey2_;
    /// <summary>
    /// LiveSurfaceCurve.pkey.ekey immediately after 2nd implied earnings move (note: this will not match the base earnings calendar if eMoveDtAdj2 != 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.ExpiryKey EMoveEKey2 {
      get { return eMoveEKey2_; }
      set {
        eMoveEKey2_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_st" field.</summary>
    public const int AtmCenIStFieldNumber = 169;
    private float atmCenISt_;
    /// <summary>
    /// short term (5 day) model atm volatility (censored using iEMult)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenISt {
      get { return atmCenISt_; }
      set {
        atmCenISt_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_lt" field.</summary>
    public const int AtmCenILtFieldNumber = 172;
    private float atmCenILt_;
    /// <summary>
    /// long term (504 day) model atm volatility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenILt {
      get { return atmCenILt_; }
      set {
        atmCenILt_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_decay" field.</summary>
    public const int AtmCenIDecayFieldNumber = 175;
    private float atmCenIDecay_;
    /// <summary>
    /// model decay parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenIDecay {
      get { return atmCenIDecay_; }
      set {
        atmCenIDecay_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_5d" field.</summary>
    public const int AtmCenI5DFieldNumber = 178;
    private float atmCenI5D_;
    /// <summary>
    /// Interpolated 5 day atm vol (censored using iEMult)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI5D {
      get { return atmCenI5D_; }
      set {
        atmCenI5D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_10d" field.</summary>
    public const int AtmCenI10DFieldNumber = 181;
    private float atmCenI10D_;
    /// <summary>
    /// Interpolated 10 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI10D {
      get { return atmCenI10D_; }
      set {
        atmCenI10D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_21d" field.</summary>
    public const int AtmCenI21DFieldNumber = 184;
    private float atmCenI21D_;
    /// <summary>
    /// Interpolated 21 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI21D {
      get { return atmCenI21D_; }
      set {
        atmCenI21D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_42d" field.</summary>
    public const int AtmCenI42DFieldNumber = 187;
    private float atmCenI42D_;
    /// <summary>
    /// Interpolated 42 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI42D {
      get { return atmCenI42D_; }
      set {
        atmCenI42D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_63d" field.</summary>
    public const int AtmCenI63DFieldNumber = 190;
    private float atmCenI63D_;
    /// <summary>
    /// Interpolated 63 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI63D {
      get { return atmCenI63D_; }
      set {
        atmCenI63D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_84d" field.</summary>
    public const int AtmCenI84DFieldNumber = 193;
    private float atmCenI84D_;
    /// <summary>
    /// Interpolated 84 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI84D {
      get { return atmCenI84D_; }
      set {
        atmCenI84D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_105d" field.</summary>
    public const int AtmCenI105DFieldNumber = 196;
    private float atmCenI105D_;
    /// <summary>
    /// Interpolated 105 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI105D {
      get { return atmCenI105D_; }
      set {
        atmCenI105D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_126d" field.</summary>
    public const int AtmCenI126DFieldNumber = 199;
    private float atmCenI126D_;
    /// <summary>
    /// Interpolated 126 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI126D {
      get { return atmCenI126D_; }
      set {
        atmCenI126D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_189d" field.</summary>
    public const int AtmCenI189DFieldNumber = 202;
    private float atmCenI189D_;
    /// <summary>
    /// Interpolated 189 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI189D {
      get { return atmCenI189D_; }
      set {
        atmCenI189D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_252d" field.</summary>
    public const int AtmCenI252DFieldNumber = 205;
    private float atmCenI252D_;
    /// <summary>
    /// Interpolated 252 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI252D {
      get { return atmCenI252D_; }
      set {
        atmCenI252D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_378d" field.</summary>
    public const int AtmCenI378DFieldNumber = 208;
    private float atmCenI378D_;
    /// <summary>
    /// Interpolated 378 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI378D {
      get { return atmCenI378D_; }
      set {
        atmCenI378D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_i_504d" field.</summary>
    public const int AtmCenI504DFieldNumber = 211;
    private float atmCenI504D_;
    /// <summary>
    /// Interpolated 504 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenI504D {
      get { return atmCenI504D_; }
      set {
        atmCenI504D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_st" field.</summary>
    public const int AtmCenHStFieldNumber = 214;
    private float atmCenHSt_;
    /// <summary>
    /// short term (5 day) model atm volatility (censored using hEMult)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenHSt {
      get { return atmCenHSt_; }
      set {
        atmCenHSt_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_lt" field.</summary>
    public const int AtmCenHLtFieldNumber = 217;
    private float atmCenHLt_;
    /// <summary>
    /// long term (504 day) model atm volatility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenHLt {
      get { return atmCenHLt_; }
      set {
        atmCenHLt_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_decay" field.</summary>
    public const int AtmCenHDecayFieldNumber = 220;
    private float atmCenHDecay_;
    /// <summary>
    /// model decay parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenHDecay {
      get { return atmCenHDecay_; }
      set {
        atmCenHDecay_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_5d" field.</summary>
    public const int AtmCenH5DFieldNumber = 223;
    private float atmCenH5D_;
    /// <summary>
    /// Interpolated 5 day atm vol (censored using hEMult)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH5D {
      get { return atmCenH5D_; }
      set {
        atmCenH5D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_10d" field.</summary>
    public const int AtmCenH10DFieldNumber = 226;
    private float atmCenH10D_;
    /// <summary>
    /// Interpolated 10 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH10D {
      get { return atmCenH10D_; }
      set {
        atmCenH10D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_21d" field.</summary>
    public const int AtmCenH21DFieldNumber = 229;
    private float atmCenH21D_;
    /// <summary>
    /// Interpolated 21 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH21D {
      get { return atmCenH21D_; }
      set {
        atmCenH21D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_42d" field.</summary>
    public const int AtmCenH42DFieldNumber = 232;
    private float atmCenH42D_;
    /// <summary>
    /// Interpolated 42 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH42D {
      get { return atmCenH42D_; }
      set {
        atmCenH42D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_63d" field.</summary>
    public const int AtmCenH63DFieldNumber = 235;
    private float atmCenH63D_;
    /// <summary>
    /// Interpolated 63 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH63D {
      get { return atmCenH63D_; }
      set {
        atmCenH63D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_84d" field.</summary>
    public const int AtmCenH84DFieldNumber = 238;
    private float atmCenH84D_;
    /// <summary>
    /// Interpolated 84 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH84D {
      get { return atmCenH84D_; }
      set {
        atmCenH84D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_105d" field.</summary>
    public const int AtmCenH105DFieldNumber = 241;
    private float atmCenH105D_;
    /// <summary>
    /// Interpolated 105 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH105D {
      get { return atmCenH105D_; }
      set {
        atmCenH105D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_126d" field.</summary>
    public const int AtmCenH126DFieldNumber = 244;
    private float atmCenH126D_;
    /// <summary>
    /// Interpolated 126 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH126D {
      get { return atmCenH126D_; }
      set {
        atmCenH126D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_189d" field.</summary>
    public const int AtmCenH189DFieldNumber = 247;
    private float atmCenH189D_;
    /// <summary>
    /// Interpolated 189 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH189D {
      get { return atmCenH189D_; }
      set {
        atmCenH189D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_252d" field.</summary>
    public const int AtmCenH252DFieldNumber = 250;
    private float atmCenH252D_;
    /// <summary>
    /// Interpolated 252 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH252D {
      get { return atmCenH252D_; }
      set {
        atmCenH252D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_378d" field.</summary>
    public const int AtmCenH378DFieldNumber = 253;
    private float atmCenH378D_;
    /// <summary>
    /// Interpolated 378 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH378D {
      get { return atmCenH378D_; }
      set {
        atmCenH378D_ = value;
      }
    }

    /// <summary>Field number for the "atm_cen_h_504d" field.</summary>
    public const int AtmCenH504DFieldNumber = 256;
    private float atmCenH504D_;
    /// <summary>
    /// Interpolated 504 day atm vol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AtmCenH504D {
      get { return atmCenH504D_; }
      set {
        atmCenH504D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_5d" field.</summary>
    public const int SDiv5DFieldNumber = 259;
    private float sDiv5D_;
    /// <summary>
    /// Interpolated 5 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv5D {
      get { return sDiv5D_; }
      set {
        sDiv5D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_10d" field.</summary>
    public const int SDiv10DFieldNumber = 262;
    private float sDiv10D_;
    /// <summary>
    /// Interpolated 10 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv10D {
      get { return sDiv10D_; }
      set {
        sDiv10D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_21d" field.</summary>
    public const int SDiv21DFieldNumber = 265;
    private float sDiv21D_;
    /// <summary>
    /// Interpolated 21 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv21D {
      get { return sDiv21D_; }
      set {
        sDiv21D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_42d" field.</summary>
    public const int SDiv42DFieldNumber = 268;
    private float sDiv42D_;
    /// <summary>
    /// Interpolated 42 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv42D {
      get { return sDiv42D_; }
      set {
        sDiv42D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_63d" field.</summary>
    public const int SDiv63DFieldNumber = 271;
    private float sDiv63D_;
    /// <summary>
    /// Interpolated 63 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv63D {
      get { return sDiv63D_; }
      set {
        sDiv63D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_84d" field.</summary>
    public const int SDiv84DFieldNumber = 274;
    private float sDiv84D_;
    /// <summary>
    /// Interpolated 84 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv84D {
      get { return sDiv84D_; }
      set {
        sDiv84D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_105d" field.</summary>
    public const int SDiv105DFieldNumber = 277;
    private float sDiv105D_;
    /// <summary>
    /// Interpolated 105 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv105D {
      get { return sDiv105D_; }
      set {
        sDiv105D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_126d" field.</summary>
    public const int SDiv126DFieldNumber = 280;
    private float sDiv126D_;
    /// <summary>
    /// Interpolated 126 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv126D {
      get { return sDiv126D_; }
      set {
        sDiv126D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_189d" field.</summary>
    public const int SDiv189DFieldNumber = 283;
    private float sDiv189D_;
    /// <summary>
    /// Interpolated 189 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv189D {
      get { return sDiv189D_; }
      set {
        sDiv189D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_252d" field.</summary>
    public const int SDiv252DFieldNumber = 286;
    private float sDiv252D_;
    /// <summary>
    /// Interpolated 252 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv252D {
      get { return sDiv252D_; }
      set {
        sDiv252D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_378d" field.</summary>
    public const int SDiv378DFieldNumber = 289;
    private float sDiv378D_;
    /// <summary>
    /// Interpolated 378 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv378D {
      get { return sDiv378D_; }
      set {
        sDiv378D_ = value;
      }
    }

    /// <summary>Field number for the "s_div_504d" field.</summary>
    public const int SDiv504DFieldNumber = 292;
    private float sDiv504D_;
    /// <summary>
    /// Interpolated 504 day implied sdiv rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SDiv504D {
      get { return sDiv504D_; }
      set {
        sDiv504D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_5d" field.</summary>
    public const int FwdUPrc5DFieldNumber = 295;
    private float fwdUPrc5D_;
    /// <summary>
    /// Interpolated 5 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc5D {
      get { return fwdUPrc5D_; }
      set {
        fwdUPrc5D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_10d" field.</summary>
    public const int FwdUPrc10DFieldNumber = 298;
    private float fwdUPrc10D_;
    /// <summary>
    /// Interpolated 10 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc10D {
      get { return fwdUPrc10D_; }
      set {
        fwdUPrc10D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_21d" field.</summary>
    public const int FwdUPrc21DFieldNumber = 301;
    private float fwdUPrc21D_;
    /// <summary>
    /// Interpolated 21 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc21D {
      get { return fwdUPrc21D_; }
      set {
        fwdUPrc21D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_42d" field.</summary>
    public const int FwdUPrc42DFieldNumber = 304;
    private float fwdUPrc42D_;
    /// <summary>
    /// Interpolated 42 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc42D {
      get { return fwdUPrc42D_; }
      set {
        fwdUPrc42D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_63d" field.</summary>
    public const int FwdUPrc63DFieldNumber = 307;
    private float fwdUPrc63D_;
    /// <summary>
    /// Interpolated 63 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc63D {
      get { return fwdUPrc63D_; }
      set {
        fwdUPrc63D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_84d" field.</summary>
    public const int FwdUPrc84DFieldNumber = 310;
    private float fwdUPrc84D_;
    /// <summary>
    /// Interpolated 84 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc84D {
      get { return fwdUPrc84D_; }
      set {
        fwdUPrc84D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_105d" field.</summary>
    public const int FwdUPrc105DFieldNumber = 313;
    private float fwdUPrc105D_;
    /// <summary>
    /// Interpolated 105 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc105D {
      get { return fwdUPrc105D_; }
      set {
        fwdUPrc105D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_126d" field.</summary>
    public const int FwdUPrc126DFieldNumber = 316;
    private float fwdUPrc126D_;
    /// <summary>
    /// Interpolated 126 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc126D {
      get { return fwdUPrc126D_; }
      set {
        fwdUPrc126D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_189d" field.</summary>
    public const int FwdUPrc189DFieldNumber = 319;
    private float fwdUPrc189D_;
    /// <summary>
    /// Interpolated 189 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc189D {
      get { return fwdUPrc189D_; }
      set {
        fwdUPrc189D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_252d" field.</summary>
    public const int FwdUPrc252DFieldNumber = 322;
    private float fwdUPrc252D_;
    /// <summary>
    /// Interpolated 252 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc252D {
      get { return fwdUPrc252D_; }
      set {
        fwdUPrc252D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_378d" field.</summary>
    public const int FwdUPrc378DFieldNumber = 325;
    private float fwdUPrc378D_;
    /// <summary>
    /// Interpolated 378 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc378D {
      get { return fwdUPrc378D_; }
      set {
        fwdUPrc378D_ = value;
      }
    }

    /// <summary>Field number for the "fwd_uPrc_504d" field.</summary>
    public const int FwdUPrc504DFieldNumber = 328;
    private float fwdUPrc504D_;
    /// <summary>
    /// Interpolated 504 day implied forward price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FwdUPrc504D {
      get { return fwdUPrc504D_; }
      set {
        fwdUPrc504D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_5d" field.</summary>
    public const int VWidth5DFieldNumber = 331;
    private float vWidth5D_;
    /// <summary>
    /// Interpolated 5 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth5D {
      get { return vWidth5D_; }
      set {
        vWidth5D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_10d" field.</summary>
    public const int VWidth10DFieldNumber = 334;
    private float vWidth10D_;
    /// <summary>
    /// Interpolated 10 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth10D {
      get { return vWidth10D_; }
      set {
        vWidth10D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_21d" field.</summary>
    public const int VWidth21DFieldNumber = 337;
    private float vWidth21D_;
    /// <summary>
    /// Interpolated 21 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth21D {
      get { return vWidth21D_; }
      set {
        vWidth21D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_42d" field.</summary>
    public const int VWidth42DFieldNumber = 340;
    private float vWidth42D_;
    /// <summary>
    /// Interpolated 42 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth42D {
      get { return vWidth42D_; }
      set {
        vWidth42D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_63d" field.</summary>
    public const int VWidth63DFieldNumber = 343;
    private float vWidth63D_;
    /// <summary>
    /// Interpolated 63 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth63D {
      get { return vWidth63D_; }
      set {
        vWidth63D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_84d" field.</summary>
    public const int VWidth84DFieldNumber = 346;
    private float vWidth84D_;
    /// <summary>
    /// Interpolated 84 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth84D {
      get { return vWidth84D_; }
      set {
        vWidth84D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_105d" field.</summary>
    public const int VWidth105DFieldNumber = 349;
    private float vWidth105D_;
    /// <summary>
    /// Interpolated 105 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth105D {
      get { return vWidth105D_; }
      set {
        vWidth105D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_126d" field.</summary>
    public const int VWidth126DFieldNumber = 352;
    private float vWidth126D_;
    /// <summary>
    /// Interpolated 126 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth126D {
      get { return vWidth126D_; }
      set {
        vWidth126D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_189d" field.</summary>
    public const int VWidth189DFieldNumber = 355;
    private float vWidth189D_;
    /// <summary>
    /// Interpolated 189 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth189D {
      get { return vWidth189D_; }
      set {
        vWidth189D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_252d" field.</summary>
    public const int VWidth252DFieldNumber = 358;
    private float vWidth252D_;
    /// <summary>
    /// Interpolated 252 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth252D {
      get { return vWidth252D_; }
      set {
        vWidth252D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_378d" field.</summary>
    public const int VWidth378DFieldNumber = 361;
    private float vWidth378D_;
    /// <summary>
    /// Interpolated 378 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth378D {
      get { return vWidth378D_; }
      set {
        vWidth378D_ = value;
      }
    }

    /// <summary>Field number for the "v_width_504d" field.</summary>
    public const int VWidth504DFieldNumber = 364;
    private float vWidth504D_;
    /// <summary>
    /// Interpolated 504 day market vwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth504D {
      get { return vWidth504D_; }
      set {
        vWidth504D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_5d" field.</summary>
    public const int VSlope5DFieldNumber = 367;
    private float vSlope5D_;
    /// <summary>
    /// Interpolated 5 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope5D {
      get { return vSlope5D_; }
      set {
        vSlope5D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_10d" field.</summary>
    public const int VSlope10DFieldNumber = 370;
    private float vSlope10D_;
    /// <summary>
    /// Interpolated 10 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope10D {
      get { return vSlope10D_; }
      set {
        vSlope10D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_21d" field.</summary>
    public const int VSlope21DFieldNumber = 373;
    private float vSlope21D_;
    /// <summary>
    /// Interpolated 21 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope21D {
      get { return vSlope21D_; }
      set {
        vSlope21D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_42d" field.</summary>
    public const int VSlope42DFieldNumber = 376;
    private float vSlope42D_;
    /// <summary>
    /// Interpolated 42 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope42D {
      get { return vSlope42D_; }
      set {
        vSlope42D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_63d" field.</summary>
    public const int VSlope63DFieldNumber = 379;
    private float vSlope63D_;
    /// <summary>
    /// Interpolated 63 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope63D {
      get { return vSlope63D_; }
      set {
        vSlope63D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_84d" field.</summary>
    public const int VSlope84DFieldNumber = 382;
    private float vSlope84D_;
    /// <summary>
    /// Interpolated 84 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope84D {
      get { return vSlope84D_; }
      set {
        vSlope84D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_105d" field.</summary>
    public const int VSlope105DFieldNumber = 385;
    private float vSlope105D_;
    /// <summary>
    /// Interpolated 105 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope105D {
      get { return vSlope105D_; }
      set {
        vSlope105D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_126d" field.</summary>
    public const int VSlope126DFieldNumber = 388;
    private float vSlope126D_;
    /// <summary>
    /// Interpolated 126 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope126D {
      get { return vSlope126D_; }
      set {
        vSlope126D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_189d" field.</summary>
    public const int VSlope189DFieldNumber = 391;
    private float vSlope189D_;
    /// <summary>
    /// Interpolated 189 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope189D {
      get { return vSlope189D_; }
      set {
        vSlope189D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_252d" field.</summary>
    public const int VSlope252DFieldNumber = 394;
    private float vSlope252D_;
    /// <summary>
    /// Interpolated 252 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope252D {
      get { return vSlope252D_; }
      set {
        vSlope252D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_378d" field.</summary>
    public const int VSlope378DFieldNumber = 397;
    private float vSlope378D_;
    /// <summary>
    /// Interpolated 378 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope378D {
      get { return vSlope378D_; }
      set {
        vSlope378D_ = value;
      }
    }

    /// <summary>Field number for the "v_slope_504d" field.</summary>
    public const int VSlope504DFieldNumber = 400;
    private float vSlope504D_;
    /// <summary>
    /// Interpolated 504 day atm vol slope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VSlope504D {
      get { return vSlope504D_; }
      set {
        vSlope504D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_5d" field.</summary>
    public const int ECnt5DFieldNumber = 403;
    private int eCnt5D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt5D {
      get { return eCnt5D_; }
      set {
        eCnt5D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_10d" field.</summary>
    public const int ECnt10DFieldNumber = 406;
    private int eCnt10D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt10D {
      get { return eCnt10D_; }
      set {
        eCnt10D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_21d" field.</summary>
    public const int ECnt21DFieldNumber = 409;
    private int eCnt21D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt21D {
      get { return eCnt21D_; }
      set {
        eCnt21D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_42d" field.</summary>
    public const int ECnt42DFieldNumber = 412;
    private int eCnt42D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt42D {
      get { return eCnt42D_; }
      set {
        eCnt42D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_63d" field.</summary>
    public const int ECnt63DFieldNumber = 415;
    private int eCnt63D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt63D {
      get { return eCnt63D_; }
      set {
        eCnt63D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_84d" field.</summary>
    public const int ECnt84DFieldNumber = 418;
    private int eCnt84D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt84D {
      get { return eCnt84D_; }
      set {
        eCnt84D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_105d" field.</summary>
    public const int ECnt105DFieldNumber = 421;
    private int eCnt105D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt105D {
      get { return eCnt105D_; }
      set {
        eCnt105D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_126d" field.</summary>
    public const int ECnt126DFieldNumber = 424;
    private int eCnt126D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt126D {
      get { return eCnt126D_; }
      set {
        eCnt126D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_189d" field.</summary>
    public const int ECnt189DFieldNumber = 427;
    private int eCnt189D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt189D {
      get { return eCnt189D_; }
      set {
        eCnt189D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_252d" field.</summary>
    public const int ECnt252DFieldNumber = 430;
    private int eCnt252D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt252D {
      get { return eCnt252D_; }
      set {
        eCnt252D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_378d" field.</summary>
    public const int ECnt378DFieldNumber = 433;
    private int eCnt378D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt378D {
      get { return eCnt378D_; }
      set {
        eCnt378D_ = value;
      }
    }

    /// <summary>Field number for the "e_cnt_504d" field.</summary>
    public const int ECnt504DFieldNumber = 436;
    private int eCnt504D_;
    /// <summary>
    /// number of expected earnings events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ECnt504D {
      get { return eCnt504D_; }
      set {
        eCnt504D_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 439;
    private global::Spiderrock.Protobuf.CurveStatus status_ = global::Spiderrock.Protobuf.CurveStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.CurveStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 442;
    private global::Google.Protobuf.WellKnownTypes.Duration time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 445;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// update timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LiveSurfaceFixedTerm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LiveSurfaceFixedTerm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMove, other.HEMove)) return false;
      if (HEMoveNum != other.HEMoveNum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMoveAvg, other.HEMoveAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMoveStd, other.HEMoveStd)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMoveMin, other.HEMoveMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HEMoveMax, other.HEMoveMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEMove, other.IEMove)) return false;
      if (IEFitCode != other.IEFitCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEFitError, other.IEFitError)) return false;
      if (ExpiryCount != other.ExpiryCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEMoveAvg, other.IEMoveAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEMoveStd, other.IEMoveStd)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEMoveMin, other.IEMoveMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IEMoveMax, other.IEMoveMax)) return false;
      if (IEMoveCnt != other.IEMoveCnt) return false;
      if (EMoveExpAdj1 != other.EMoveExpAdj1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EMoveYrsAdj1, other.EMoveYrsAdj1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EMoveYears1, other.EMoveYears1)) return false;
      if (!object.Equals(EMoveEKey1, other.EMoveEKey1)) return false;
      if (EMoveExpAdj2 != other.EMoveExpAdj2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EMoveYrsAdj2, other.EMoveYrsAdj2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EMoveYears2, other.EMoveYears2)) return false;
      if (!object.Equals(EMoveEKey2, other.EMoveEKey2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenISt, other.AtmCenISt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenILt, other.AtmCenILt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenIDecay, other.AtmCenIDecay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI5D, other.AtmCenI5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI10D, other.AtmCenI10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI21D, other.AtmCenI21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI42D, other.AtmCenI42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI63D, other.AtmCenI63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI84D, other.AtmCenI84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI105D, other.AtmCenI105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI126D, other.AtmCenI126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI189D, other.AtmCenI189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI252D, other.AtmCenI252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI378D, other.AtmCenI378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenI504D, other.AtmCenI504D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenHSt, other.AtmCenHSt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenHLt, other.AtmCenHLt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenHDecay, other.AtmCenHDecay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH5D, other.AtmCenH5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH10D, other.AtmCenH10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH21D, other.AtmCenH21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH42D, other.AtmCenH42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH63D, other.AtmCenH63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH84D, other.AtmCenH84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH105D, other.AtmCenH105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH126D, other.AtmCenH126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH189D, other.AtmCenH189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH252D, other.AtmCenH252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH378D, other.AtmCenH378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtmCenH504D, other.AtmCenH504D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv5D, other.SDiv5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv10D, other.SDiv10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv21D, other.SDiv21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv42D, other.SDiv42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv63D, other.SDiv63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv84D, other.SDiv84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv105D, other.SDiv105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv126D, other.SDiv126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv189D, other.SDiv189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv252D, other.SDiv252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv378D, other.SDiv378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SDiv504D, other.SDiv504D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc5D, other.FwdUPrc5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc10D, other.FwdUPrc10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc21D, other.FwdUPrc21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc42D, other.FwdUPrc42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc63D, other.FwdUPrc63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc84D, other.FwdUPrc84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc105D, other.FwdUPrc105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc126D, other.FwdUPrc126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc189D, other.FwdUPrc189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc252D, other.FwdUPrc252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc378D, other.FwdUPrc378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FwdUPrc504D, other.FwdUPrc504D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth5D, other.VWidth5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth10D, other.VWidth10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth21D, other.VWidth21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth42D, other.VWidth42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth63D, other.VWidth63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth84D, other.VWidth84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth105D, other.VWidth105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth126D, other.VWidth126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth189D, other.VWidth189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth252D, other.VWidth252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth378D, other.VWidth378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth504D, other.VWidth504D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope5D, other.VSlope5D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope10D, other.VSlope10D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope21D, other.VSlope21D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope42D, other.VSlope42D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope63D, other.VSlope63D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope84D, other.VSlope84D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope105D, other.VSlope105D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope126D, other.VSlope126D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope189D, other.VSlope189D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope252D, other.VSlope252D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope378D, other.VSlope378D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VSlope504D, other.VSlope504D)) return false;
      if (ECnt5D != other.ECnt5D) return false;
      if (ECnt10D != other.ECnt10D) return false;
      if (ECnt21D != other.ECnt21D) return false;
      if (ECnt42D != other.ECnt42D) return false;
      if (ECnt63D != other.ECnt63D) return false;
      if (ECnt84D != other.ECnt84D) return false;
      if (ECnt105D != other.ECnt105D) return false;
      if (ECnt126D != other.ECnt126D) return false;
      if (ECnt189D != other.ECnt189D) return false;
      if (ECnt252D != other.ECnt252D) return false;
      if (ECnt378D != other.ECnt378D) return false;
      if (ECnt504D != other.ECnt504D) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (HEMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMove);
      if (HEMoveNum != 0) hash ^= HEMoveNum.GetHashCode();
      if (HEMoveAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMoveAvg);
      if (HEMoveStd != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMoveStd);
      if (HEMoveMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMoveMin);
      if (HEMoveMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HEMoveMax);
      if (IEMove != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEMove);
      if (IEFitCode != global::Spiderrock.Protobuf.EFitCode.Unspecified) hash ^= IEFitCode.GetHashCode();
      if (IEFitError != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEFitError);
      if (ExpiryCount != 0) hash ^= ExpiryCount.GetHashCode();
      if (IEMoveAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEMoveAvg);
      if (IEMoveStd != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEMoveStd);
      if (IEMoveMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEMoveMin);
      if (IEMoveMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IEMoveMax);
      if (IEMoveCnt != 0) hash ^= IEMoveCnt.GetHashCode();
      if (EMoveExpAdj1 != 0) hash ^= EMoveExpAdj1.GetHashCode();
      if (EMoveYrsAdj1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EMoveYrsAdj1);
      if (EMoveYears1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EMoveYears1);
      if (eMoveEKey1_ != null) hash ^= EMoveEKey1.GetHashCode();
      if (EMoveExpAdj2 != 0) hash ^= EMoveExpAdj2.GetHashCode();
      if (EMoveYrsAdj2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EMoveYrsAdj2);
      if (EMoveYears2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EMoveYears2);
      if (eMoveEKey2_ != null) hash ^= EMoveEKey2.GetHashCode();
      if (AtmCenISt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenISt);
      if (AtmCenILt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenILt);
      if (AtmCenIDecay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenIDecay);
      if (AtmCenI5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI5D);
      if (AtmCenI10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI10D);
      if (AtmCenI21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI21D);
      if (AtmCenI42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI42D);
      if (AtmCenI63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI63D);
      if (AtmCenI84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI84D);
      if (AtmCenI105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI105D);
      if (AtmCenI126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI126D);
      if (AtmCenI189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI189D);
      if (AtmCenI252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI252D);
      if (AtmCenI378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI378D);
      if (AtmCenI504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenI504D);
      if (AtmCenHSt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenHSt);
      if (AtmCenHLt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenHLt);
      if (AtmCenHDecay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenHDecay);
      if (AtmCenH5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH5D);
      if (AtmCenH10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH10D);
      if (AtmCenH21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH21D);
      if (AtmCenH42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH42D);
      if (AtmCenH63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH63D);
      if (AtmCenH84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH84D);
      if (AtmCenH105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH105D);
      if (AtmCenH126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH126D);
      if (AtmCenH189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH189D);
      if (AtmCenH252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH252D);
      if (AtmCenH378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH378D);
      if (AtmCenH504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtmCenH504D);
      if (SDiv5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv5D);
      if (SDiv10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv10D);
      if (SDiv21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv21D);
      if (SDiv42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv42D);
      if (SDiv63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv63D);
      if (SDiv84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv84D);
      if (SDiv105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv105D);
      if (SDiv126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv126D);
      if (SDiv189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv189D);
      if (SDiv252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv252D);
      if (SDiv378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv378D);
      if (SDiv504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SDiv504D);
      if (FwdUPrc5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc5D);
      if (FwdUPrc10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc10D);
      if (FwdUPrc21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc21D);
      if (FwdUPrc42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc42D);
      if (FwdUPrc63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc63D);
      if (FwdUPrc84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc84D);
      if (FwdUPrc105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc105D);
      if (FwdUPrc126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc126D);
      if (FwdUPrc189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc189D);
      if (FwdUPrc252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc252D);
      if (FwdUPrc378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc378D);
      if (FwdUPrc504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FwdUPrc504D);
      if (VWidth5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth5D);
      if (VWidth10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth10D);
      if (VWidth21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth21D);
      if (VWidth42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth42D);
      if (VWidth63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth63D);
      if (VWidth84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth84D);
      if (VWidth105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth105D);
      if (VWidth126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth126D);
      if (VWidth189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth189D);
      if (VWidth252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth252D);
      if (VWidth378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth378D);
      if (VWidth504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth504D);
      if (VSlope5D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope5D);
      if (VSlope10D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope10D);
      if (VSlope21D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope21D);
      if (VSlope42D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope42D);
      if (VSlope63D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope63D);
      if (VSlope84D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope84D);
      if (VSlope105D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope105D);
      if (VSlope126D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope126D);
      if (VSlope189D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope189D);
      if (VSlope252D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope252D);
      if (VSlope378D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope378D);
      if (VSlope504D != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VSlope504D);
      if (ECnt5D != 0) hash ^= ECnt5D.GetHashCode();
      if (ECnt10D != 0) hash ^= ECnt10D.GetHashCode();
      if (ECnt21D != 0) hash ^= ECnt21D.GetHashCode();
      if (ECnt42D != 0) hash ^= ECnt42D.GetHashCode();
      if (ECnt63D != 0) hash ^= ECnt63D.GetHashCode();
      if (ECnt84D != 0) hash ^= ECnt84D.GetHashCode();
      if (ECnt105D != 0) hash ^= ECnt105D.GetHashCode();
      if (ECnt126D != 0) hash ^= ECnt126D.GetHashCode();
      if (ECnt189D != 0) hash ^= ECnt189D.GetHashCode();
      if (ECnt252D != 0) hash ^= ECnt252D.GetHashCode();
      if (ECnt378D != 0) hash ^= ECnt378D.GetHashCode();
      if (ECnt504D != 0) hash ^= ECnt504D.GetHashCode();
      if (Status != global::Spiderrock.Protobuf.CurveStatus.Unspecified) hash ^= Status.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (HEMove != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(HEMove);
      }
      if (HEMoveNum != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(HEMoveNum);
      }
      if (HEMoveAvg != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(HEMoveAvg);
      }
      if (HEMoveStd != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(HEMoveStd);
      }
      if (HEMoveMin != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(HEMoveMin);
      }
      if (HEMoveMax != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(HEMoveMax);
      }
      if (IEMove != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(IEMove);
      }
      if (IEFitCode != global::Spiderrock.Protobuf.EFitCode.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) IEFitCode);
      }
      if (IEFitError != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(IEFitError);
      }
      if (ExpiryCount != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(ExpiryCount);
      }
      if (IEMoveAvg != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(IEMoveAvg);
      }
      if (IEMoveStd != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(IEMoveStd);
      }
      if (IEMoveMin != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(IEMoveMin);
      }
      if (IEMoveMax != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(IEMoveMax);
      }
      if (IEMoveCnt != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(IEMoveCnt);
      }
      if (EMoveExpAdj1 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(EMoveExpAdj1);
      }
      if (EMoveYrsAdj1 != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(EMoveYrsAdj1);
      }
      if (EMoveYears1 != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(EMoveYears1);
      }
      if (eMoveEKey1_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(EMoveEKey1);
      }
      if (EMoveExpAdj2 != 0) {
        output.WriteRawTag(232, 9);
        output.WriteInt32(EMoveExpAdj2);
      }
      if (EMoveYrsAdj2 != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(EMoveYrsAdj2);
      }
      if (EMoveYears2 != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(EMoveYears2);
      }
      if (eMoveEKey2_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(EMoveEKey2);
      }
      if (AtmCenISt != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(AtmCenISt);
      }
      if (AtmCenILt != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(AtmCenILt);
      }
      if (AtmCenIDecay != 0F) {
        output.WriteRawTag(253, 10);
        output.WriteFloat(AtmCenIDecay);
      }
      if (AtmCenI5D != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(AtmCenI5D);
      }
      if (AtmCenI10D != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(AtmCenI10D);
      }
      if (AtmCenI21D != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(AtmCenI21D);
      }
      if (AtmCenI42D != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(AtmCenI42D);
      }
      if (AtmCenI63D != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(AtmCenI63D);
      }
      if (AtmCenI84D != 0F) {
        output.WriteRawTag(141, 12);
        output.WriteFloat(AtmCenI84D);
      }
      if (AtmCenI105D != 0F) {
        output.WriteRawTag(165, 12);
        output.WriteFloat(AtmCenI105D);
      }
      if (AtmCenI126D != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(AtmCenI126D);
      }
      if (AtmCenI189D != 0F) {
        output.WriteRawTag(213, 12);
        output.WriteFloat(AtmCenI189D);
      }
      if (AtmCenI252D != 0F) {
        output.WriteRawTag(237, 12);
        output.WriteFloat(AtmCenI252D);
      }
      if (AtmCenI378D != 0F) {
        output.WriteRawTag(133, 13);
        output.WriteFloat(AtmCenI378D);
      }
      if (AtmCenI504D != 0F) {
        output.WriteRawTag(157, 13);
        output.WriteFloat(AtmCenI504D);
      }
      if (AtmCenHSt != 0F) {
        output.WriteRawTag(181, 13);
        output.WriteFloat(AtmCenHSt);
      }
      if (AtmCenHLt != 0F) {
        output.WriteRawTag(205, 13);
        output.WriteFloat(AtmCenHLt);
      }
      if (AtmCenHDecay != 0F) {
        output.WriteRawTag(229, 13);
        output.WriteFloat(AtmCenHDecay);
      }
      if (AtmCenH5D != 0F) {
        output.WriteRawTag(253, 13);
        output.WriteFloat(AtmCenH5D);
      }
      if (AtmCenH10D != 0F) {
        output.WriteRawTag(149, 14);
        output.WriteFloat(AtmCenH10D);
      }
      if (AtmCenH21D != 0F) {
        output.WriteRawTag(173, 14);
        output.WriteFloat(AtmCenH21D);
      }
      if (AtmCenH42D != 0F) {
        output.WriteRawTag(197, 14);
        output.WriteFloat(AtmCenH42D);
      }
      if (AtmCenH63D != 0F) {
        output.WriteRawTag(221, 14);
        output.WriteFloat(AtmCenH63D);
      }
      if (AtmCenH84D != 0F) {
        output.WriteRawTag(245, 14);
        output.WriteFloat(AtmCenH84D);
      }
      if (AtmCenH105D != 0F) {
        output.WriteRawTag(141, 15);
        output.WriteFloat(AtmCenH105D);
      }
      if (AtmCenH126D != 0F) {
        output.WriteRawTag(165, 15);
        output.WriteFloat(AtmCenH126D);
      }
      if (AtmCenH189D != 0F) {
        output.WriteRawTag(189, 15);
        output.WriteFloat(AtmCenH189D);
      }
      if (AtmCenH252D != 0F) {
        output.WriteRawTag(213, 15);
        output.WriteFloat(AtmCenH252D);
      }
      if (AtmCenH378D != 0F) {
        output.WriteRawTag(237, 15);
        output.WriteFloat(AtmCenH378D);
      }
      if (AtmCenH504D != 0F) {
        output.WriteRawTag(133, 16);
        output.WriteFloat(AtmCenH504D);
      }
      if (SDiv5D != 0F) {
        output.WriteRawTag(157, 16);
        output.WriteFloat(SDiv5D);
      }
      if (SDiv10D != 0F) {
        output.WriteRawTag(181, 16);
        output.WriteFloat(SDiv10D);
      }
      if (SDiv21D != 0F) {
        output.WriteRawTag(205, 16);
        output.WriteFloat(SDiv21D);
      }
      if (SDiv42D != 0F) {
        output.WriteRawTag(229, 16);
        output.WriteFloat(SDiv42D);
      }
      if (SDiv63D != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(SDiv63D);
      }
      if (SDiv84D != 0F) {
        output.WriteRawTag(149, 17);
        output.WriteFloat(SDiv84D);
      }
      if (SDiv105D != 0F) {
        output.WriteRawTag(173, 17);
        output.WriteFloat(SDiv105D);
      }
      if (SDiv126D != 0F) {
        output.WriteRawTag(197, 17);
        output.WriteFloat(SDiv126D);
      }
      if (SDiv189D != 0F) {
        output.WriteRawTag(221, 17);
        output.WriteFloat(SDiv189D);
      }
      if (SDiv252D != 0F) {
        output.WriteRawTag(245, 17);
        output.WriteFloat(SDiv252D);
      }
      if (SDiv378D != 0F) {
        output.WriteRawTag(141, 18);
        output.WriteFloat(SDiv378D);
      }
      if (SDiv504D != 0F) {
        output.WriteRawTag(165, 18);
        output.WriteFloat(SDiv504D);
      }
      if (FwdUPrc5D != 0F) {
        output.WriteRawTag(189, 18);
        output.WriteFloat(FwdUPrc5D);
      }
      if (FwdUPrc10D != 0F) {
        output.WriteRawTag(213, 18);
        output.WriteFloat(FwdUPrc10D);
      }
      if (FwdUPrc21D != 0F) {
        output.WriteRawTag(237, 18);
        output.WriteFloat(FwdUPrc21D);
      }
      if (FwdUPrc42D != 0F) {
        output.WriteRawTag(133, 19);
        output.WriteFloat(FwdUPrc42D);
      }
      if (FwdUPrc63D != 0F) {
        output.WriteRawTag(157, 19);
        output.WriteFloat(FwdUPrc63D);
      }
      if (FwdUPrc84D != 0F) {
        output.WriteRawTag(181, 19);
        output.WriteFloat(FwdUPrc84D);
      }
      if (FwdUPrc105D != 0F) {
        output.WriteRawTag(205, 19);
        output.WriteFloat(FwdUPrc105D);
      }
      if (FwdUPrc126D != 0F) {
        output.WriteRawTag(229, 19);
        output.WriteFloat(FwdUPrc126D);
      }
      if (FwdUPrc189D != 0F) {
        output.WriteRawTag(253, 19);
        output.WriteFloat(FwdUPrc189D);
      }
      if (FwdUPrc252D != 0F) {
        output.WriteRawTag(149, 20);
        output.WriteFloat(FwdUPrc252D);
      }
      if (FwdUPrc378D != 0F) {
        output.WriteRawTag(173, 20);
        output.WriteFloat(FwdUPrc378D);
      }
      if (FwdUPrc504D != 0F) {
        output.WriteRawTag(197, 20);
        output.WriteFloat(FwdUPrc504D);
      }
      if (VWidth5D != 0F) {
        output.WriteRawTag(221, 20);
        output.WriteFloat(VWidth5D);
      }
      if (VWidth10D != 0F) {
        output.WriteRawTag(245, 20);
        output.WriteFloat(VWidth10D);
      }
      if (VWidth21D != 0F) {
        output.WriteRawTag(141, 21);
        output.WriteFloat(VWidth21D);
      }
      if (VWidth42D != 0F) {
        output.WriteRawTag(165, 21);
        output.WriteFloat(VWidth42D);
      }
      if (VWidth63D != 0F) {
        output.WriteRawTag(189, 21);
        output.WriteFloat(VWidth63D);
      }
      if (VWidth84D != 0F) {
        output.WriteRawTag(213, 21);
        output.WriteFloat(VWidth84D);
      }
      if (VWidth105D != 0F) {
        output.WriteRawTag(237, 21);
        output.WriteFloat(VWidth105D);
      }
      if (VWidth126D != 0F) {
        output.WriteRawTag(133, 22);
        output.WriteFloat(VWidth126D);
      }
      if (VWidth189D != 0F) {
        output.WriteRawTag(157, 22);
        output.WriteFloat(VWidth189D);
      }
      if (VWidth252D != 0F) {
        output.WriteRawTag(181, 22);
        output.WriteFloat(VWidth252D);
      }
      if (VWidth378D != 0F) {
        output.WriteRawTag(205, 22);
        output.WriteFloat(VWidth378D);
      }
      if (VWidth504D != 0F) {
        output.WriteRawTag(229, 22);
        output.WriteFloat(VWidth504D);
      }
      if (VSlope5D != 0F) {
        output.WriteRawTag(253, 22);
        output.WriteFloat(VSlope5D);
      }
      if (VSlope10D != 0F) {
        output.WriteRawTag(149, 23);
        output.WriteFloat(VSlope10D);
      }
      if (VSlope21D != 0F) {
        output.WriteRawTag(173, 23);
        output.WriteFloat(VSlope21D);
      }
      if (VSlope42D != 0F) {
        output.WriteRawTag(197, 23);
        output.WriteFloat(VSlope42D);
      }
      if (VSlope63D != 0F) {
        output.WriteRawTag(221, 23);
        output.WriteFloat(VSlope63D);
      }
      if (VSlope84D != 0F) {
        output.WriteRawTag(245, 23);
        output.WriteFloat(VSlope84D);
      }
      if (VSlope105D != 0F) {
        output.WriteRawTag(141, 24);
        output.WriteFloat(VSlope105D);
      }
      if (VSlope126D != 0F) {
        output.WriteRawTag(165, 24);
        output.WriteFloat(VSlope126D);
      }
      if (VSlope189D != 0F) {
        output.WriteRawTag(189, 24);
        output.WriteFloat(VSlope189D);
      }
      if (VSlope252D != 0F) {
        output.WriteRawTag(213, 24);
        output.WriteFloat(VSlope252D);
      }
      if (VSlope378D != 0F) {
        output.WriteRawTag(237, 24);
        output.WriteFloat(VSlope378D);
      }
      if (VSlope504D != 0F) {
        output.WriteRawTag(133, 25);
        output.WriteFloat(VSlope504D);
      }
      if (ECnt5D != 0) {
        output.WriteRawTag(152, 25);
        output.WriteInt32(ECnt5D);
      }
      if (ECnt10D != 0) {
        output.WriteRawTag(176, 25);
        output.WriteInt32(ECnt10D);
      }
      if (ECnt21D != 0) {
        output.WriteRawTag(200, 25);
        output.WriteInt32(ECnt21D);
      }
      if (ECnt42D != 0) {
        output.WriteRawTag(224, 25);
        output.WriteInt32(ECnt42D);
      }
      if (ECnt63D != 0) {
        output.WriteRawTag(248, 25);
        output.WriteInt32(ECnt63D);
      }
      if (ECnt84D != 0) {
        output.WriteRawTag(144, 26);
        output.WriteInt32(ECnt84D);
      }
      if (ECnt105D != 0) {
        output.WriteRawTag(168, 26);
        output.WriteInt32(ECnt105D);
      }
      if (ECnt126D != 0) {
        output.WriteRawTag(192, 26);
        output.WriteInt32(ECnt126D);
      }
      if (ECnt189D != 0) {
        output.WriteRawTag(216, 26);
        output.WriteInt32(ECnt189D);
      }
      if (ECnt252D != 0) {
        output.WriteRawTag(240, 26);
        output.WriteInt32(ECnt252D);
      }
      if (ECnt378D != 0) {
        output.WriteRawTag(136, 27);
        output.WriteInt32(ECnt378D);
      }
      if (ECnt504D != 0) {
        output.WriteRawTag(160, 27);
        output.WriteInt32(ECnt504D);
      }
      if (Status != global::Spiderrock.Protobuf.CurveStatus.Unspecified) {
        output.WriteRawTag(184, 27);
        output.WriteEnum((int) Status);
      }
      if (time_ != null) {
        output.WriteRawTag(210, 27);
        output.WriteMessage(Time);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(234, 27);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (HEMove != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(HEMove);
      }
      if (HEMoveNum != 0) {
        output.WriteRawTag(184, 6);
        output.WriteInt32(HEMoveNum);
      }
      if (HEMoveAvg != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(HEMoveAvg);
      }
      if (HEMoveStd != 0F) {
        output.WriteRawTag(237, 6);
        output.WriteFloat(HEMoveStd);
      }
      if (HEMoveMin != 0F) {
        output.WriteRawTag(133, 7);
        output.WriteFloat(HEMoveMin);
      }
      if (HEMoveMax != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(HEMoveMax);
      }
      if (IEMove != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(IEMove);
      }
      if (IEFitCode != global::Spiderrock.Protobuf.EFitCode.Unspecified) {
        output.WriteRawTag(200, 7);
        output.WriteEnum((int) IEFitCode);
      }
      if (IEFitError != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(IEFitError);
      }
      if (ExpiryCount != 0) {
        output.WriteRawTag(248, 7);
        output.WriteInt32(ExpiryCount);
      }
      if (IEMoveAvg != 0F) {
        output.WriteRawTag(149, 8);
        output.WriteFloat(IEMoveAvg);
      }
      if (IEMoveStd != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(IEMoveStd);
      }
      if (IEMoveMin != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(IEMoveMin);
      }
      if (IEMoveMax != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(IEMoveMax);
      }
      if (IEMoveCnt != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(IEMoveCnt);
      }
      if (EMoveExpAdj1 != 0) {
        output.WriteRawTag(136, 9);
        output.WriteInt32(EMoveExpAdj1);
      }
      if (EMoveYrsAdj1 != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(EMoveYrsAdj1);
      }
      if (EMoveYears1 != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(EMoveYears1);
      }
      if (eMoveEKey1_ != null) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(EMoveEKey1);
      }
      if (EMoveExpAdj2 != 0) {
        output.WriteRawTag(232, 9);
        output.WriteInt32(EMoveExpAdj2);
      }
      if (EMoveYrsAdj2 != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(EMoveYrsAdj2);
      }
      if (EMoveYears2 != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(EMoveYears2);
      }
      if (eMoveEKey2_ != null) {
        output.WriteRawTag(178, 10);
        output.WriteMessage(EMoveEKey2);
      }
      if (AtmCenISt != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(AtmCenISt);
      }
      if (AtmCenILt != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(AtmCenILt);
      }
      if (AtmCenIDecay != 0F) {
        output.WriteRawTag(253, 10);
        output.WriteFloat(AtmCenIDecay);
      }
      if (AtmCenI5D != 0F) {
        output.WriteRawTag(149, 11);
        output.WriteFloat(AtmCenI5D);
      }
      if (AtmCenI10D != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(AtmCenI10D);
      }
      if (AtmCenI21D != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(AtmCenI21D);
      }
      if (AtmCenI42D != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(AtmCenI42D);
      }
      if (AtmCenI63D != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(AtmCenI63D);
      }
      if (AtmCenI84D != 0F) {
        output.WriteRawTag(141, 12);
        output.WriteFloat(AtmCenI84D);
      }
      if (AtmCenI105D != 0F) {
        output.WriteRawTag(165, 12);
        output.WriteFloat(AtmCenI105D);
      }
      if (AtmCenI126D != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(AtmCenI126D);
      }
      if (AtmCenI189D != 0F) {
        output.WriteRawTag(213, 12);
        output.WriteFloat(AtmCenI189D);
      }
      if (AtmCenI252D != 0F) {
        output.WriteRawTag(237, 12);
        output.WriteFloat(AtmCenI252D);
      }
      if (AtmCenI378D != 0F) {
        output.WriteRawTag(133, 13);
        output.WriteFloat(AtmCenI378D);
      }
      if (AtmCenI504D != 0F) {
        output.WriteRawTag(157, 13);
        output.WriteFloat(AtmCenI504D);
      }
      if (AtmCenHSt != 0F) {
        output.WriteRawTag(181, 13);
        output.WriteFloat(AtmCenHSt);
      }
      if (AtmCenHLt != 0F) {
        output.WriteRawTag(205, 13);
        output.WriteFloat(AtmCenHLt);
      }
      if (AtmCenHDecay != 0F) {
        output.WriteRawTag(229, 13);
        output.WriteFloat(AtmCenHDecay);
      }
      if (AtmCenH5D != 0F) {
        output.WriteRawTag(253, 13);
        output.WriteFloat(AtmCenH5D);
      }
      if (AtmCenH10D != 0F) {
        output.WriteRawTag(149, 14);
        output.WriteFloat(AtmCenH10D);
      }
      if (AtmCenH21D != 0F) {
        output.WriteRawTag(173, 14);
        output.WriteFloat(AtmCenH21D);
      }
      if (AtmCenH42D != 0F) {
        output.WriteRawTag(197, 14);
        output.WriteFloat(AtmCenH42D);
      }
      if (AtmCenH63D != 0F) {
        output.WriteRawTag(221, 14);
        output.WriteFloat(AtmCenH63D);
      }
      if (AtmCenH84D != 0F) {
        output.WriteRawTag(245, 14);
        output.WriteFloat(AtmCenH84D);
      }
      if (AtmCenH105D != 0F) {
        output.WriteRawTag(141, 15);
        output.WriteFloat(AtmCenH105D);
      }
      if (AtmCenH126D != 0F) {
        output.WriteRawTag(165, 15);
        output.WriteFloat(AtmCenH126D);
      }
      if (AtmCenH189D != 0F) {
        output.WriteRawTag(189, 15);
        output.WriteFloat(AtmCenH189D);
      }
      if (AtmCenH252D != 0F) {
        output.WriteRawTag(213, 15);
        output.WriteFloat(AtmCenH252D);
      }
      if (AtmCenH378D != 0F) {
        output.WriteRawTag(237, 15);
        output.WriteFloat(AtmCenH378D);
      }
      if (AtmCenH504D != 0F) {
        output.WriteRawTag(133, 16);
        output.WriteFloat(AtmCenH504D);
      }
      if (SDiv5D != 0F) {
        output.WriteRawTag(157, 16);
        output.WriteFloat(SDiv5D);
      }
      if (SDiv10D != 0F) {
        output.WriteRawTag(181, 16);
        output.WriteFloat(SDiv10D);
      }
      if (SDiv21D != 0F) {
        output.WriteRawTag(205, 16);
        output.WriteFloat(SDiv21D);
      }
      if (SDiv42D != 0F) {
        output.WriteRawTag(229, 16);
        output.WriteFloat(SDiv42D);
      }
      if (SDiv63D != 0F) {
        output.WriteRawTag(253, 16);
        output.WriteFloat(SDiv63D);
      }
      if (SDiv84D != 0F) {
        output.WriteRawTag(149, 17);
        output.WriteFloat(SDiv84D);
      }
      if (SDiv105D != 0F) {
        output.WriteRawTag(173, 17);
        output.WriteFloat(SDiv105D);
      }
      if (SDiv126D != 0F) {
        output.WriteRawTag(197, 17);
        output.WriteFloat(SDiv126D);
      }
      if (SDiv189D != 0F) {
        output.WriteRawTag(221, 17);
        output.WriteFloat(SDiv189D);
      }
      if (SDiv252D != 0F) {
        output.WriteRawTag(245, 17);
        output.WriteFloat(SDiv252D);
      }
      if (SDiv378D != 0F) {
        output.WriteRawTag(141, 18);
        output.WriteFloat(SDiv378D);
      }
      if (SDiv504D != 0F) {
        output.WriteRawTag(165, 18);
        output.WriteFloat(SDiv504D);
      }
      if (FwdUPrc5D != 0F) {
        output.WriteRawTag(189, 18);
        output.WriteFloat(FwdUPrc5D);
      }
      if (FwdUPrc10D != 0F) {
        output.WriteRawTag(213, 18);
        output.WriteFloat(FwdUPrc10D);
      }
      if (FwdUPrc21D != 0F) {
        output.WriteRawTag(237, 18);
        output.WriteFloat(FwdUPrc21D);
      }
      if (FwdUPrc42D != 0F) {
        output.WriteRawTag(133, 19);
        output.WriteFloat(FwdUPrc42D);
      }
      if (FwdUPrc63D != 0F) {
        output.WriteRawTag(157, 19);
        output.WriteFloat(FwdUPrc63D);
      }
      if (FwdUPrc84D != 0F) {
        output.WriteRawTag(181, 19);
        output.WriteFloat(FwdUPrc84D);
      }
      if (FwdUPrc105D != 0F) {
        output.WriteRawTag(205, 19);
        output.WriteFloat(FwdUPrc105D);
      }
      if (FwdUPrc126D != 0F) {
        output.WriteRawTag(229, 19);
        output.WriteFloat(FwdUPrc126D);
      }
      if (FwdUPrc189D != 0F) {
        output.WriteRawTag(253, 19);
        output.WriteFloat(FwdUPrc189D);
      }
      if (FwdUPrc252D != 0F) {
        output.WriteRawTag(149, 20);
        output.WriteFloat(FwdUPrc252D);
      }
      if (FwdUPrc378D != 0F) {
        output.WriteRawTag(173, 20);
        output.WriteFloat(FwdUPrc378D);
      }
      if (FwdUPrc504D != 0F) {
        output.WriteRawTag(197, 20);
        output.WriteFloat(FwdUPrc504D);
      }
      if (VWidth5D != 0F) {
        output.WriteRawTag(221, 20);
        output.WriteFloat(VWidth5D);
      }
      if (VWidth10D != 0F) {
        output.WriteRawTag(245, 20);
        output.WriteFloat(VWidth10D);
      }
      if (VWidth21D != 0F) {
        output.WriteRawTag(141, 21);
        output.WriteFloat(VWidth21D);
      }
      if (VWidth42D != 0F) {
        output.WriteRawTag(165, 21);
        output.WriteFloat(VWidth42D);
      }
      if (VWidth63D != 0F) {
        output.WriteRawTag(189, 21);
        output.WriteFloat(VWidth63D);
      }
      if (VWidth84D != 0F) {
        output.WriteRawTag(213, 21);
        output.WriteFloat(VWidth84D);
      }
      if (VWidth105D != 0F) {
        output.WriteRawTag(237, 21);
        output.WriteFloat(VWidth105D);
      }
      if (VWidth126D != 0F) {
        output.WriteRawTag(133, 22);
        output.WriteFloat(VWidth126D);
      }
      if (VWidth189D != 0F) {
        output.WriteRawTag(157, 22);
        output.WriteFloat(VWidth189D);
      }
      if (VWidth252D != 0F) {
        output.WriteRawTag(181, 22);
        output.WriteFloat(VWidth252D);
      }
      if (VWidth378D != 0F) {
        output.WriteRawTag(205, 22);
        output.WriteFloat(VWidth378D);
      }
      if (VWidth504D != 0F) {
        output.WriteRawTag(229, 22);
        output.WriteFloat(VWidth504D);
      }
      if (VSlope5D != 0F) {
        output.WriteRawTag(253, 22);
        output.WriteFloat(VSlope5D);
      }
      if (VSlope10D != 0F) {
        output.WriteRawTag(149, 23);
        output.WriteFloat(VSlope10D);
      }
      if (VSlope21D != 0F) {
        output.WriteRawTag(173, 23);
        output.WriteFloat(VSlope21D);
      }
      if (VSlope42D != 0F) {
        output.WriteRawTag(197, 23);
        output.WriteFloat(VSlope42D);
      }
      if (VSlope63D != 0F) {
        output.WriteRawTag(221, 23);
        output.WriteFloat(VSlope63D);
      }
      if (VSlope84D != 0F) {
        output.WriteRawTag(245, 23);
        output.WriteFloat(VSlope84D);
      }
      if (VSlope105D != 0F) {
        output.WriteRawTag(141, 24);
        output.WriteFloat(VSlope105D);
      }
      if (VSlope126D != 0F) {
        output.WriteRawTag(165, 24);
        output.WriteFloat(VSlope126D);
      }
      if (VSlope189D != 0F) {
        output.WriteRawTag(189, 24);
        output.WriteFloat(VSlope189D);
      }
      if (VSlope252D != 0F) {
        output.WriteRawTag(213, 24);
        output.WriteFloat(VSlope252D);
      }
      if (VSlope378D != 0F) {
        output.WriteRawTag(237, 24);
        output.WriteFloat(VSlope378D);
      }
      if (VSlope504D != 0F) {
        output.WriteRawTag(133, 25);
        output.WriteFloat(VSlope504D);
      }
      if (ECnt5D != 0) {
        output.WriteRawTag(152, 25);
        output.WriteInt32(ECnt5D);
      }
      if (ECnt10D != 0) {
        output.WriteRawTag(176, 25);
        output.WriteInt32(ECnt10D);
      }
      if (ECnt21D != 0) {
        output.WriteRawTag(200, 25);
        output.WriteInt32(ECnt21D);
      }
      if (ECnt42D != 0) {
        output.WriteRawTag(224, 25);
        output.WriteInt32(ECnt42D);
      }
      if (ECnt63D != 0) {
        output.WriteRawTag(248, 25);
        output.WriteInt32(ECnt63D);
      }
      if (ECnt84D != 0) {
        output.WriteRawTag(144, 26);
        output.WriteInt32(ECnt84D);
      }
      if (ECnt105D != 0) {
        output.WriteRawTag(168, 26);
        output.WriteInt32(ECnt105D);
      }
      if (ECnt126D != 0) {
        output.WriteRawTag(192, 26);
        output.WriteInt32(ECnt126D);
      }
      if (ECnt189D != 0) {
        output.WriteRawTag(216, 26);
        output.WriteInt32(ECnt189D);
      }
      if (ECnt252D != 0) {
        output.WriteRawTag(240, 26);
        output.WriteInt32(ECnt252D);
      }
      if (ECnt378D != 0) {
        output.WriteRawTag(136, 27);
        output.WriteInt32(ECnt378D);
      }
      if (ECnt504D != 0) {
        output.WriteRawTag(160, 27);
        output.WriteInt32(ECnt504D);
      }
      if (Status != global::Spiderrock.Protobuf.CurveStatus.Unspecified) {
        output.WriteRawTag(184, 27);
        output.WriteEnum((int) Status);
      }
      if (time_ != null) {
        output.WriteRawTag(210, 27);
        output.WriteMessage(Time);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(234, 27);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (HEMove != 0F) {
        size += 2 + 4;
      }
      if (HEMoveNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HEMoveNum);
      }
      if (HEMoveAvg != 0F) {
        size += 2 + 4;
      }
      if (HEMoveStd != 0F) {
        size += 2 + 4;
      }
      if (HEMoveMin != 0F) {
        size += 2 + 4;
      }
      if (HEMoveMax != 0F) {
        size += 2 + 4;
      }
      if (IEMove != 0F) {
        size += 2 + 4;
      }
      if (IEFitCode != global::Spiderrock.Protobuf.EFitCode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IEFitCode);
      }
      if (IEFitError != 0F) {
        size += 2 + 4;
      }
      if (ExpiryCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExpiryCount);
      }
      if (IEMoveAvg != 0F) {
        size += 2 + 4;
      }
      if (IEMoveStd != 0F) {
        size += 2 + 4;
      }
      if (IEMoveMin != 0F) {
        size += 2 + 4;
      }
      if (IEMoveMax != 0F) {
        size += 2 + 4;
      }
      if (IEMoveCnt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IEMoveCnt);
      }
      if (EMoveExpAdj1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EMoveExpAdj1);
      }
      if (EMoveYrsAdj1 != 0F) {
        size += 2 + 4;
      }
      if (EMoveYears1 != 0F) {
        size += 2 + 4;
      }
      if (eMoveEKey1_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EMoveEKey1);
      }
      if (EMoveExpAdj2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EMoveExpAdj2);
      }
      if (EMoveYrsAdj2 != 0F) {
        size += 2 + 4;
      }
      if (EMoveYears2 != 0F) {
        size += 2 + 4;
      }
      if (eMoveEKey2_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EMoveEKey2);
      }
      if (AtmCenISt != 0F) {
        size += 2 + 4;
      }
      if (AtmCenILt != 0F) {
        size += 2 + 4;
      }
      if (AtmCenIDecay != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI5D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI10D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI21D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI42D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI63D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI84D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI105D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI126D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI189D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI252D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI378D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenI504D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenHSt != 0F) {
        size += 2 + 4;
      }
      if (AtmCenHLt != 0F) {
        size += 2 + 4;
      }
      if (AtmCenHDecay != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH5D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH10D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH21D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH42D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH63D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH84D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH105D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH126D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH189D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH252D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH378D != 0F) {
        size += 2 + 4;
      }
      if (AtmCenH504D != 0F) {
        size += 2 + 4;
      }
      if (SDiv5D != 0F) {
        size += 2 + 4;
      }
      if (SDiv10D != 0F) {
        size += 2 + 4;
      }
      if (SDiv21D != 0F) {
        size += 2 + 4;
      }
      if (SDiv42D != 0F) {
        size += 2 + 4;
      }
      if (SDiv63D != 0F) {
        size += 2 + 4;
      }
      if (SDiv84D != 0F) {
        size += 2 + 4;
      }
      if (SDiv105D != 0F) {
        size += 2 + 4;
      }
      if (SDiv126D != 0F) {
        size += 2 + 4;
      }
      if (SDiv189D != 0F) {
        size += 2 + 4;
      }
      if (SDiv252D != 0F) {
        size += 2 + 4;
      }
      if (SDiv378D != 0F) {
        size += 2 + 4;
      }
      if (SDiv504D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc5D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc10D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc21D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc42D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc63D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc84D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc105D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc126D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc189D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc252D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc378D != 0F) {
        size += 2 + 4;
      }
      if (FwdUPrc504D != 0F) {
        size += 2 + 4;
      }
      if (VWidth5D != 0F) {
        size += 2 + 4;
      }
      if (VWidth10D != 0F) {
        size += 2 + 4;
      }
      if (VWidth21D != 0F) {
        size += 2 + 4;
      }
      if (VWidth42D != 0F) {
        size += 2 + 4;
      }
      if (VWidth63D != 0F) {
        size += 2 + 4;
      }
      if (VWidth84D != 0F) {
        size += 2 + 4;
      }
      if (VWidth105D != 0F) {
        size += 2 + 4;
      }
      if (VWidth126D != 0F) {
        size += 2 + 4;
      }
      if (VWidth189D != 0F) {
        size += 2 + 4;
      }
      if (VWidth252D != 0F) {
        size += 2 + 4;
      }
      if (VWidth378D != 0F) {
        size += 2 + 4;
      }
      if (VWidth504D != 0F) {
        size += 2 + 4;
      }
      if (VSlope5D != 0F) {
        size += 2 + 4;
      }
      if (VSlope10D != 0F) {
        size += 2 + 4;
      }
      if (VSlope21D != 0F) {
        size += 2 + 4;
      }
      if (VSlope42D != 0F) {
        size += 2 + 4;
      }
      if (VSlope63D != 0F) {
        size += 2 + 4;
      }
      if (VSlope84D != 0F) {
        size += 2 + 4;
      }
      if (VSlope105D != 0F) {
        size += 2 + 4;
      }
      if (VSlope126D != 0F) {
        size += 2 + 4;
      }
      if (VSlope189D != 0F) {
        size += 2 + 4;
      }
      if (VSlope252D != 0F) {
        size += 2 + 4;
      }
      if (VSlope378D != 0F) {
        size += 2 + 4;
      }
      if (VSlope504D != 0F) {
        size += 2 + 4;
      }
      if (ECnt5D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt5D);
      }
      if (ECnt10D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt10D);
      }
      if (ECnt21D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt21D);
      }
      if (ECnt42D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt42D);
      }
      if (ECnt63D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt63D);
      }
      if (ECnt84D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt84D);
      }
      if (ECnt105D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt105D);
      }
      if (ECnt126D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt126D);
      }
      if (ECnt189D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt189D);
      }
      if (ECnt252D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt252D);
      }
      if (ECnt378D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt378D);
      }
      if (ECnt504D != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ECnt504D);
      }
      if (Status != global::Spiderrock.Protobuf.CurveStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (time_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LiveSurfaceFixedTerm other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.HEMove != 0F) {
        HEMove = other.HEMove;
      }
      if (other.HEMoveNum != 0) {
        HEMoveNum = other.HEMoveNum;
      }
      if (other.HEMoveAvg != 0F) {
        HEMoveAvg = other.HEMoveAvg;
      }
      if (other.HEMoveStd != 0F) {
        HEMoveStd = other.HEMoveStd;
      }
      if (other.HEMoveMin != 0F) {
        HEMoveMin = other.HEMoveMin;
      }
      if (other.HEMoveMax != 0F) {
        HEMoveMax = other.HEMoveMax;
      }
      if (other.IEMove != 0F) {
        IEMove = other.IEMove;
      }
      if (other.IEFitCode != global::Spiderrock.Protobuf.EFitCode.Unspecified) {
        IEFitCode = other.IEFitCode;
      }
      if (other.IEFitError != 0F) {
        IEFitError = other.IEFitError;
      }
      if (other.ExpiryCount != 0) {
        ExpiryCount = other.ExpiryCount;
      }
      if (other.IEMoveAvg != 0F) {
        IEMoveAvg = other.IEMoveAvg;
      }
      if (other.IEMoveStd != 0F) {
        IEMoveStd = other.IEMoveStd;
      }
      if (other.IEMoveMin != 0F) {
        IEMoveMin = other.IEMoveMin;
      }
      if (other.IEMoveMax != 0F) {
        IEMoveMax = other.IEMoveMax;
      }
      if (other.IEMoveCnt != 0) {
        IEMoveCnt = other.IEMoveCnt;
      }
      if (other.EMoveExpAdj1 != 0) {
        EMoveExpAdj1 = other.EMoveExpAdj1;
      }
      if (other.EMoveYrsAdj1 != 0F) {
        EMoveYrsAdj1 = other.EMoveYrsAdj1;
      }
      if (other.EMoveYears1 != 0F) {
        EMoveYears1 = other.EMoveYears1;
      }
      if (other.eMoveEKey1_ != null) {
        if (eMoveEKey1_ == null) {
          EMoveEKey1 = new global::Spiderrock.Protobuf.ExpiryKey();
        }
        EMoveEKey1.MergeFrom(other.EMoveEKey1);
      }
      if (other.EMoveExpAdj2 != 0) {
        EMoveExpAdj2 = other.EMoveExpAdj2;
      }
      if (other.EMoveYrsAdj2 != 0F) {
        EMoveYrsAdj2 = other.EMoveYrsAdj2;
      }
      if (other.EMoveYears2 != 0F) {
        EMoveYears2 = other.EMoveYears2;
      }
      if (other.eMoveEKey2_ != null) {
        if (eMoveEKey2_ == null) {
          EMoveEKey2 = new global::Spiderrock.Protobuf.ExpiryKey();
        }
        EMoveEKey2.MergeFrom(other.EMoveEKey2);
      }
      if (other.AtmCenISt != 0F) {
        AtmCenISt = other.AtmCenISt;
      }
      if (other.AtmCenILt != 0F) {
        AtmCenILt = other.AtmCenILt;
      }
      if (other.AtmCenIDecay != 0F) {
        AtmCenIDecay = other.AtmCenIDecay;
      }
      if (other.AtmCenI5D != 0F) {
        AtmCenI5D = other.AtmCenI5D;
      }
      if (other.AtmCenI10D != 0F) {
        AtmCenI10D = other.AtmCenI10D;
      }
      if (other.AtmCenI21D != 0F) {
        AtmCenI21D = other.AtmCenI21D;
      }
      if (other.AtmCenI42D != 0F) {
        AtmCenI42D = other.AtmCenI42D;
      }
      if (other.AtmCenI63D != 0F) {
        AtmCenI63D = other.AtmCenI63D;
      }
      if (other.AtmCenI84D != 0F) {
        AtmCenI84D = other.AtmCenI84D;
      }
      if (other.AtmCenI105D != 0F) {
        AtmCenI105D = other.AtmCenI105D;
      }
      if (other.AtmCenI126D != 0F) {
        AtmCenI126D = other.AtmCenI126D;
      }
      if (other.AtmCenI189D != 0F) {
        AtmCenI189D = other.AtmCenI189D;
      }
      if (other.AtmCenI252D != 0F) {
        AtmCenI252D = other.AtmCenI252D;
      }
      if (other.AtmCenI378D != 0F) {
        AtmCenI378D = other.AtmCenI378D;
      }
      if (other.AtmCenI504D != 0F) {
        AtmCenI504D = other.AtmCenI504D;
      }
      if (other.AtmCenHSt != 0F) {
        AtmCenHSt = other.AtmCenHSt;
      }
      if (other.AtmCenHLt != 0F) {
        AtmCenHLt = other.AtmCenHLt;
      }
      if (other.AtmCenHDecay != 0F) {
        AtmCenHDecay = other.AtmCenHDecay;
      }
      if (other.AtmCenH5D != 0F) {
        AtmCenH5D = other.AtmCenH5D;
      }
      if (other.AtmCenH10D != 0F) {
        AtmCenH10D = other.AtmCenH10D;
      }
      if (other.AtmCenH21D != 0F) {
        AtmCenH21D = other.AtmCenH21D;
      }
      if (other.AtmCenH42D != 0F) {
        AtmCenH42D = other.AtmCenH42D;
      }
      if (other.AtmCenH63D != 0F) {
        AtmCenH63D = other.AtmCenH63D;
      }
      if (other.AtmCenH84D != 0F) {
        AtmCenH84D = other.AtmCenH84D;
      }
      if (other.AtmCenH105D != 0F) {
        AtmCenH105D = other.AtmCenH105D;
      }
      if (other.AtmCenH126D != 0F) {
        AtmCenH126D = other.AtmCenH126D;
      }
      if (other.AtmCenH189D != 0F) {
        AtmCenH189D = other.AtmCenH189D;
      }
      if (other.AtmCenH252D != 0F) {
        AtmCenH252D = other.AtmCenH252D;
      }
      if (other.AtmCenH378D != 0F) {
        AtmCenH378D = other.AtmCenH378D;
      }
      if (other.AtmCenH504D != 0F) {
        AtmCenH504D = other.AtmCenH504D;
      }
      if (other.SDiv5D != 0F) {
        SDiv5D = other.SDiv5D;
      }
      if (other.SDiv10D != 0F) {
        SDiv10D = other.SDiv10D;
      }
      if (other.SDiv21D != 0F) {
        SDiv21D = other.SDiv21D;
      }
      if (other.SDiv42D != 0F) {
        SDiv42D = other.SDiv42D;
      }
      if (other.SDiv63D != 0F) {
        SDiv63D = other.SDiv63D;
      }
      if (other.SDiv84D != 0F) {
        SDiv84D = other.SDiv84D;
      }
      if (other.SDiv105D != 0F) {
        SDiv105D = other.SDiv105D;
      }
      if (other.SDiv126D != 0F) {
        SDiv126D = other.SDiv126D;
      }
      if (other.SDiv189D != 0F) {
        SDiv189D = other.SDiv189D;
      }
      if (other.SDiv252D != 0F) {
        SDiv252D = other.SDiv252D;
      }
      if (other.SDiv378D != 0F) {
        SDiv378D = other.SDiv378D;
      }
      if (other.SDiv504D != 0F) {
        SDiv504D = other.SDiv504D;
      }
      if (other.FwdUPrc5D != 0F) {
        FwdUPrc5D = other.FwdUPrc5D;
      }
      if (other.FwdUPrc10D != 0F) {
        FwdUPrc10D = other.FwdUPrc10D;
      }
      if (other.FwdUPrc21D != 0F) {
        FwdUPrc21D = other.FwdUPrc21D;
      }
      if (other.FwdUPrc42D != 0F) {
        FwdUPrc42D = other.FwdUPrc42D;
      }
      if (other.FwdUPrc63D != 0F) {
        FwdUPrc63D = other.FwdUPrc63D;
      }
      if (other.FwdUPrc84D != 0F) {
        FwdUPrc84D = other.FwdUPrc84D;
      }
      if (other.FwdUPrc105D != 0F) {
        FwdUPrc105D = other.FwdUPrc105D;
      }
      if (other.FwdUPrc126D != 0F) {
        FwdUPrc126D = other.FwdUPrc126D;
      }
      if (other.FwdUPrc189D != 0F) {
        FwdUPrc189D = other.FwdUPrc189D;
      }
      if (other.FwdUPrc252D != 0F) {
        FwdUPrc252D = other.FwdUPrc252D;
      }
      if (other.FwdUPrc378D != 0F) {
        FwdUPrc378D = other.FwdUPrc378D;
      }
      if (other.FwdUPrc504D != 0F) {
        FwdUPrc504D = other.FwdUPrc504D;
      }
      if (other.VWidth5D != 0F) {
        VWidth5D = other.VWidth5D;
      }
      if (other.VWidth10D != 0F) {
        VWidth10D = other.VWidth10D;
      }
      if (other.VWidth21D != 0F) {
        VWidth21D = other.VWidth21D;
      }
      if (other.VWidth42D != 0F) {
        VWidth42D = other.VWidth42D;
      }
      if (other.VWidth63D != 0F) {
        VWidth63D = other.VWidth63D;
      }
      if (other.VWidth84D != 0F) {
        VWidth84D = other.VWidth84D;
      }
      if (other.VWidth105D != 0F) {
        VWidth105D = other.VWidth105D;
      }
      if (other.VWidth126D != 0F) {
        VWidth126D = other.VWidth126D;
      }
      if (other.VWidth189D != 0F) {
        VWidth189D = other.VWidth189D;
      }
      if (other.VWidth252D != 0F) {
        VWidth252D = other.VWidth252D;
      }
      if (other.VWidth378D != 0F) {
        VWidth378D = other.VWidth378D;
      }
      if (other.VWidth504D != 0F) {
        VWidth504D = other.VWidth504D;
      }
      if (other.VSlope5D != 0F) {
        VSlope5D = other.VSlope5D;
      }
      if (other.VSlope10D != 0F) {
        VSlope10D = other.VSlope10D;
      }
      if (other.VSlope21D != 0F) {
        VSlope21D = other.VSlope21D;
      }
      if (other.VSlope42D != 0F) {
        VSlope42D = other.VSlope42D;
      }
      if (other.VSlope63D != 0F) {
        VSlope63D = other.VSlope63D;
      }
      if (other.VSlope84D != 0F) {
        VSlope84D = other.VSlope84D;
      }
      if (other.VSlope105D != 0F) {
        VSlope105D = other.VSlope105D;
      }
      if (other.VSlope126D != 0F) {
        VSlope126D = other.VSlope126D;
      }
      if (other.VSlope189D != 0F) {
        VSlope189D = other.VSlope189D;
      }
      if (other.VSlope252D != 0F) {
        VSlope252D = other.VSlope252D;
      }
      if (other.VSlope378D != 0F) {
        VSlope378D = other.VSlope378D;
      }
      if (other.VSlope504D != 0F) {
        VSlope504D = other.VSlope504D;
      }
      if (other.ECnt5D != 0) {
        ECnt5D = other.ECnt5D;
      }
      if (other.ECnt10D != 0) {
        ECnt10D = other.ECnt10D;
      }
      if (other.ECnt21D != 0) {
        ECnt21D = other.ECnt21D;
      }
      if (other.ECnt42D != 0) {
        ECnt42D = other.ECnt42D;
      }
      if (other.ECnt63D != 0) {
        ECnt63D = other.ECnt63D;
      }
      if (other.ECnt84D != 0) {
        ECnt84D = other.ECnt84D;
      }
      if (other.ECnt105D != 0) {
        ECnt105D = other.ECnt105D;
      }
      if (other.ECnt126D != 0) {
        ECnt126D = other.ECnt126D;
      }
      if (other.ECnt189D != 0) {
        ECnt189D = other.ECnt189D;
      }
      if (other.ECnt252D != 0) {
        ECnt252D = other.ECnt252D;
      }
      if (other.ECnt378D != 0) {
        ECnt378D = other.ECnt378D;
      }
      if (other.ECnt504D != 0) {
        ECnt504D = other.ECnt504D;
      }
      if (other.Status != global::Spiderrock.Protobuf.CurveStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 805: {
            HEMove = input.ReadFloat();
            break;
          }
          case 824: {
            HEMoveNum = input.ReadInt32();
            break;
          }
          case 853: {
            HEMoveAvg = input.ReadFloat();
            break;
          }
          case 877: {
            HEMoveStd = input.ReadFloat();
            break;
          }
          case 901: {
            HEMoveMin = input.ReadFloat();
            break;
          }
          case 925: {
            HEMoveMax = input.ReadFloat();
            break;
          }
          case 949: {
            IEMove = input.ReadFloat();
            break;
          }
          case 968: {
            IEFitCode = (global::Spiderrock.Protobuf.EFitCode) input.ReadEnum();
            break;
          }
          case 997: {
            IEFitError = input.ReadFloat();
            break;
          }
          case 1016: {
            ExpiryCount = input.ReadInt32();
            break;
          }
          case 1045: {
            IEMoveAvg = input.ReadFloat();
            break;
          }
          case 1069: {
            IEMoveStd = input.ReadFloat();
            break;
          }
          case 1093: {
            IEMoveMin = input.ReadFloat();
            break;
          }
          case 1117: {
            IEMoveMax = input.ReadFloat();
            break;
          }
          case 1136: {
            IEMoveCnt = input.ReadInt32();
            break;
          }
          case 1160: {
            EMoveExpAdj1 = input.ReadInt32();
            break;
          }
          case 1189: {
            EMoveYrsAdj1 = input.ReadFloat();
            break;
          }
          case 1213: {
            EMoveYears1 = input.ReadFloat();
            break;
          }
          case 1234: {
            if (eMoveEKey1_ == null) {
              EMoveEKey1 = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(EMoveEKey1);
            break;
          }
          case 1256: {
            EMoveExpAdj2 = input.ReadInt32();
            break;
          }
          case 1285: {
            EMoveYrsAdj2 = input.ReadFloat();
            break;
          }
          case 1309: {
            EMoveYears2 = input.ReadFloat();
            break;
          }
          case 1330: {
            if (eMoveEKey2_ == null) {
              EMoveEKey2 = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(EMoveEKey2);
            break;
          }
          case 1357: {
            AtmCenISt = input.ReadFloat();
            break;
          }
          case 1381: {
            AtmCenILt = input.ReadFloat();
            break;
          }
          case 1405: {
            AtmCenIDecay = input.ReadFloat();
            break;
          }
          case 1429: {
            AtmCenI5D = input.ReadFloat();
            break;
          }
          case 1453: {
            AtmCenI10D = input.ReadFloat();
            break;
          }
          case 1477: {
            AtmCenI21D = input.ReadFloat();
            break;
          }
          case 1501: {
            AtmCenI42D = input.ReadFloat();
            break;
          }
          case 1525: {
            AtmCenI63D = input.ReadFloat();
            break;
          }
          case 1549: {
            AtmCenI84D = input.ReadFloat();
            break;
          }
          case 1573: {
            AtmCenI105D = input.ReadFloat();
            break;
          }
          case 1597: {
            AtmCenI126D = input.ReadFloat();
            break;
          }
          case 1621: {
            AtmCenI189D = input.ReadFloat();
            break;
          }
          case 1645: {
            AtmCenI252D = input.ReadFloat();
            break;
          }
          case 1669: {
            AtmCenI378D = input.ReadFloat();
            break;
          }
          case 1693: {
            AtmCenI504D = input.ReadFloat();
            break;
          }
          case 1717: {
            AtmCenHSt = input.ReadFloat();
            break;
          }
          case 1741: {
            AtmCenHLt = input.ReadFloat();
            break;
          }
          case 1765: {
            AtmCenHDecay = input.ReadFloat();
            break;
          }
          case 1789: {
            AtmCenH5D = input.ReadFloat();
            break;
          }
          case 1813: {
            AtmCenH10D = input.ReadFloat();
            break;
          }
          case 1837: {
            AtmCenH21D = input.ReadFloat();
            break;
          }
          case 1861: {
            AtmCenH42D = input.ReadFloat();
            break;
          }
          case 1885: {
            AtmCenH63D = input.ReadFloat();
            break;
          }
          case 1909: {
            AtmCenH84D = input.ReadFloat();
            break;
          }
          case 1933: {
            AtmCenH105D = input.ReadFloat();
            break;
          }
          case 1957: {
            AtmCenH126D = input.ReadFloat();
            break;
          }
          case 1981: {
            AtmCenH189D = input.ReadFloat();
            break;
          }
          case 2005: {
            AtmCenH252D = input.ReadFloat();
            break;
          }
          case 2029: {
            AtmCenH378D = input.ReadFloat();
            break;
          }
          case 2053: {
            AtmCenH504D = input.ReadFloat();
            break;
          }
          case 2077: {
            SDiv5D = input.ReadFloat();
            break;
          }
          case 2101: {
            SDiv10D = input.ReadFloat();
            break;
          }
          case 2125: {
            SDiv21D = input.ReadFloat();
            break;
          }
          case 2149: {
            SDiv42D = input.ReadFloat();
            break;
          }
          case 2173: {
            SDiv63D = input.ReadFloat();
            break;
          }
          case 2197: {
            SDiv84D = input.ReadFloat();
            break;
          }
          case 2221: {
            SDiv105D = input.ReadFloat();
            break;
          }
          case 2245: {
            SDiv126D = input.ReadFloat();
            break;
          }
          case 2269: {
            SDiv189D = input.ReadFloat();
            break;
          }
          case 2293: {
            SDiv252D = input.ReadFloat();
            break;
          }
          case 2317: {
            SDiv378D = input.ReadFloat();
            break;
          }
          case 2341: {
            SDiv504D = input.ReadFloat();
            break;
          }
          case 2365: {
            FwdUPrc5D = input.ReadFloat();
            break;
          }
          case 2389: {
            FwdUPrc10D = input.ReadFloat();
            break;
          }
          case 2413: {
            FwdUPrc21D = input.ReadFloat();
            break;
          }
          case 2437: {
            FwdUPrc42D = input.ReadFloat();
            break;
          }
          case 2461: {
            FwdUPrc63D = input.ReadFloat();
            break;
          }
          case 2485: {
            FwdUPrc84D = input.ReadFloat();
            break;
          }
          case 2509: {
            FwdUPrc105D = input.ReadFloat();
            break;
          }
          case 2533: {
            FwdUPrc126D = input.ReadFloat();
            break;
          }
          case 2557: {
            FwdUPrc189D = input.ReadFloat();
            break;
          }
          case 2581: {
            FwdUPrc252D = input.ReadFloat();
            break;
          }
          case 2605: {
            FwdUPrc378D = input.ReadFloat();
            break;
          }
          case 2629: {
            FwdUPrc504D = input.ReadFloat();
            break;
          }
          case 2653: {
            VWidth5D = input.ReadFloat();
            break;
          }
          case 2677: {
            VWidth10D = input.ReadFloat();
            break;
          }
          case 2701: {
            VWidth21D = input.ReadFloat();
            break;
          }
          case 2725: {
            VWidth42D = input.ReadFloat();
            break;
          }
          case 2749: {
            VWidth63D = input.ReadFloat();
            break;
          }
          case 2773: {
            VWidth84D = input.ReadFloat();
            break;
          }
          case 2797: {
            VWidth105D = input.ReadFloat();
            break;
          }
          case 2821: {
            VWidth126D = input.ReadFloat();
            break;
          }
          case 2845: {
            VWidth189D = input.ReadFloat();
            break;
          }
          case 2869: {
            VWidth252D = input.ReadFloat();
            break;
          }
          case 2893: {
            VWidth378D = input.ReadFloat();
            break;
          }
          case 2917: {
            VWidth504D = input.ReadFloat();
            break;
          }
          case 2941: {
            VSlope5D = input.ReadFloat();
            break;
          }
          case 2965: {
            VSlope10D = input.ReadFloat();
            break;
          }
          case 2989: {
            VSlope21D = input.ReadFloat();
            break;
          }
          case 3013: {
            VSlope42D = input.ReadFloat();
            break;
          }
          case 3037: {
            VSlope63D = input.ReadFloat();
            break;
          }
          case 3061: {
            VSlope84D = input.ReadFloat();
            break;
          }
          case 3085: {
            VSlope105D = input.ReadFloat();
            break;
          }
          case 3109: {
            VSlope126D = input.ReadFloat();
            break;
          }
          case 3133: {
            VSlope189D = input.ReadFloat();
            break;
          }
          case 3157: {
            VSlope252D = input.ReadFloat();
            break;
          }
          case 3181: {
            VSlope378D = input.ReadFloat();
            break;
          }
          case 3205: {
            VSlope504D = input.ReadFloat();
            break;
          }
          case 3224: {
            ECnt5D = input.ReadInt32();
            break;
          }
          case 3248: {
            ECnt10D = input.ReadInt32();
            break;
          }
          case 3272: {
            ECnt21D = input.ReadInt32();
            break;
          }
          case 3296: {
            ECnt42D = input.ReadInt32();
            break;
          }
          case 3320: {
            ECnt63D = input.ReadInt32();
            break;
          }
          case 3344: {
            ECnt84D = input.ReadInt32();
            break;
          }
          case 3368: {
            ECnt105D = input.ReadInt32();
            break;
          }
          case 3392: {
            ECnt126D = input.ReadInt32();
            break;
          }
          case 3416: {
            ECnt189D = input.ReadInt32();
            break;
          }
          case 3440: {
            ECnt252D = input.ReadInt32();
            break;
          }
          case 3464: {
            ECnt378D = input.ReadInt32();
            break;
          }
          case 3488: {
            ECnt504D = input.ReadInt32();
            break;
          }
          case 3512: {
            Status = (global::Spiderrock.Protobuf.CurveStatus) input.ReadEnum();
            break;
          }
          case 3538: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Time);
            break;
          }
          case 3562: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 805: {
            HEMove = input.ReadFloat();
            break;
          }
          case 824: {
            HEMoveNum = input.ReadInt32();
            break;
          }
          case 853: {
            HEMoveAvg = input.ReadFloat();
            break;
          }
          case 877: {
            HEMoveStd = input.ReadFloat();
            break;
          }
          case 901: {
            HEMoveMin = input.ReadFloat();
            break;
          }
          case 925: {
            HEMoveMax = input.ReadFloat();
            break;
          }
          case 949: {
            IEMove = input.ReadFloat();
            break;
          }
          case 968: {
            IEFitCode = (global::Spiderrock.Protobuf.EFitCode) input.ReadEnum();
            break;
          }
          case 997: {
            IEFitError = input.ReadFloat();
            break;
          }
          case 1016: {
            ExpiryCount = input.ReadInt32();
            break;
          }
          case 1045: {
            IEMoveAvg = input.ReadFloat();
            break;
          }
          case 1069: {
            IEMoveStd = input.ReadFloat();
            break;
          }
          case 1093: {
            IEMoveMin = input.ReadFloat();
            break;
          }
          case 1117: {
            IEMoveMax = input.ReadFloat();
            break;
          }
          case 1136: {
            IEMoveCnt = input.ReadInt32();
            break;
          }
          case 1160: {
            EMoveExpAdj1 = input.ReadInt32();
            break;
          }
          case 1189: {
            EMoveYrsAdj1 = input.ReadFloat();
            break;
          }
          case 1213: {
            EMoveYears1 = input.ReadFloat();
            break;
          }
          case 1234: {
            if (eMoveEKey1_ == null) {
              EMoveEKey1 = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(EMoveEKey1);
            break;
          }
          case 1256: {
            EMoveExpAdj2 = input.ReadInt32();
            break;
          }
          case 1285: {
            EMoveYrsAdj2 = input.ReadFloat();
            break;
          }
          case 1309: {
            EMoveYears2 = input.ReadFloat();
            break;
          }
          case 1330: {
            if (eMoveEKey2_ == null) {
              EMoveEKey2 = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            input.ReadMessage(EMoveEKey2);
            break;
          }
          case 1357: {
            AtmCenISt = input.ReadFloat();
            break;
          }
          case 1381: {
            AtmCenILt = input.ReadFloat();
            break;
          }
          case 1405: {
            AtmCenIDecay = input.ReadFloat();
            break;
          }
          case 1429: {
            AtmCenI5D = input.ReadFloat();
            break;
          }
          case 1453: {
            AtmCenI10D = input.ReadFloat();
            break;
          }
          case 1477: {
            AtmCenI21D = input.ReadFloat();
            break;
          }
          case 1501: {
            AtmCenI42D = input.ReadFloat();
            break;
          }
          case 1525: {
            AtmCenI63D = input.ReadFloat();
            break;
          }
          case 1549: {
            AtmCenI84D = input.ReadFloat();
            break;
          }
          case 1573: {
            AtmCenI105D = input.ReadFloat();
            break;
          }
          case 1597: {
            AtmCenI126D = input.ReadFloat();
            break;
          }
          case 1621: {
            AtmCenI189D = input.ReadFloat();
            break;
          }
          case 1645: {
            AtmCenI252D = input.ReadFloat();
            break;
          }
          case 1669: {
            AtmCenI378D = input.ReadFloat();
            break;
          }
          case 1693: {
            AtmCenI504D = input.ReadFloat();
            break;
          }
          case 1717: {
            AtmCenHSt = input.ReadFloat();
            break;
          }
          case 1741: {
            AtmCenHLt = input.ReadFloat();
            break;
          }
          case 1765: {
            AtmCenHDecay = input.ReadFloat();
            break;
          }
          case 1789: {
            AtmCenH5D = input.ReadFloat();
            break;
          }
          case 1813: {
            AtmCenH10D = input.ReadFloat();
            break;
          }
          case 1837: {
            AtmCenH21D = input.ReadFloat();
            break;
          }
          case 1861: {
            AtmCenH42D = input.ReadFloat();
            break;
          }
          case 1885: {
            AtmCenH63D = input.ReadFloat();
            break;
          }
          case 1909: {
            AtmCenH84D = input.ReadFloat();
            break;
          }
          case 1933: {
            AtmCenH105D = input.ReadFloat();
            break;
          }
          case 1957: {
            AtmCenH126D = input.ReadFloat();
            break;
          }
          case 1981: {
            AtmCenH189D = input.ReadFloat();
            break;
          }
          case 2005: {
            AtmCenH252D = input.ReadFloat();
            break;
          }
          case 2029: {
            AtmCenH378D = input.ReadFloat();
            break;
          }
          case 2053: {
            AtmCenH504D = input.ReadFloat();
            break;
          }
          case 2077: {
            SDiv5D = input.ReadFloat();
            break;
          }
          case 2101: {
            SDiv10D = input.ReadFloat();
            break;
          }
          case 2125: {
            SDiv21D = input.ReadFloat();
            break;
          }
          case 2149: {
            SDiv42D = input.ReadFloat();
            break;
          }
          case 2173: {
            SDiv63D = input.ReadFloat();
            break;
          }
          case 2197: {
            SDiv84D = input.ReadFloat();
            break;
          }
          case 2221: {
            SDiv105D = input.ReadFloat();
            break;
          }
          case 2245: {
            SDiv126D = input.ReadFloat();
            break;
          }
          case 2269: {
            SDiv189D = input.ReadFloat();
            break;
          }
          case 2293: {
            SDiv252D = input.ReadFloat();
            break;
          }
          case 2317: {
            SDiv378D = input.ReadFloat();
            break;
          }
          case 2341: {
            SDiv504D = input.ReadFloat();
            break;
          }
          case 2365: {
            FwdUPrc5D = input.ReadFloat();
            break;
          }
          case 2389: {
            FwdUPrc10D = input.ReadFloat();
            break;
          }
          case 2413: {
            FwdUPrc21D = input.ReadFloat();
            break;
          }
          case 2437: {
            FwdUPrc42D = input.ReadFloat();
            break;
          }
          case 2461: {
            FwdUPrc63D = input.ReadFloat();
            break;
          }
          case 2485: {
            FwdUPrc84D = input.ReadFloat();
            break;
          }
          case 2509: {
            FwdUPrc105D = input.ReadFloat();
            break;
          }
          case 2533: {
            FwdUPrc126D = input.ReadFloat();
            break;
          }
          case 2557: {
            FwdUPrc189D = input.ReadFloat();
            break;
          }
          case 2581: {
            FwdUPrc252D = input.ReadFloat();
            break;
          }
          case 2605: {
            FwdUPrc378D = input.ReadFloat();
            break;
          }
          case 2629: {
            FwdUPrc504D = input.ReadFloat();
            break;
          }
          case 2653: {
            VWidth5D = input.ReadFloat();
            break;
          }
          case 2677: {
            VWidth10D = input.ReadFloat();
            break;
          }
          case 2701: {
            VWidth21D = input.ReadFloat();
            break;
          }
          case 2725: {
            VWidth42D = input.ReadFloat();
            break;
          }
          case 2749: {
            VWidth63D = input.ReadFloat();
            break;
          }
          case 2773: {
            VWidth84D = input.ReadFloat();
            break;
          }
          case 2797: {
            VWidth105D = input.ReadFloat();
            break;
          }
          case 2821: {
            VWidth126D = input.ReadFloat();
            break;
          }
          case 2845: {
            VWidth189D = input.ReadFloat();
            break;
          }
          case 2869: {
            VWidth252D = input.ReadFloat();
            break;
          }
          case 2893: {
            VWidth378D = input.ReadFloat();
            break;
          }
          case 2917: {
            VWidth504D = input.ReadFloat();
            break;
          }
          case 2941: {
            VSlope5D = input.ReadFloat();
            break;
          }
          case 2965: {
            VSlope10D = input.ReadFloat();
            break;
          }
          case 2989: {
            VSlope21D = input.ReadFloat();
            break;
          }
          case 3013: {
            VSlope42D = input.ReadFloat();
            break;
          }
          case 3037: {
            VSlope63D = input.ReadFloat();
            break;
          }
          case 3061: {
            VSlope84D = input.ReadFloat();
            break;
          }
          case 3085: {
            VSlope105D = input.ReadFloat();
            break;
          }
          case 3109: {
            VSlope126D = input.ReadFloat();
            break;
          }
          case 3133: {
            VSlope189D = input.ReadFloat();
            break;
          }
          case 3157: {
            VSlope252D = input.ReadFloat();
            break;
          }
          case 3181: {
            VSlope378D = input.ReadFloat();
            break;
          }
          case 3205: {
            VSlope504D = input.ReadFloat();
            break;
          }
          case 3224: {
            ECnt5D = input.ReadInt32();
            break;
          }
          case 3248: {
            ECnt10D = input.ReadInt32();
            break;
          }
          case 3272: {
            ECnt21D = input.ReadInt32();
            break;
          }
          case 3296: {
            ECnt42D = input.ReadInt32();
            break;
          }
          case 3320: {
            ECnt63D = input.ReadInt32();
            break;
          }
          case 3344: {
            ECnt84D = input.ReadInt32();
            break;
          }
          case 3368: {
            ECnt105D = input.ReadInt32();
            break;
          }
          case 3392: {
            ECnt126D = input.ReadInt32();
            break;
          }
          case 3416: {
            ECnt189D = input.ReadInt32();
            break;
          }
          case 3440: {
            ECnt252D = input.ReadInt32();
            break;
          }
          case 3464: {
            ECnt378D = input.ReadInt32();
            break;
          }
          case 3488: {
            ECnt504D = input.ReadInt32();
            break;
          }
          case 3512: {
            Status = (global::Spiderrock.Protobuf.CurveStatus) input.ReadEnum();
            break;
          }
          case 3538: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Time);
            break;
          }
          case 3562: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LiveSurfaceFixedTerm message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.LiveSurfaceFixedTerm.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
          surfaceType_ = other.surfaceType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private global::Spiderrock.Protobuf.TickerKey ticker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.TickerKey Ticker {
          get { return ticker_; }
          set {
            ticker_ = value;
          }
        }

        /// <summary>Field number for the "surface_type" field.</summary>
        public const int SurfaceTypeFieldNumber = 11;
        private global::Spiderrock.Protobuf.SurfaceCurveType surfaceType_ = global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.SurfaceCurveType SurfaceType {
          get { return surfaceType_; }
          set {
            surfaceType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ticker, other.Ticker)) return false;
          if (SurfaceType != other.SurfaceType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ticker_ != null) hash ^= Ticker.GetHashCode();
          if (SurfaceType != global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified) hash ^= SurfaceType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (SurfaceType != global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SurfaceType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ticker_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ticker);
          }
          if (SurfaceType != global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified) {
            output.WriteRawTag(88);
            output.WriteEnum((int) SurfaceType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ticker_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
          }
          if (SurfaceType != global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SurfaceType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ticker_ != null) {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            Ticker.MergeFrom(other.Ticker);
          }
          if (other.SurfaceType != global::Spiderrock.Protobuf.SurfaceCurveType.Unspecified) {
            SurfaceType = other.SurfaceType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                SurfaceType = (global::Spiderrock.Protobuf.SurfaceCurveType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ticker_ == null) {
                  Ticker = new global::Spiderrock.Protobuf.TickerKey();
                }
                input.ReadMessage(Ticker);
                break;
              }
              case 88: {
                SurfaceType = (global::Spiderrock.Protobuf.SurfaceCurveType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
