syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    LiveSurfaceCurve (surfaceType = 'Live') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.
    SurfaceType = 'PriorDay' records contain the `closing surface record from the prior trading period (usually from just before the last main session close).
*/    
message LiveSurfaceCurveV4 {
    message PKey {
        
        ExpiryKey ekey = 10;
        SurfaceCurveType surface_type = 11;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    TickerKey ticker = 100; // underlying stock key that this option expiration attaches to
    ExpiryKey fkey = 103; // underlying future key (if any)
    ExpiryKey u_prc_driver_key = 106; // underlier driver key
    SpdrKeyType u_prc_driver_type = 109; // underlier driver key type (stock or future)
    double u_prc_driver = 112; // underlier driver (mid-market)
    double u_prc = 115; // effective uPrc used for surface fitting
    double u_bid = 118; // effective uBid
    double u_ask = 121; // effective uAsk
    float years = 124; // time to expiration (in years)
    float rate = 127; // average interest rate to expiration (SR global rate curve)
    float sdiv = 130; // stock dividend (borrow rate)
    float ddiv = 133; // (expected) cumulative discrete dividend $ amounts prior to expiration
    float ddiv_pv = 136; // (expected) cumulative npv of discrete dividend $ amounts prior to expiration (SR global rate curve)
    DDivSource ddiv_source = 139; // Forecast if any of the dividends prior to expiry are forecast rather than announced
    float symbol_ratio = 142; // underlier price ratio (usually 1.0 or a multi-hedge option price ratio; if one exists)
    ExerciseType ex_type = 145; // exercise type (American or European)
    CalcModelType model_type = 148; // option pricing model used for price calcs (Normal, LogNormal, etc.)
    CalcPriceType price_type = 151; // Equity has independent sdiv and rate, Future has sdiv = rate
    float earn_cnt = 154; // number of qualifying earnings events prior to expiration [can be fractional] (from StockEarningsCalendar)
    float earn_cnt_adj = 157; // number of qualifying earnings events prior to expiration [adjusted] (from StockEarningsCalendar + LiveSurfaceTerm)
    float axis_vol_rT = 160; // axis volatility x sqrt(years) (used to compute xAxis) [usually the minimum curve volatility]
    float axis_fUPrc = 163; // axis FwdUPrc (fwd underlying price used to compute xAxis)
    MoneynessType moneyness_type = 166; // moneyness (xAxis) convention
    PriceQuoteType price_quote_type = 169; // Price or Vol
    float atm_vol = 172; // atm vol (xAxis = 0)
    float atm_cen = 175; // atm vol (xAxis = 0) (eMove/earnCntAdj censored)
    float atm_vol_hist = 178; // historical realized volatility (includes eMoveHist x earnCntAdj adjustment).  Note that this is the default atmVol if no implied markets existed previous day.
    float atm_cen_hist = 181; // censored (earnings events removed) historical realized volatility.  Trailing periods is 2x forward time to expiration.  From HistoricalVolatility(windowType=hlCen).mv_nnn
    float e_move = 184; // implied earnings move (from LiveSurfaceTerm)
    float e_move_hist = 187; // historical earnings move (avg of trailing 8 moves). From StockEarningsCalendar.eMoveHist
    double u_prc_ratio = 190; // uPrcAdj = uPrc * uPrcRatioFit
    float min_atm_vol = 193; // minimum estimated atm vol
    float max_atm_vol = 196; // maximum estimated atm vol
    double min_cPAdj_val = 199; // minimum cpAdjVal (sdiv or uPrcRatio)
    double max_cPAdj_val = 202; // minimum cpAdjVal (sdiv or uPrcRatio)
    float atm_fixed_move = 205; // fixed strike atm move from prior period
    float atm_phi = 208; // surface phi @ xAxis = 0
    float atm_rho = 211; // surface rho @ xAxis = 0
    float atm_vega = 214; // surface vega @ xAxis = 0
    float slope = 217; // volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)
    float var_swap_fV = 220; // variance swap fair value (estimated by numerical integration over OTM price surface)
    float min_xAxis = 223; // minimum xAxis value; left most point with a valid supporting strike
    float max_xAxis = 226; // maximum xAxis value; right most point with a valid supporting strike
    TickerKey skew_ticker = 229; // references a SkewBasisCurve record
    double x_shift = 232;
    double x_mult = 235;
    double skew_mult = 238; // SVOL = skewMult * BasisSkewFn(xShift + xMult * xAxis) + IVolBias(xAxis)
    float skew_c00 = 241; // curve coeff[0]
    float skew_c01 = 244; // curve coeff[1]
    float skew_c02 = 247;
    float skew_c03 = 250;
    float skew_c04 = 253;
    float skew_c05 = 256;
    float skew_c06 = 259;
    float skew_c07 = 262;
    float skew_c08 = 265;
    float skew_c09 = 268;
    float skew_c10 = 271;
    float skew_c11 = 274;
    float skew_c12 = 277;
    float skew_c13 = 280;
    float skew_c14 = 283;
    float skew_c15 = 286;
    float skew_c16 = 289;
    float skew_c17 = 292;
    float skew_c18 = 295;
    float skew_c19 = 298;
    float skew_c20 = 301;
    float skew_c21 = 304;
    float skew_c22 = 307;
    float skew_c23 = 310;
    float skew_c24 = 313;
    float skew_c25 = 316;
    float skew_c26 = 319;
    float skew_c27 = 322;
    float skew_c28 = 325;
    float skew_c29 = 328;
    float skew_c30 = 331;
    float cp_adj_d04 = 334; // xAxis = -4.0
    float cp_adj_d03 = 337; // xAxis = -3.0
    float cp_adj_d02 = 340; // xAxis = -2.0
    float cp_adj_d01 = 343; // xAxis = -1.0
    float cp_adj_u01 = 346; // xAxis = +1.0
    float cp_adj_u02 = 349; // xAxis = +2.0
    float cp_adj_u03 = 352; // xAxis = +3.0
    float cp_adj_u04 = 355; // xAxis = +4.0
    float pwidth = 358; // minimum mkt premium width
    float vwidth = 361; // minimum mkt volatility width
    int32 c_cnt = 364; // num call strikes in base fit
    int32 p_cnt = 367; // num put strikes in base fit
    int32 c_bid_miss = 370; // number of call bid violations (surface outside the market)
    int32 c_ask_miss = 373; // number of call ask violations (surface outside the market)
    int32 p_bid_miss = 376; // number of put bid violations
    int32 p_ask_miss = 379; // number of put ask violations
    float fit_avg_err = 382; // average error (sPrc - midPrc)
    float fit_avg_abs_err = 385; // average absolute error (sPrc - midPrc)
    float fit_max_prc_err = 388; // worst case surface premium violation
    float fit_err_xX = 391; // okey_xx of the option with the largest fit error in this expiration
    CallPut fit_err_cP = 394; // okey_cp of the option with the largest fit error in this expiration
    float fit_err_de = 397; // delta of fixErrXX
    float fit_err_bid = 400; // bid of the option with the largest fit error
    float fit_err_ask = 403; // ask of the option with the largest fit error
    float fit_err_prc = 406; // surface prc of the option with the largest fit error
    float fit_err_vol = 409; // surface vol of the option with the largest fit error
    int32 num_saddle_pts = 412; // number of saddle points
    float min_saddle_span = 415; // smallest distance between saddle points
    float max_saddle_curvature = 418; // maximum saddle point curvature
    MarketSession market_session = 421; // market session this surface is from
    TradeableStatus tradeable_status = 424; // indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)
    SurfaceResult surface_result = 427;
    google.protobuf.Timestamp timestamp = 430;
}


