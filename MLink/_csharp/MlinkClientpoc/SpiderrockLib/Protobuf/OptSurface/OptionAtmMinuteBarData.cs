// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/OptSurface/OptionAtmMinuteBarData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/OptSurface/OptionAtmMinuteBarData.proto</summary>
  public static partial class OptionAtmMinuteBarDataReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/OptSurface/OptionAtmMinuteBarData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptionAtmMinuteBarDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBQcm90b2J1Zi9PcHRTdXJmYWNlL09wdGlvbkF0bU1pbnV0ZUJhckRhdGEu",
            "cHJvdG8SE3NwaWRlcnJvY2sucHJvdG9idWYaF3NwaWRlcnJvY2tfY29tbW9u",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvItUIChZP",
            "cHRpb25BdG1NaW51dGVCYXJEYXRhEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVy",
            "cm9jay5wcm90b2J1Zi5NZXNzYWdlTWV0YWRhdGESPgoEcGtleRgCIAEoCzIw",
            "LnNwaWRlcnJvY2sucHJvdG9idWYuT3B0aW9uQXRtTWludXRlQmFyRGF0YS5Q",
            "S2V5Ei4KBnRpY2tlchhkIAEoCzIeLnNwaWRlcnJvY2sucHJvdG9idWYuVGlj",
            "a2VyS2V5Ei4KCnN0YXJ0X3RpbWUYZyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEhkKEXN0YXJ0X3RpbWVfbWludXRlGGogASgJEiwKCGVuZF90",
            "aW1lGG0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIXCg9lbmRf",
            "dGltZV9taW51dGUYcCABKAkSDQoFdV9wcmMYcyABKAESDQoFeWVhcnMYdiAB",
            "KAISDAoEcmF0ZRh5IAEoAhIMCgRzZGl2GHwgASgCEgwKBGRkaXYYfyABKAIS",
            "FAoLdV9wcmNfcmF0aW8YggEgASgBEg0KBGl2b2wYhQEgASgCEg0KBGl2eHgY",
            "iAEgASgCEg8KBml2X2NlbhiLASABKAISDgoFc2xvcGUYjgEgASgCEhAKB3Zf",
            "d2lkdGgYkQEgASgCEhMKCnJlZl9zdHJpa2UYlAEgASgCEhAKB2l2b2xfaGkY",
            "lwEgASgCEhAKB2l2b2xfbG8YmgEgASgCEhAKB2l2eHhfaGkYnQEgASgCEhAK",
            "B2l2eHhfbG8YoAEgASgCEhIKCWl2X2Nlbl9oaRijASABKAISEgoJaXZfY2Vu",
            "X2xvGKYBIAEoAhIQCgdzZGl2X2hpGKkBIAEoAhIQCgdzZGl2X2xvGKwBIAEo",
            "AhIXCg51X3ByY19yYXRpb19oaRivASABKAESFwoOdV9wcmNfcmF0aW9fbG8Y",
            "sgEgASgBEhEKCHNsb3BlX2hpGLUBIAEoAhIRCghzbG9wZV9sbxi4ASABKAIS",
            "FAoLdmFyX3N3YXBfZlYYuwEgASgCEhIKCW1heF9kSVZvbBi+ASABKAISEgoJ",
            "bWF4X2RTRGl2GMEBIAEoAhISCgl1X3ByY19zUFkYxAEgASgBEhEKCGl2b2xf",
            "c1BZGMcBIAEoAhIRCghpdnh4X3NQWRjKASABKAISOwoObWFya2V0X3NlZ21l",
            "bnQYzQEgASgOMiIuc3BpZGVycm9jay5wcm90b2J1Zi5NYXJrZXRTZWdtZW50",
            "EicKAnRzGNABIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAadgoE",
            "UEtleRIsCgRla2V5GAogASgLMh4uc3BpZGVycm9jay5wcm90b2J1Zi5FeHBp",
            "cnlLZXkSMAoMdHJhZGluZ19kYXRlGAsgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIOCgZtaW51dGUYDCABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionAtmMinuteBarData), global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Parser, new[]{ "Meta", "Pkey", "Ticker", "StartTime", "StartTimeMinute", "EndTime", "EndTimeMinute", "UPrc", "Years", "Rate", "Sdiv", "Ddiv", "UPrcRatio", "Ivol", "Ivxx", "IvCen", "Slope", "VWidth", "RefStrike", "IvolHi", "IvolLo", "IvxxHi", "IvxxLo", "IvCenHi", "IvCenLo", "SdivHi", "SdivLo", "UPrcRatioHi", "UPrcRatioLo", "SlopeHi", "SlopeLo", "VarSwapFV", "MaxDIVol", "MaxDSDiv", "UPrcSPY", "IvolSPY", "IvxxSPY", "MarketSegment", "Ts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey), global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey.Parser, new[]{ "Ekey", "TradingDate", "Minute" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OptionAtmMinuteBarData : pb::IMessage<OptionAtmMinuteBarData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionAtmMinuteBarData> _parser = new pb::MessageParser<OptionAtmMinuteBarData>(() => new OptionAtmMinuteBarData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OptionAtmMinuteBarData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.OptionAtmMinuteBarDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionAtmMinuteBarData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionAtmMinuteBarData(OptionAtmMinuteBarData other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      ticker_ = other.ticker_ != null ? other.ticker_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      startTimeMinute_ = other.startTimeMinute_;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      endTimeMinute_ = other.endTimeMinute_;
      uPrc_ = other.uPrc_;
      years_ = other.years_;
      rate_ = other.rate_;
      sdiv_ = other.sdiv_;
      ddiv_ = other.ddiv_;
      uPrcRatio_ = other.uPrcRatio_;
      ivol_ = other.ivol_;
      ivxx_ = other.ivxx_;
      ivCen_ = other.ivCen_;
      slope_ = other.slope_;
      vWidth_ = other.vWidth_;
      refStrike_ = other.refStrike_;
      ivolHi_ = other.ivolHi_;
      ivolLo_ = other.ivolLo_;
      ivxxHi_ = other.ivxxHi_;
      ivxxLo_ = other.ivxxLo_;
      ivCenHi_ = other.ivCenHi_;
      ivCenLo_ = other.ivCenLo_;
      sdivHi_ = other.sdivHi_;
      sdivLo_ = other.sdivLo_;
      uPrcRatioHi_ = other.uPrcRatioHi_;
      uPrcRatioLo_ = other.uPrcRatioLo_;
      slopeHi_ = other.slopeHi_;
      slopeLo_ = other.slopeLo_;
      varSwapFV_ = other.varSwapFV_;
      maxDIVol_ = other.maxDIVol_;
      maxDSDiv_ = other.maxDSDiv_;
      uPrcSPY_ = other.uPrcSPY_;
      ivolSPY_ = other.ivolSPY_;
      ivxxSPY_ = other.ivxxSPY_;
      marketSegment_ = other.marketSegment_;
      ts_ = other.ts_ != null ? other.ts_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionAtmMinuteBarData Clone() {
      return new OptionAtmMinuteBarData(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 100;
    private global::Spiderrock.Protobuf.TickerKey ticker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.TickerKey Ticker {
      get { return ticker_; }
      set {
        ticker_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 103;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start of trading period for this product (note: this field will only be populated in the first message sent)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time_minute" field.</summary>
    public const int StartTimeMinuteFieldNumber = 106;
    private string startTimeMinute_ = "";
    /// <summary>
    /// Minute representation of startTime (note: this field will only be populated in the first message sent)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartTimeMinute {
      get { return startTimeMinute_; }
      set {
        startTimeMinute_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 109;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End of trading period for this product (note: this field will only be populated in the first message sent)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time_minute" field.</summary>
    public const int EndTimeMinuteFieldNumber = 112;
    private string endTimeMinute_ = "";
    /// <summary>
    /// Minute representation of endTime (note: this field will only be populated in the first message sent)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTimeMinute {
      get { return endTimeMinute_; }
      set {
        endTimeMinute_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u_prc" field.</summary>
    public const int UPrcFieldNumber = 115;
    private double uPrc_;
    /// <summary>
    /// Underlying price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UPrc {
      get { return uPrc_; }
      set {
        uPrc_ = value;
      }
    }

    /// <summary>Field number for the "years" field.</summary>
    public const int YearsFieldNumber = 118;
    private float years_;
    /// <summary>
    /// Years to expiry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Years {
      get { return years_; }
      set {
        years_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 121;
    private float rate_;
    /// <summary>
    /// Interest rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "sdiv" field.</summary>
    public const int SdivFieldNumber = 124;
    private float sdiv_;
    /// <summary>
    /// Continuous stock dividend
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Sdiv {
      get { return sdiv_; }
      set {
        sdiv_ = value;
      }
    }

    /// <summary>Field number for the "ddiv" field.</summary>
    public const int DdivFieldNumber = 127;
    private float ddiv_;
    /// <summary>
    /// Discrete stock dividend value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ddiv {
      get { return ddiv_; }
      set {
        ddiv_ = value;
      }
    }

    /// <summary>Field number for the "u_prc_ratio" field.</summary>
    public const int UPrcRatioFieldNumber = 130;
    private double uPrcRatio_;
    /// <summary>
    /// Implied underlying price offset. For options with futures underlyings, this is like sDiv for futures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UPrcRatio {
      get { return uPrcRatio_; }
      set {
        uPrcRatio_ = value;
      }
    }

    /// <summary>Field number for the "ivol" field.</summary>
    public const int IvolFieldNumber = 133;
    private float ivol_;
    /// <summary>
    /// atm ivol (atm: strike = fUPrc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ivol {
      get { return ivol_; }
      set {
        ivol_ = value;
      }
    }

    /// <summary>Field number for the "ivxx" field.</summary>
    public const int IvxxFieldNumber = 136;
    private float ivxx_;
    /// <summary>
    /// fixed strike ivol (ivol @ refStrike)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ivxx {
      get { return ivxx_; }
      set {
        ivxx_ = value;
      }
    }

    /// <summary>Field number for the "iv_cen" field.</summary>
    public const int IvCenFieldNumber = 139;
    private float ivCen_;
    /// <summary>
    /// atm ivol (atm: strike = fUPrc) [eMove/earnings censored]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvCen {
      get { return ivCen_; }
      set {
        ivCen_ = value;
      }
    }

    /// <summary>Field number for the "slope" field.</summary>
    public const int SlopeFieldNumber = 142;
    private float slope_;
    /// <summary>
    /// dVol / dXAxis
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Slope {
      get { return slope_; }
      set {
        slope_ = value;
      }
    }

    /// <summary>Field number for the "v_width" field.</summary>
    public const int VWidthFieldNumber = 145;
    private float vWidth_;
    /// <summary>
    /// implied volatility width (best market)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VWidth {
      get { return vWidth_; }
      set {
        vWidth_ = value;
      }
    }

    /// <summary>Field number for the "ref_strike" field.</summary>
    public const int RefStrikeFieldNumber = 148;
    private float refStrike_;
    /// <summary>
    /// reference strike (usually prior day closing uPrc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RefStrike {
      get { return refStrike_; }
      set {
        refStrike_ = value;
      }
    }

    /// <summary>Field number for the "ivol_hi" field.</summary>
    public const int IvolHiFieldNumber = 151;
    private float ivolHi_;
    /// <summary>
    /// Implied Volatility high value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvolHi {
      get { return ivolHi_; }
      set {
        ivolHi_ = value;
      }
    }

    /// <summary>Field number for the "ivol_lo" field.</summary>
    public const int IvolLoFieldNumber = 154;
    private float ivolLo_;
    /// <summary>
    /// Implied Volatility low value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvolLo {
      get { return ivolLo_; }
      set {
        ivolLo_ = value;
      }
    }

    /// <summary>Field number for the "ivxx_hi" field.</summary>
    public const int IvxxHiFieldNumber = 157;
    private float ivxxHi_;
    /// <summary>
    /// Implied Volatility of Previous Day's ATM strike, high value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvxxHi {
      get { return ivxxHi_; }
      set {
        ivxxHi_ = value;
      }
    }

    /// <summary>Field number for the "ivxx_lo" field.</summary>
    public const int IvxxLoFieldNumber = 160;
    private float ivxxLo_;
    /// <summary>
    /// Implied Volatility of Previous Day's ATM strike, low value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvxxLo {
      get { return ivxxLo_; }
      set {
        ivxxLo_ = value;
      }
    }

    /// <summary>Field number for the "iv_cen_hi" field.</summary>
    public const int IvCenHiFieldNumber = 163;
    private float ivCenHi_;
    /// <summary>
    /// Censored implied volatility high value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvCenHi {
      get { return ivCenHi_; }
      set {
        ivCenHi_ = value;
      }
    }

    /// <summary>Field number for the "iv_cen_lo" field.</summary>
    public const int IvCenLoFieldNumber = 166;
    private float ivCenLo_;
    /// <summary>
    /// Censored implied volatility low value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvCenLo {
      get { return ivCenLo_; }
      set {
        ivCenLo_ = value;
      }
    }

    /// <summary>Field number for the "sdiv_hi" field.</summary>
    public const int SdivHiFieldNumber = 169;
    private float sdivHi_;
    /// <summary>
    /// Continuous carry rate, high value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SdivHi {
      get { return sdivHi_; }
      set {
        sdivHi_ = value;
      }
    }

    /// <summary>Field number for the "sdiv_lo" field.</summary>
    public const int SdivLoFieldNumber = 172;
    private float sdivLo_;
    /// <summary>
    /// Continuous carry rate, low value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SdivLo {
      get { return sdivLo_; }
      set {
        sdivLo_ = value;
      }
    }

    /// <summary>Field number for the "u_prc_ratio_hi" field.</summary>
    public const int UPrcRatioHiFieldNumber = 175;
    private double uPrcRatioHi_;
    /// <summary>
    /// Underlying price offset value, high value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UPrcRatioHi {
      get { return uPrcRatioHi_; }
      set {
        uPrcRatioHi_ = value;
      }
    }

    /// <summary>Field number for the "u_prc_ratio_lo" field.</summary>
    public const int UPrcRatioLoFieldNumber = 178;
    private double uPrcRatioLo_;
    /// <summary>
    /// Underlying price offset value, low value (during bar)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UPrcRatioLo {
      get { return uPrcRatioLo_; }
      set {
        uPrcRatioLo_ = value;
      }
    }

    /// <summary>Field number for the "slope_hi" field.</summary>
    public const int SlopeHiFieldNumber = 181;
    private float slopeHi_;
    /// <summary>
    /// Slope high value (during bar).  The difference between the put and call at 1/2 standard deviation from the ATM point.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SlopeHi {
      get { return slopeHi_; }
      set {
        slopeHi_ = value;
      }
    }

    /// <summary>Field number for the "slope_lo" field.</summary>
    public const int SlopeLoFieldNumber = 184;
    private float slopeLo_;
    /// <summary>
    /// Slope low value (during bar).  The difference between the put and call at 1/2 standard deviation from the ATM point.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SlopeLo {
      get { return slopeLo_; }
      set {
        slopeLo_ = value;
      }
    }

    /// <summary>Field number for the "var_swap_fV" field.</summary>
    public const int VarSwapFVFieldNumber = 187;
    private float varSwapFV_;
    /// <summary>
    /// variance swap fair value (estimated by numerical integration over OTM price surface)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VarSwapFV {
      get { return varSwapFV_; }
      set {
        varSwapFV_ = value;
      }
    }

    /// <summary>Field number for the "max_dIVol" field.</summary>
    public const int MaxDIVolFieldNumber = 190;
    private float maxDIVol_;
    /// <summary>
    /// maximum change in IVol (between LSA rec publishes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxDIVol {
      get { return maxDIVol_; }
      set {
        maxDIVol_ = value;
      }
    }

    /// <summary>Field number for the "max_dSDiv" field.</summary>
    public const int MaxDSDivFieldNumber = 193;
    private float maxDSDiv_;
    /// <summary>
    /// maximum change is SDiv (between LSA rec publishes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxDSDiv {
      get { return maxDSDiv_; }
      set {
        maxDSDiv_ = value;
      }
    }

    /// <summary>Field number for the "u_prc_sPY" field.</summary>
    public const int UPrcSPYFieldNumber = 196;
    private double uPrcSPY_;
    /// <summary>
    /// SPY underlying price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UPrcSPY {
      get { return uPrcSPY_; }
      set {
        uPrcSPY_ = value;
      }
    }

    /// <summary>Field number for the "ivol_sPY" field.</summary>
    public const int IvolSPYFieldNumber = 199;
    private float ivolSPY_;
    /// <summary>
    /// SPY atm ivol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvolSPY {
      get { return ivolSPY_; }
      set {
        ivolSPY_ = value;
      }
    }

    /// <summary>Field number for the "ivxx_sPY" field.</summary>
    public const int IvxxSPYFieldNumber = 202;
    private float ivxxSPY_;
    /// <summary>
    /// SPY fixed strike ivol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IvxxSPY {
      get { return ivxxSPY_; }
      set {
        ivxxSPY_ = value;
      }
    }

    /// <summary>Field number for the "market_segment" field.</summary>
    public const int MarketSegmentFieldNumber = 205;
    private global::Spiderrock.Protobuf.MarketSegment marketSegment_ = global::Spiderrock.Protobuf.MarketSegment.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MarketSegment MarketSegment {
      get { return marketSegment_; }
      set {
        marketSegment_ = value;
      }
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 208;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ts_;
    /// <summary>
    /// last update time (Date)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Ts {
      get { return ts_; }
      set {
        ts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OptionAtmMinuteBarData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OptionAtmMinuteBarData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(Ticker, other.Ticker)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (StartTimeMinute != other.StartTimeMinute) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (EndTimeMinute != other.EndTimeMinute) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UPrc, other.UPrc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Years, other.Years)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate, other.Rate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sdiv, other.Sdiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ddiv, other.Ddiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UPrcRatio, other.UPrcRatio)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ivol, other.Ivol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ivxx, other.Ivxx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvCen, other.IvCen)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Slope, other.Slope)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VWidth, other.VWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RefStrike, other.RefStrike)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvolHi, other.IvolHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvolLo, other.IvolLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvxxHi, other.IvxxHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvxxLo, other.IvxxLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvCenHi, other.IvCenHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvCenLo, other.IvCenLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SdivHi, other.SdivHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SdivLo, other.SdivLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UPrcRatioHi, other.UPrcRatioHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UPrcRatioLo, other.UPrcRatioLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SlopeHi, other.SlopeHi)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SlopeLo, other.SlopeLo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VarSwapFV, other.VarSwapFV)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxDIVol, other.MaxDIVol)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxDSDiv, other.MaxDSDiv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UPrcSPY, other.UPrcSPY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvolSPY, other.IvolSPY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IvxxSPY, other.IvxxSPY)) return false;
      if (MarketSegment != other.MarketSegment) return false;
      if (!object.Equals(Ts, other.Ts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (ticker_ != null) hash ^= Ticker.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (StartTimeMinute.Length != 0) hash ^= StartTimeMinute.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (EndTimeMinute.Length != 0) hash ^= EndTimeMinute.GetHashCode();
      if (UPrc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UPrc);
      if (Years != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Years);
      if (Rate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate);
      if (Sdiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sdiv);
      if (Ddiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ddiv);
      if (UPrcRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UPrcRatio);
      if (Ivol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ivol);
      if (Ivxx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ivxx);
      if (IvCen != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvCen);
      if (Slope != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Slope);
      if (VWidth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VWidth);
      if (RefStrike != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RefStrike);
      if (IvolHi != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvolHi);
      if (IvolLo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvolLo);
      if (IvxxHi != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvxxHi);
      if (IvxxLo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvxxLo);
      if (IvCenHi != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvCenHi);
      if (IvCenLo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvCenLo);
      if (SdivHi != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SdivHi);
      if (SdivLo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SdivLo);
      if (UPrcRatioHi != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UPrcRatioHi);
      if (UPrcRatioLo != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UPrcRatioLo);
      if (SlopeHi != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SlopeHi);
      if (SlopeLo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SlopeLo);
      if (VarSwapFV != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VarSwapFV);
      if (MaxDIVol != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxDIVol);
      if (MaxDSDiv != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxDSDiv);
      if (UPrcSPY != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UPrcSPY);
      if (IvolSPY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvolSPY);
      if (IvxxSPY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IvxxSPY);
      if (MarketSegment != global::Spiderrock.Protobuf.MarketSegment.Unspecified) hash ^= MarketSegment.GetHashCode();
      if (ts_ != null) hash ^= Ts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (startTime_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(StartTime);
      }
      if (StartTimeMinute.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(StartTimeMinute);
      }
      if (endTime_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(EndTime);
      }
      if (EndTimeMinute.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(EndTimeMinute);
      }
      if (UPrc != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(UPrc);
      }
      if (Years != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Years);
      }
      if (Rate != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Rate);
      }
      if (Sdiv != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(Sdiv);
      }
      if (Ddiv != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(Ddiv);
      }
      if (UPrcRatio != 0D) {
        output.WriteRawTag(145, 8);
        output.WriteDouble(UPrcRatio);
      }
      if (Ivol != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(Ivol);
      }
      if (Ivxx != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(Ivxx);
      }
      if (IvCen != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(IvCen);
      }
      if (Slope != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Slope);
      }
      if (VWidth != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(VWidth);
      }
      if (RefStrike != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(RefStrike);
      }
      if (IvolHi != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(IvolHi);
      }
      if (IvolLo != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(IvolLo);
      }
      if (IvxxHi != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(IvxxHi);
      }
      if (IvxxLo != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(IvxxLo);
      }
      if (IvCenHi != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(IvCenHi);
      }
      if (IvCenLo != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(IvCenLo);
      }
      if (SdivHi != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(SdivHi);
      }
      if (SdivLo != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(SdivLo);
      }
      if (UPrcRatioHi != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(UPrcRatioHi);
      }
      if (UPrcRatioLo != 0D) {
        output.WriteRawTag(145, 11);
        output.WriteDouble(UPrcRatioLo);
      }
      if (SlopeHi != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(SlopeHi);
      }
      if (SlopeLo != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(SlopeLo);
      }
      if (VarSwapFV != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(VarSwapFV);
      }
      if (MaxDIVol != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(MaxDIVol);
      }
      if (MaxDSDiv != 0F) {
        output.WriteRawTag(141, 12);
        output.WriteFloat(MaxDSDiv);
      }
      if (UPrcSPY != 0D) {
        output.WriteRawTag(161, 12);
        output.WriteDouble(UPrcSPY);
      }
      if (IvolSPY != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(IvolSPY);
      }
      if (IvxxSPY != 0F) {
        output.WriteRawTag(213, 12);
        output.WriteFloat(IvxxSPY);
      }
      if (MarketSegment != global::Spiderrock.Protobuf.MarketSegment.Unspecified) {
        output.WriteRawTag(232, 12);
        output.WriteEnum((int) MarketSegment);
      }
      if (ts_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Ts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (ticker_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Ticker);
      }
      if (startTime_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(StartTime);
      }
      if (StartTimeMinute.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(StartTimeMinute);
      }
      if (endTime_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(EndTime);
      }
      if (EndTimeMinute.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(EndTimeMinute);
      }
      if (UPrc != 0D) {
        output.WriteRawTag(153, 7);
        output.WriteDouble(UPrc);
      }
      if (Years != 0F) {
        output.WriteRawTag(181, 7);
        output.WriteFloat(Years);
      }
      if (Rate != 0F) {
        output.WriteRawTag(205, 7);
        output.WriteFloat(Rate);
      }
      if (Sdiv != 0F) {
        output.WriteRawTag(229, 7);
        output.WriteFloat(Sdiv);
      }
      if (Ddiv != 0F) {
        output.WriteRawTag(253, 7);
        output.WriteFloat(Ddiv);
      }
      if (UPrcRatio != 0D) {
        output.WriteRawTag(145, 8);
        output.WriteDouble(UPrcRatio);
      }
      if (Ivol != 0F) {
        output.WriteRawTag(173, 8);
        output.WriteFloat(Ivol);
      }
      if (Ivxx != 0F) {
        output.WriteRawTag(197, 8);
        output.WriteFloat(Ivxx);
      }
      if (IvCen != 0F) {
        output.WriteRawTag(221, 8);
        output.WriteFloat(IvCen);
      }
      if (Slope != 0F) {
        output.WriteRawTag(245, 8);
        output.WriteFloat(Slope);
      }
      if (VWidth != 0F) {
        output.WriteRawTag(141, 9);
        output.WriteFloat(VWidth);
      }
      if (RefStrike != 0F) {
        output.WriteRawTag(165, 9);
        output.WriteFloat(RefStrike);
      }
      if (IvolHi != 0F) {
        output.WriteRawTag(189, 9);
        output.WriteFloat(IvolHi);
      }
      if (IvolLo != 0F) {
        output.WriteRawTag(213, 9);
        output.WriteFloat(IvolLo);
      }
      if (IvxxHi != 0F) {
        output.WriteRawTag(237, 9);
        output.WriteFloat(IvxxHi);
      }
      if (IvxxLo != 0F) {
        output.WriteRawTag(133, 10);
        output.WriteFloat(IvxxLo);
      }
      if (IvCenHi != 0F) {
        output.WriteRawTag(157, 10);
        output.WriteFloat(IvCenHi);
      }
      if (IvCenLo != 0F) {
        output.WriteRawTag(181, 10);
        output.WriteFloat(IvCenLo);
      }
      if (SdivHi != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(SdivHi);
      }
      if (SdivLo != 0F) {
        output.WriteRawTag(229, 10);
        output.WriteFloat(SdivLo);
      }
      if (UPrcRatioHi != 0D) {
        output.WriteRawTag(249, 10);
        output.WriteDouble(UPrcRatioHi);
      }
      if (UPrcRatioLo != 0D) {
        output.WriteRawTag(145, 11);
        output.WriteDouble(UPrcRatioLo);
      }
      if (SlopeHi != 0F) {
        output.WriteRawTag(173, 11);
        output.WriteFloat(SlopeHi);
      }
      if (SlopeLo != 0F) {
        output.WriteRawTag(197, 11);
        output.WriteFloat(SlopeLo);
      }
      if (VarSwapFV != 0F) {
        output.WriteRawTag(221, 11);
        output.WriteFloat(VarSwapFV);
      }
      if (MaxDIVol != 0F) {
        output.WriteRawTag(245, 11);
        output.WriteFloat(MaxDIVol);
      }
      if (MaxDSDiv != 0F) {
        output.WriteRawTag(141, 12);
        output.WriteFloat(MaxDSDiv);
      }
      if (UPrcSPY != 0D) {
        output.WriteRawTag(161, 12);
        output.WriteDouble(UPrcSPY);
      }
      if (IvolSPY != 0F) {
        output.WriteRawTag(189, 12);
        output.WriteFloat(IvolSPY);
      }
      if (IvxxSPY != 0F) {
        output.WriteRawTag(213, 12);
        output.WriteFloat(IvxxSPY);
      }
      if (MarketSegment != global::Spiderrock.Protobuf.MarketSegment.Unspecified) {
        output.WriteRawTag(232, 12);
        output.WriteEnum((int) MarketSegment);
      }
      if (ts_ != null) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(Ts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (ticker_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
      }
      if (startTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (StartTimeMinute.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StartTimeMinute);
      }
      if (endTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (EndTimeMinute.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTimeMinute);
      }
      if (UPrc != 0D) {
        size += 2 + 8;
      }
      if (Years != 0F) {
        size += 2 + 4;
      }
      if (Rate != 0F) {
        size += 2 + 4;
      }
      if (Sdiv != 0F) {
        size += 2 + 4;
      }
      if (Ddiv != 0F) {
        size += 2 + 4;
      }
      if (UPrcRatio != 0D) {
        size += 2 + 8;
      }
      if (Ivol != 0F) {
        size += 2 + 4;
      }
      if (Ivxx != 0F) {
        size += 2 + 4;
      }
      if (IvCen != 0F) {
        size += 2 + 4;
      }
      if (Slope != 0F) {
        size += 2 + 4;
      }
      if (VWidth != 0F) {
        size += 2 + 4;
      }
      if (RefStrike != 0F) {
        size += 2 + 4;
      }
      if (IvolHi != 0F) {
        size += 2 + 4;
      }
      if (IvolLo != 0F) {
        size += 2 + 4;
      }
      if (IvxxHi != 0F) {
        size += 2 + 4;
      }
      if (IvxxLo != 0F) {
        size += 2 + 4;
      }
      if (IvCenHi != 0F) {
        size += 2 + 4;
      }
      if (IvCenLo != 0F) {
        size += 2 + 4;
      }
      if (SdivHi != 0F) {
        size += 2 + 4;
      }
      if (SdivLo != 0F) {
        size += 2 + 4;
      }
      if (UPrcRatioHi != 0D) {
        size += 2 + 8;
      }
      if (UPrcRatioLo != 0D) {
        size += 2 + 8;
      }
      if (SlopeHi != 0F) {
        size += 2 + 4;
      }
      if (SlopeLo != 0F) {
        size += 2 + 4;
      }
      if (VarSwapFV != 0F) {
        size += 2 + 4;
      }
      if (MaxDIVol != 0F) {
        size += 2 + 4;
      }
      if (MaxDSDiv != 0F) {
        size += 2 + 4;
      }
      if (UPrcSPY != 0D) {
        size += 2 + 8;
      }
      if (IvolSPY != 0F) {
        size += 2 + 4;
      }
      if (IvxxSPY != 0F) {
        size += 2 + 4;
      }
      if (MarketSegment != global::Spiderrock.Protobuf.MarketSegment.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarketSegment);
      }
      if (ts_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OptionAtmMinuteBarData other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.ticker_ != null) {
        if (ticker_ == null) {
          Ticker = new global::Spiderrock.Protobuf.TickerKey();
        }
        Ticker.MergeFrom(other.Ticker);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.StartTimeMinute.Length != 0) {
        StartTimeMinute = other.StartTimeMinute;
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.EndTimeMinute.Length != 0) {
        EndTimeMinute = other.EndTimeMinute;
      }
      if (other.UPrc != 0D) {
        UPrc = other.UPrc;
      }
      if (other.Years != 0F) {
        Years = other.Years;
      }
      if (other.Rate != 0F) {
        Rate = other.Rate;
      }
      if (other.Sdiv != 0F) {
        Sdiv = other.Sdiv;
      }
      if (other.Ddiv != 0F) {
        Ddiv = other.Ddiv;
      }
      if (other.UPrcRatio != 0D) {
        UPrcRatio = other.UPrcRatio;
      }
      if (other.Ivol != 0F) {
        Ivol = other.Ivol;
      }
      if (other.Ivxx != 0F) {
        Ivxx = other.Ivxx;
      }
      if (other.IvCen != 0F) {
        IvCen = other.IvCen;
      }
      if (other.Slope != 0F) {
        Slope = other.Slope;
      }
      if (other.VWidth != 0F) {
        VWidth = other.VWidth;
      }
      if (other.RefStrike != 0F) {
        RefStrike = other.RefStrike;
      }
      if (other.IvolHi != 0F) {
        IvolHi = other.IvolHi;
      }
      if (other.IvolLo != 0F) {
        IvolLo = other.IvolLo;
      }
      if (other.IvxxHi != 0F) {
        IvxxHi = other.IvxxHi;
      }
      if (other.IvxxLo != 0F) {
        IvxxLo = other.IvxxLo;
      }
      if (other.IvCenHi != 0F) {
        IvCenHi = other.IvCenHi;
      }
      if (other.IvCenLo != 0F) {
        IvCenLo = other.IvCenLo;
      }
      if (other.SdivHi != 0F) {
        SdivHi = other.SdivHi;
      }
      if (other.SdivLo != 0F) {
        SdivLo = other.SdivLo;
      }
      if (other.UPrcRatioHi != 0D) {
        UPrcRatioHi = other.UPrcRatioHi;
      }
      if (other.UPrcRatioLo != 0D) {
        UPrcRatioLo = other.UPrcRatioLo;
      }
      if (other.SlopeHi != 0F) {
        SlopeHi = other.SlopeHi;
      }
      if (other.SlopeLo != 0F) {
        SlopeLo = other.SlopeLo;
      }
      if (other.VarSwapFV != 0F) {
        VarSwapFV = other.VarSwapFV;
      }
      if (other.MaxDIVol != 0F) {
        MaxDIVol = other.MaxDIVol;
      }
      if (other.MaxDSDiv != 0F) {
        MaxDSDiv = other.MaxDSDiv;
      }
      if (other.UPrcSPY != 0D) {
        UPrcSPY = other.UPrcSPY;
      }
      if (other.IvolSPY != 0F) {
        IvolSPY = other.IvolSPY;
      }
      if (other.IvxxSPY != 0F) {
        IvxxSPY = other.IvxxSPY;
      }
      if (other.MarketSegment != global::Spiderrock.Protobuf.MarketSegment.Unspecified) {
        MarketSegment = other.MarketSegment;
      }
      if (other.ts_ != null) {
        if (ts_ == null) {
          Ts = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Ts.MergeFrom(other.Ts);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 850: {
            StartTimeMinute = input.ReadString();
            break;
          }
          case 874: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 898: {
            EndTimeMinute = input.ReadString();
            break;
          }
          case 921: {
            UPrc = input.ReadDouble();
            break;
          }
          case 949: {
            Years = input.ReadFloat();
            break;
          }
          case 973: {
            Rate = input.ReadFloat();
            break;
          }
          case 997: {
            Sdiv = input.ReadFloat();
            break;
          }
          case 1021: {
            Ddiv = input.ReadFloat();
            break;
          }
          case 1041: {
            UPrcRatio = input.ReadDouble();
            break;
          }
          case 1069: {
            Ivol = input.ReadFloat();
            break;
          }
          case 1093: {
            Ivxx = input.ReadFloat();
            break;
          }
          case 1117: {
            IvCen = input.ReadFloat();
            break;
          }
          case 1141: {
            Slope = input.ReadFloat();
            break;
          }
          case 1165: {
            VWidth = input.ReadFloat();
            break;
          }
          case 1189: {
            RefStrike = input.ReadFloat();
            break;
          }
          case 1213: {
            IvolHi = input.ReadFloat();
            break;
          }
          case 1237: {
            IvolLo = input.ReadFloat();
            break;
          }
          case 1261: {
            IvxxHi = input.ReadFloat();
            break;
          }
          case 1285: {
            IvxxLo = input.ReadFloat();
            break;
          }
          case 1309: {
            IvCenHi = input.ReadFloat();
            break;
          }
          case 1333: {
            IvCenLo = input.ReadFloat();
            break;
          }
          case 1357: {
            SdivHi = input.ReadFloat();
            break;
          }
          case 1381: {
            SdivLo = input.ReadFloat();
            break;
          }
          case 1401: {
            UPrcRatioHi = input.ReadDouble();
            break;
          }
          case 1425: {
            UPrcRatioLo = input.ReadDouble();
            break;
          }
          case 1453: {
            SlopeHi = input.ReadFloat();
            break;
          }
          case 1477: {
            SlopeLo = input.ReadFloat();
            break;
          }
          case 1501: {
            VarSwapFV = input.ReadFloat();
            break;
          }
          case 1525: {
            MaxDIVol = input.ReadFloat();
            break;
          }
          case 1549: {
            MaxDSDiv = input.ReadFloat();
            break;
          }
          case 1569: {
            UPrcSPY = input.ReadDouble();
            break;
          }
          case 1597: {
            IvolSPY = input.ReadFloat();
            break;
          }
          case 1621: {
            IvxxSPY = input.ReadFloat();
            break;
          }
          case 1640: {
            MarketSegment = (global::Spiderrock.Protobuf.MarketSegment) input.ReadEnum();
            break;
          }
          case 1666: {
            if (ts_ == null) {
              Ts = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Ts);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (ticker_ == null) {
              Ticker = new global::Spiderrock.Protobuf.TickerKey();
            }
            input.ReadMessage(Ticker);
            break;
          }
          case 826: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 850: {
            StartTimeMinute = input.ReadString();
            break;
          }
          case 874: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 898: {
            EndTimeMinute = input.ReadString();
            break;
          }
          case 921: {
            UPrc = input.ReadDouble();
            break;
          }
          case 949: {
            Years = input.ReadFloat();
            break;
          }
          case 973: {
            Rate = input.ReadFloat();
            break;
          }
          case 997: {
            Sdiv = input.ReadFloat();
            break;
          }
          case 1021: {
            Ddiv = input.ReadFloat();
            break;
          }
          case 1041: {
            UPrcRatio = input.ReadDouble();
            break;
          }
          case 1069: {
            Ivol = input.ReadFloat();
            break;
          }
          case 1093: {
            Ivxx = input.ReadFloat();
            break;
          }
          case 1117: {
            IvCen = input.ReadFloat();
            break;
          }
          case 1141: {
            Slope = input.ReadFloat();
            break;
          }
          case 1165: {
            VWidth = input.ReadFloat();
            break;
          }
          case 1189: {
            RefStrike = input.ReadFloat();
            break;
          }
          case 1213: {
            IvolHi = input.ReadFloat();
            break;
          }
          case 1237: {
            IvolLo = input.ReadFloat();
            break;
          }
          case 1261: {
            IvxxHi = input.ReadFloat();
            break;
          }
          case 1285: {
            IvxxLo = input.ReadFloat();
            break;
          }
          case 1309: {
            IvCenHi = input.ReadFloat();
            break;
          }
          case 1333: {
            IvCenLo = input.ReadFloat();
            break;
          }
          case 1357: {
            SdivHi = input.ReadFloat();
            break;
          }
          case 1381: {
            SdivLo = input.ReadFloat();
            break;
          }
          case 1401: {
            UPrcRatioHi = input.ReadDouble();
            break;
          }
          case 1425: {
            UPrcRatioLo = input.ReadDouble();
            break;
          }
          case 1453: {
            SlopeHi = input.ReadFloat();
            break;
          }
          case 1477: {
            SlopeLo = input.ReadFloat();
            break;
          }
          case 1501: {
            VarSwapFV = input.ReadFloat();
            break;
          }
          case 1525: {
            MaxDIVol = input.ReadFloat();
            break;
          }
          case 1549: {
            MaxDSDiv = input.ReadFloat();
            break;
          }
          case 1569: {
            UPrcSPY = input.ReadDouble();
            break;
          }
          case 1597: {
            IvolSPY = input.ReadFloat();
            break;
          }
          case 1621: {
            IvxxSPY = input.ReadFloat();
            break;
          }
          case 1640: {
            MarketSegment = (global::Spiderrock.Protobuf.MarketSegment) input.ReadEnum();
            break;
          }
          case 1666: {
            if (ts_ == null) {
              Ts = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Ts);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OptionAtmMinuteBarData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.OptionAtmMinuteBarData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          ekey_ = other.ekey_ != null ? other.ekey_.Clone() : null;
          tradingDate_ = other.tradingDate_ != null ? other.tradingDate_.Clone() : null;
          minute_ = other.minute_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "ekey" field.</summary>
        public const int EkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey ekey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Ekey {
          get { return ekey_; }
          set {
            ekey_ = value;
          }
        }

        /// <summary>Field number for the "trading_date" field.</summary>
        public const int TradingDateFieldNumber = 11;
        private global::Google.Protobuf.WellKnownTypes.Timestamp tradingDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp TradingDate {
          get { return tradingDate_; }
          set {
            tradingDate_ = value;
          }
        }

        /// <summary>Field number for the "minute" field.</summary>
        public const int MinuteFieldNumber = 12;
        private int minute_;
        /// <summary>
        /// minutes since 2000-01-01
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Minute {
          get { return minute_; }
          set {
            minute_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Ekey, other.Ekey)) return false;
          if (!object.Equals(TradingDate, other.TradingDate)) return false;
          if (Minute != other.Minute) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ekey_ != null) hash ^= Ekey.GetHashCode();
          if (tradingDate_ != null) hash ^= TradingDate.GetHashCode();
          if (Minute != 0) hash ^= Minute.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ekey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ekey);
          }
          if (tradingDate_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(TradingDate);
          }
          if (Minute != 0) {
            output.WriteRawTag(96);
            output.WriteInt32(Minute);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ekey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Ekey);
          }
          if (tradingDate_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(TradingDate);
          }
          if (Minute != 0) {
            output.WriteRawTag(96);
            output.WriteInt32(Minute);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ekey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ekey);
          }
          if (tradingDate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradingDate);
          }
          if (Minute != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.ekey_ != null) {
            if (ekey_ == null) {
              Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Ekey.MergeFrom(other.Ekey);
          }
          if (other.tradingDate_ != null) {
            if (tradingDate_ == null) {
              TradingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            TradingDate.MergeFrom(other.TradingDate);
          }
          if (other.Minute != 0) {
            Minute = other.Minute;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (ekey_ == null) {
                  Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Ekey);
                break;
              }
              case 90: {
                if (tradingDate_ == null) {
                  TradingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(TradingDate);
                break;
              }
              case 96: {
                Minute = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (ekey_ == null) {
                  Ekey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Ekey);
                break;
              }
              case 90: {
                if (tradingDate_ == null) {
                  TradingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(TradingDate);
                break;
              }
              case 96: {
                Minute = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
